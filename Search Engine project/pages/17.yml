--- !ruby/object:WebPage
page: !ruby/object:Nokogiri::HTML::Document
  decorators: 
  node_cache:
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  errors:
  - !ruby/exception:Nokogiri::XML::SyntaxError
    message: |
      Tag footer invalid
    domain: 5
    code: 801
    level: 2
    file: "/tmp/open-uri20151214-8696-rhbchm"
    line: 186
    str1: footer
    str2: 
    str3: 
    int1: 0
    column: 121
address: http://news.indiana.edu/releases/iu/2015/12/next-gen-materials-grant.shtml
inboundLinks: []
lines:
- |2+

- "        \n"
- "        \n"
- "        \n"
- "        \n"
- |
  Skip to Content
- |
  Skip to Search
- |
  Skip to Navigation
- |2+

- " \n"
- "    \n"
- "       \n"
- "        \n"
- "        \n"
- "            \n"
- "        \n"
- "\t\n"
- "\t\t\n"
- "\t\t\t\n"
- "\t\t\t\t\n"
- "\t\t\t\t\tIndiana University Bloomington\n"
- "\t\t\t\t\tIndiana University Bloomington\n"
- "\t\t\t\t\tIU Bloomington\n"
- "\t\t\t\t\n"
- "\t\t\t\n"
- "\t\t\n"
- "\t\n"
- "        \n"
- "    \n"
- "    \n"
- "        \n"
- "        \n"
- "        \n"
- "            \n"
- "        \n"
- |2+

- |2+

- "\t\n"
- "\t\tSearch\n"
- "\t\n"
- "        \n"
- "    \n"
- "    \n"
- "        \n"
- "        \n"
- "        \n"
- |2+

- |
  IU Bloomington Newsroom
- |2+

- |2+

- " \n"
- "    \n"
- "        \n"
- "        \n"
- "            \n"
- "                \n"
- "            \n"
- "            \n"
- |2
          All IUB NewsArts & HumanitiesBusinessInternationalLaw & PolicyLife & Health SciencesScience & TechnologyIU Athletics
- |2
                  IUB Newsroom »NSF awards IU $1.2M to study self-assembling molecules, software for next-generation materialsNSF awards IU $1.2M to study self-assembling molecules, software for next-generation materialsInterdisciplinary project to support development of more efficient solar cells, other future materials Dec. 1, 2015FOR IMMEDIATE RELEASE
- |
  BLOOMINGTON, Ind. -- The National Science Foundation has awarded $1.2 million to three research groups at Indiana University to advance research on self-assembling molecules and computer-aided design software required to create the next generation of solar cells, circuits, sensors and other technology.
- |
  This interdisciplinary team in the IU Bloomington College of Arts and Sciences' Department of Chemistry is led by Amar Flood, Steven Tait and Peter Ortoleva in collaboration with Mu-Hyun Baik of the Korea Advanced Institute of Science and Technology, who previously served at IU.
- |
  Designing new materials at the molecular level is a key goal of the U.S. government's Materials Genome Initiative, a project launched in 2011 to reduce the cost, and speed the creation, of these materials. As recipients of funds from the NSF's Designing Materials to Revolutionize and Engineer Our Future program, the IU scientists will contribute to this national initiative.
- |
  "There are more than 100 million known molecules, but in the vast majority of cases we cannot predict what sort of structure they will form when those molecules start packing together," said Amar Flood, the James F. Jackson Professor of Chemistry and Luther Dana Waterman Professor in the IU Bloomington Department of Chemistry, who is the principal investigator on the grant. "We want to be able to predict, as well as design, those structures."
- |
  The results would represent a "transformative approach to the discovery of organic materials," he said, combining computer-aided design, chemical synthesis and molecular characterization methods.
- |
  And recently, Flood and colleagues have shown such an ambitious goal is achievable.
- |
  In a paper published Nov. 23 in Chemistry -- A European Journal, the IU scientists describe an innovative "one-pot" method to synthesize a new macromolecule called a tricarbazolo triazolophane, or "tricarb."
- |
  A multifunctional, ring-shaped structure, tricarb molecules bear alignment markers so that they line up perfectly with each other upon contact to form highly organized, multilayered patterns. Tricarb molecules also have a central pocket to capture the negatively charged particles known as anions.
- |
  "Amar has developed a very elegant synthesis," said Tait, an associate professor of chemistry who is a co-author on the paper and also a co-investigator on the NSF grant. "The result is molecules that recognize each other in a very specific way to order and stack in beautiful, flower-shaped crystalline patterns with potentially transformative properties."
- |
  The NSF-funded project will support creating molecular structures, like the tricarb molecule, that are specifically pre-programmed to self-assemble into three-dimensional structures that go beyond the comparatively simple, two-dimensional molecular arrangements.
- |
  "Creating building blocks that self-assemble into functional materials will be a major breakthrough in materials science and is a key component of the Materials Genome Initiative," said Stephen C. Jacobson, chair of the IU Bloomington Department of Chemistry. "I am pleased that the NSF has recognized our faculty's combined expertise in synthesis, characterization and theory in selecting them to contribute to this important initiative."
- |
  Specifically, Flood said, the ability to alternate different molecules in highly ordered patterns is a key step in creating organic electronics, a new class of material whose applications include highly efficient solar panels and advanced computer circuitry.
- |
  "The best solar cells right now are made of extremely pure silicon, which requires a very precise -- and expensive -- production process," Tait said. "But if we can create extremely pure, self-assembling organic materials, controlling the order of their interfaces and components at the molecular level, the performance of these organic materials will improve significantly, and their costs will go down."
- |
  Most important for the creation of new molecular structures, the IU team will use the grant to develop computer-aided design software enabling virtual experimentation with the potential to examine the millions of molecular compounds of interest to material scientists.
- |
  Currently, Flood explained, scientists must engage in an arduous and time-consuming process of trial-and-error to design new structures with highly specialized properties since no blueprint exists for how molecules will react upon coming into contact with each other. But with virtual experimentation, molecular engineers could screen 100 potential molecular combinations over 100 days, only then devoting time and resources to synthesize the top five candidates, which can itself require about 100 days per compound, creating enormous time-savings.
- |
  "CAD software is prevalent in electrical, mechanical and civil engineering, and we need that same technology at our fingertips for molecular and materials engineering," Flood said. "The innovations coming from our computational collaborators are key."
- |
  These collaborations are with Ortoleva, a Distinguished Professor in the IU Bloomington Department of Chemistry who will help develop the CAD software using recent advances in multi-scale simulation that employ Baik's work on atomic-level force fields.
- |
  "Ultimately, we plan to show experimentally how molecules can be programmed so that they assemble themselves into 2-D and 3-D arrangements, as well as produce a working, operational and accurate simulation software," Flood added. "Our goal will be to achieve high fidelity between theory, design and experimentation."
- "In addition to Flood and Tait, IU contributors to the journal paper were Brandon
  E. Hirsch, Yun Liu and James R. Dobscha, all graduate students in chemistry, and
  David W. Burke, an undergraduate student. Also an author on the paper is Semin Lee,
  a former IU graduate student and a postdoctoral fellow of the Beckman Institute
  for Advanced Science and Technology at the University of Illinois at Urbana-Champaign.PrintShareThe
  ring-shaped macromolecule tricarbazolo triazolophane, or \"tricarb,\" self-assembles
  into highly organized, multilayered patterns. | Photo by \n"
- "                            \n"
- "                            Indiana UniversityPrint-Quality PhotoAmar Flood | Photo
  by \n"
- "                            \n"
- "                            Indiana UniversityPrint-Quality PhotoMedia ContactsKevin Fryling
  Office \n"
- "                        \n"
- |2
                          812-856-2988kfryling@iu.edu Web version: http://news.indiana.edu/releases/iu/2015/12/next-gen-materials-grant.shtml
- "                \n"
- "                \n"
- "        \n"
- "        \n"
- |2
          IU NewsroomArchiveContactNewslettersRSS Feeds
- "                                Facebook  Twitter  YouTube  LinkedIn Google+ \n"
- " \n"
- "    \n"
- "    \n"
- "            \n"
- "        \n"
- "                \n"
- "            \n"
- "        \n"
- "        \n"
- "        \n"
- "        \n"
- "            \n"
- "        \n"
- "\t\tFulfilling the Promise\n"
- "\t\tPrivacy Notice\n"
- "\t\t\n"
- "\t\t\t\n"
- "\t\t\t\n"
- "\t\t\t\tCopyright © 2015\t\t\t\n"
- "\t\t\tThe Trustees of Indiana University,\n"
- "\t\t\tCopyright Complaints\n"
- "\t\t\n"
- "\t\n"
- "Interdisciplinary project to support development of more efficient solar cells,
  other future materials FOR IMMEDIATE RELEASEBLOOMINGTON, Ind. -- The National Science
  Foundation has awarded $1.2 million to three research groups at Indiana University
  to advance research on self-assembling molecules and computer-aided design software
  required to create the next generation of solar cells, circuits, sensors and other
  technology.This interdisciplinary team in the IU Bloomington College of Arts and
  Sciences' Department of Chemistry is led by Amar Flood, Steven Tait and Peter Ortoleva in
  collaboration with Mu-Hyun Baik of the Korea Advanced Institute of Science and Technology,
  who previously served at IU.Designing new materials at the molecular level is a
  key goal of the U.S. government's Materials Genome Initiative, a project launched
  in 2011 to reduce the cost, and speed the creation, of these materials. As recipients
  of funds from the NSF's Designing Materials to Revolutionize and Engineer Our Future
  program, the IU scientists will contribute to this national initiative.\"There are
  more than 100 million known molecules, but in the vast majority of cases we cannot
  predict what sort of structure they will form when those molecules start packing
  together,\" said Amar Flood, the James F. Jackson Professor of Chemistry and Luther
  Dana Waterman Professor in the IU Bloomington Department of Chemistry, who is the
  principal investigator on the grant. \"We want to be able to predict, as well as
  design, those structures.\"The results would represent a \"transformative approach
  to the discovery of organic materials,\" he said, combining computer-aided design,
  chemical synthesis and molecular characterization methods.And recently, Flood and
  colleagues have shown such an ambitious goal is achievable.In a paper published
  Nov. 23 in Chemistry -- A European Journal, the IU scientists describe an innovative
  \"one-pot\" method to synthesize a new macromolecule called a tricarbazolo triazolophane,
  or \"tricarb.\"A multifunctional, ring-shaped structure, tricarb molecules bear
  alignment markers so that they line up perfectly with each other upon contact to
  form highly organized, multilayered patterns. Tricarb molecules also have a central
  pocket to capture the negatively charged particles known as anions.\"Amar has developed
  a very elegant synthesis,\" said Tait, an associate professor of chemistry who is
  a co-author on the paper and also a co-investigator on the NSF grant. \"The result
  is molecules that recognize each other in a very specific way to order and stack
  in beautiful, flower-shaped crystalline patterns with potentially transformative
  properties.\"The NSF-funded project will support creating molecular structures,
  like the tricarb molecule, that are specifically pre-programmed to self-assemble
  into three-dimensional structures that go beyond the comparatively simple, two-dimensional
  molecular arrangements.\"Creating building blocks that self-assemble into functional
  materials will be a major breakthrough in materials science and is a key component
  of the Materials Genome Initiative,\" said Stephen C. Jacobson, chair of the IU
  Bloomington Department of Chemistry. \"I am pleased that the NSF has recognized
  our faculty's combined expertise in synthesis, characterization and theory in selecting
  them to contribute to this important initiative.\"Specifically, Flood said, the
  ability to alternate different molecules in highly ordered patterns is a key step
  in creating organic electronics, a new class of material whose applications include
  highly efficient solar panels and advanced computer circuitry.\"The best solar cells
  right now are made of extremely pure silicon, which requires a very precise -- and
  expensive -- production process,\" Tait said. \"But if we can create extremely pure,
  self-assembling organic materials, controlling the order of their interfaces and
  components at the molecular level, the performance of these organic materials will
  improve significantly, and their costs will go down.\"Most important for the creation
  of new molecular structures, the IU team will use the grant to develop computer-aided
  design software enabling virtual experimentation with the potential to examine the
  millions of molecular compounds of interest to material scientists.Currently, Flood
  explained, scientists must engage in an arduous and time-consuming process of trial-and-error
  to design new structures with highly specialized properties since no blueprint exists
  for how molecules will react upon coming into contact with each other. But with
  virtual experimentation, molecular engineers could screen 100 potential molecular
  combinations over 100 days, only then devoting time and resources to synthesize
  the top five candidates, which can itself require about 100 days per compound, creating
  enormous time-savings.\"CAD software is prevalent in electrical, mechanical and
  civil engineering, and we need that same technology at our fingertips for molecular
  and materials engineering,\" Flood said. \"The innovations coming from our computational
  collaborators are key.\"These collaborations are with Ortoleva, a Distinguished
  Professor in the IU Bloomington Department of Chemistry who will help develop the
  CAD software using recent advances in multi-scale simulation that employ Baik's
  work on atomic-level force fields.\"Ultimately, we plan to show experimentally how
  molecules can be programmed so that they assemble themselves into 2-D and 3-D arrangements,
  as well as produce a working, operational and accurate simulation software,\" Flood
  added. \"Our goal will be to achieve high fidelity between theory, design and experimentation.\"In
  addition to Flood and Tait, IU contributors to the journal paper were Brandon E.
  Hirsch, Yun Liu and James R. Dobscha, all graduate students in chemistry, and David
  W. Burke, an undergraduate student. Also an author on the paper is Semin Lee, a
  former IU graduate student and a postdoctoral fellow of the Beckman Institute for
  Advanced Science and Technology at the University of Illinois at Urbana-Champaign.The
  ring-shaped macromolecule tricarbazolo triazolophane, or \"tricarb,\" self-assembles
  into highly organized, multilayered patterns. | Photo by \n"
- "                            \n"
- "                            Indiana UniversityPrint-Quality PhotoAmar Flood | Photo
  by \n"
- "                            \n"
- |2
                              Indiana UniversityPrint-Quality PhotoFulfilling the PromisePrivacy Notice
- "\t\t\t\n"
- "\t\t\t\n"
- "\t\t\t\tCopyright © 2015\t\t\t\n"
- "\t\t\tThe Trustees of Indiana University,\n"
- "\t\t\tCopyright Complaints\n"
- "\t\t"
index:
  skip: !ruby/object:Word
    word: skip
    stem: skip
    docFrequency: 4.0
    docPositions:
    - 5
    - 6
    - 7
  content: !ruby/object:Word
    word: content
    stem: content
    docFrequency: 2.0
    docPositions:
    - 5
  search: !ruby/object:Word
    word: search
    stem: search
    docFrequency: 3.0
    docPositions:
    - 6
    - 38
  navigation: !ruby/object:Word
    word: navigation
    stem: navig
    docFrequency: 2.0
    docPositions:
    - 7
  indiana: !ruby/object:Word
    word: indiana
    stem: indiana
    docFrequency: 12.0
    docPositions:
    - 20
    - 21
    - 60
    - 80
    - 82
    - 84
    - 110
    - 114
    - 116
    - 118
    - 122
  university: !ruby/object:Word
    word: university
    stem: univers
    docFrequency: 9.0
    docPositions:
    - 20
    - 21
    - 60
    - 78
    - 110
    - 114
    - 122
  bloomington: !ruby/object:Word
    word: bloomington
    stem: bloomington
    docFrequency: 14.0
    docPositions:
    - 20
    - 21
    - 22
    - 47
    - 60
    - 61
    - 63
    - 70
    - 76
    - 114
  iu: !ruby/object:Word
    word: iu
    stem: iu
    docFrequency: 28.0
    docPositions:
    - 22
    - 47
    - 59
    - 61
    - 62
    - 63
    - 66
    - 70
    - 73
    - 76
    - 78
    - 84
    - 89
    - 114
  newsroom: !ruby/object:Word
    word: newsroom
    stem: newsroom
    docFrequency: 3.0
    docPositions:
    - 47
    - 59
  all: !ruby/object:Word
    word: all
    stem: all
    docFrequency: 4.0
    docPositions:
    - 58
    - 78
    - 114
  iub: !ruby/object:Word
    word: iub
    stem: iub
    docFrequency: 3.0
    docPositions:
    - 58
    - 59
  newsarts: !ruby/object:Word
    word: newsarts
    stem: newsart
    docFrequency: 2.0
    docPositions:
    - 58
  humanitiesbusinessinternationallaw: !ruby/object:Word
    word: humanitiesbusinessinternationallaw
    stem: humanitiesbusinessinternationallaw
    docFrequency: 2.0
    docPositions:
    - 58
  policylife: !ruby/object:Word
    word: policylife
    stem: policylif
    docFrequency: 2.0
    docPositions:
    - 58
  health: !ruby/object:Word
    word: health
    stem: health
    docFrequency: 2.0
    docPositions:
    - 58
  sciencesscience: !ruby/object:Word
    word: sciencesscience
    stem: sciencessci
    docFrequency: 2.0
    docPositions:
    - 58
  technologyiu: !ruby/object:Word
    word: technologyiu
    stem: technologyiu
    docFrequency: 2.0
    docPositions:
    - 58
  athletics: !ruby/object:Word
    word: athletics
    stem: athlet
    docFrequency: 2.0
    docPositions:
    - 58
  nsf: !ruby/object:Word
    word: nsf
    stem: nsf
    docFrequency: 10.0
    docPositions:
    - 59
    - 62
    - 68
    - 69
    - 70
    - 114
  awards: !ruby/object:Word
    word: awards
    stem: award
    docFrequency: 3.0
    docPositions:
    - 59
  study: !ruby/object:Word
    word: study
    stem: studi
    docFrequency: 3.0
    docPositions:
    - 59
  self: !ruby/object:Word
    word: self
    stem: self
    docFrequency: 13.0
    docPositions:
    - 59
    - 60
    - 69
    - 70
    - 72
    - 78
    - 114
  assembling: !ruby/object:Word
    word: assembling
    stem: assembl
    docFrequency: 7.0
    docPositions:
    - 59
    - 60
    - 72
    - 114
  molecules: !ruby/object:Word
    word: molecules
    stem: molecul
    docFrequency: 21.0
    docPositions:
    - 59
    - 60
    - 63
    - 67
    - 68
    - 71
    - 74
    - 77
    - 114
  software: !ruby/object:Word
    word: software
    stem: softwar
    docFrequency: 13.0
    docPositions:
    - 59
    - 60
    - 73
    - 75
    - 76
    - 77
    - 114
  next: !ruby/object:Word
    word: next
    stem: next
    docFrequency: 6.0
    docPositions:
    - 59
    - 60
    - 84
    - 114
  generation: !ruby/object:Word
    word: generation
    stem: gener
    docFrequency: 5.0
    docPositions:
    - 59
    - 60
    - 114
  materialsnsf: !ruby/object:Word
    word: materialsnsf
    stem: materialsnsf
    docFrequency: 2.0
    docPositions:
    - 59
  materialsinterdisciplinary: !ruby/object:Word
    word: materialsinterdisciplinary
    stem: materialsinterdisciplinari
    docFrequency: 2.0
    docPositions:
    - 59
  project: !ruby/object:Word
    word: project
    stem: project
    docFrequency: 7.0
    docPositions:
    - 59
    - 62
    - 69
    - 114
  support: !ruby/object:Word
    word: support
    stem: support
    docFrequency: 5.0
    docPositions:
    - 59
    - 69
    - 114
  development: !ruby/object:Word
    word: development
    stem: develop
    docFrequency: 3.0
    docPositions:
    - 59
    - 114
  more: !ruby/object:Word
    word: more
    stem: more
    docFrequency: 5.0
    docPositions:
    - 59
    - 63
    - 114
  efficient: !ruby/object:Word
    word: efficient
    stem: effici
    docFrequency: 5.0
    docPositions:
    - 59
    - 71
    - 114
  solar: !ruby/object:Word
    word: solar
    stem: solar
    docFrequency: 9.0
    docPositions:
    - 59
    - 60
    - 71
    - 72
    - 114
  cells: !ruby/object:Word
    word: cells
    stem: cell
    docFrequency: 7.0
    docPositions:
    - 59
    - 60
    - 72
    - 114
  other: !ruby/object:Word
    word: other
    stem: other
    docFrequency: 11.0
    docPositions:
    - 59
    - 60
    - 67
    - 68
    - 74
    - 114
  future: !ruby/object:Word
    word: future
    stem: futur
    docFrequency: 5.0
    docPositions:
    - 59
    - 62
    - 114
  materials: !ruby/object:Word
    word: materials
    stem: materi
    docFrequency: 26.0
    docPositions:
    - 59
    - 62
    - 64
    - 70
    - 72
    - 75
    - 84
    - 114
  dec: !ruby/object:Word
    word: dec
    stem: dec
    docFrequency: 2.0
    docPositions:
    - 59
  immediate: !ruby/object:Word
    word: immediate
    stem: immedi
    docFrequency: 3.0
    docPositions:
    - 59
    - 114
  release: !ruby/object:Word
    word: release
    stem: releas
    docFrequency: 2.0
    docPositions:
    - 59
  ind: !ruby/object:Word
    word: ind
    stem: ind
    docFrequency: 3.0
    docPositions:
    - 60
    - 114
  national: !ruby/object:Word
    word: national
    stem: nation
    docFrequency: 5.0
    docPositions:
    - 60
    - 62
    - 114
  science: !ruby/object:Word
    word: science
    stem: scienc
    docFrequency: 9.0
    docPositions:
    - 60
    - 61
    - 70
    - 78
    - 114
  foundation: !ruby/object:Word
    word: foundation
    stem: foundat
    docFrequency: 3.0
    docPositions:
    - 60
    - 114
  has: !ruby/object:Word
    word: has
    stem: ha
    docFrequency: 7.0
    docPositions:
    - 60
    - 68
    - 70
    - 114
  awarded: !ruby/object:Word
    word: awarded
    stem: award
    docFrequency: 3.0
    docPositions:
    - 60
    - 114
  million: !ruby/object:Word
    word: million
    stem: million
    docFrequency: 5.0
    docPositions:
    - 60
    - 63
    - 114
  three: !ruby/object:Word
    word: three
    stem: three
    docFrequency: 5.0
    docPositions:
    - 60
    - 69
    - 114
  research: !ruby/object:Word
    word: research
    stem: research
    docFrequency: 5.0
    docPositions:
    - 60
    - 114
  groups: !ruby/object:Word
    word: groups
    stem: group
    docFrequency: 3.0
    docPositions:
    - 60
    - 114
  advance: !ruby/object:Word
    word: advance
    stem: advanc
    docFrequency: 3.0
    docPositions:
    - 60
    - 114
  and: !ruby/object:Word
    word: and
    stem: and
    docFrequency: 67.0
    docPositions:
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 68
    - 70
    - 71
    - 72
    - 74
    - 75
    - 77
    - 78
    - 114
  computer: !ruby/object:Word
    word: computer
    stem: comput
    docFrequency: 9.0
    docPositions:
    - 60
    - 64
    - 71
    - 73
    - 114
  aided: !ruby/object:Word
    word: aided
    stem: aid
    docFrequency: 7.0
    docPositions:
    - 60
    - 64
    - 73
    - 114
  design: !ruby/object:Word
    word: design
    stem: design
    docFrequency: 13.0
    docPositions:
    - 60
    - 63
    - 64
    - 73
    - 74
    - 77
    - 114
  required: !ruby/object:Word
    word: required
    stem: requir
    docFrequency: 3.0
    docPositions:
    - 60
    - 114
  create: !ruby/object:Word
    word: create
    stem: creat
    docFrequency: 5.0
    docPositions:
    - 60
    - 72
    - 114
  circuits: !ruby/object:Word
    word: circuits
    stem: circuit
    docFrequency: 3.0
    docPositions:
    - 60
    - 114
  sensors: !ruby/object:Word
    word: sensors
    stem: sensor
    docFrequency: 3.0
    docPositions:
    - 60
    - 114
  technology: !ruby/object:Word
    word: technology
    stem: technolog
    docFrequency: 9.0
    docPositions:
    - 60
    - 61
    - 75
    - 78
    - 114
  interdisciplinary: !ruby/object:Word
    word: interdisciplinary
    stem: interdisciplinari
    docFrequency: 4.0
    docPositions:
    - 61
    - 114
  team: !ruby/object:Word
    word: team
    stem: team
    docFrequency: 5.0
    docPositions:
    - 61
    - 73
    - 114
  college: !ruby/object:Word
    word: college
    stem: colleg
    docFrequency: 3.0
    docPositions:
    - 61
    - 114
  arts: !ruby/object:Word
    word: arts
    stem: art
    docFrequency: 3.0
    docPositions:
    - 61
    - 114
  sciences: !ruby/object:Word
    word: sciences
    stem: scienc
    docFrequency: 3.0
    docPositions:
    - 61
    - 114
  department: !ruby/object:Word
    word: department
    stem: depart
    docFrequency: 9.0
    docPositions:
    - 61
    - 63
    - 70
    - 76
    - 114
  chemistry: !ruby/object:Word
    word: chemistry
    stem: chemistri
    docFrequency: 17.0
    docPositions:
    - 61
    - 63
    - 66
    - 68
    - 70
    - 76
    - 78
    - 114
  led: !ruby/object:Word
    word: led
    stem: led
    docFrequency: 3.0
    docPositions:
    - 61
    - 114
  amar: !ruby/object:Word
    word: amar
    stem: amar
    docFrequency: 7.0
    docPositions:
    - 61
    - 63
    - 68
    - 114
  flood: !ruby/object:Word
    word: flood
    stem: flood
    docFrequency: 19.0
    docPositions:
    - 61
    - 63
    - 65
    - 71
    - 74
    - 75
    - 77
    - 78
    - 80
    - 114
    - 116
  steven: !ruby/object:Word
    word: steven
    stem: steven
    docFrequency: 3.0
    docPositions:
    - 61
    - 114
  tait: !ruby/object:Word
    word: tait
    stem: tait
    docFrequency: 9.0
    docPositions:
    - 61
    - 68
    - 72
    - 78
    - 114
  peter: !ruby/object:Word
    word: peter
    stem: peter
    docFrequency: 3.0
    docPositions:
    - 61
    - 114
  ortoleva: !ruby/object:Word
    word: ortoleva
    stem: ortoleva
    docFrequency: 5.0
    docPositions:
    - 61
    - 76
    - 114
  collaboration: !ruby/object:Word
    word: collaboration
    stem: collabor
    docFrequency: 3.0
    docPositions:
    - 61
    - 114
  mu: !ruby/object:Word
    word: mu
    stem: mu
    docFrequency: 3.0
    docPositions:
    - 61
    - 114
  hyun: !ruby/object:Word
    word: hyun
    stem: hyun
    docFrequency: 3.0
    docPositions:
    - 61
    - 114
  baik: !ruby/object:Word
    word: baik
    stem: baik
    docFrequency: 5.0
    docPositions:
    - 61
    - 76
    - 114
  korea: !ruby/object:Word
    word: korea
    stem: korea
    docFrequency: 3.0
    docPositions:
    - 61
    - 114
  advanced: !ruby/object:Word
    word: advanced
    stem: advanc
    docFrequency: 7.0
    docPositions:
    - 61
    - 71
    - 78
    - 114
  institute: !ruby/object:Word
    word: institute
    stem: institut
    docFrequency: 5.0
    docPositions:
    - 61
    - 78
    - 114
  previously: !ruby/object:Word
    word: previously
    stem: previous
    docFrequency: 3.0
    docPositions:
    - 61
    - 114
  served: !ruby/object:Word
    word: served
    stem: serv
    docFrequency: 3.0
    docPositions:
    - 61
    - 114
  designing: !ruby/object:Word
    word: designing
    stem: design
    docFrequency: 5.0
    docPositions:
    - 62
    - 114
  new: !ruby/object:Word
    word: new
    stem: new
    docFrequency: 11.0
    docPositions:
    - 62
    - 66
    - 71
    - 73
    - 74
    - 114
  molecular: !ruby/object:Word
    word: molecular
    stem: molecular
    docFrequency: 21.0
    docPositions:
    - 62
    - 64
    - 69
    - 72
    - 73
    - 74
    - 75
    - 114
  level: !ruby/object:Word
    word: level
    stem: level
    docFrequency: 7.0
    docPositions:
    - 62
    - 72
    - 76
    - 114
  key: !ruby/object:Word
    word: key
    stem: kei
    docFrequency: 9.0
    docPositions:
    - 62
    - 70
    - 71
    - 75
    - 114
  goal: !ruby/object:Word
    word: goal
    stem: goal
    docFrequency: 7.0
    docPositions:
    - 62
    - 65
    - 77
    - 114
  u: !ruby/object:Word
    word: u
    stem: u
    docFrequency: 3.0
    docPositions:
    - 62
    - 114
  s: !ruby/object:Word
    word: s
    stem: s
    docFrequency: 11.0
    docPositions:
    - 62
    - 70
    - 76
    - 114
  government: !ruby/object:Word
    word: government
    stem: govern
    docFrequency: 3.0
    docPositions:
    - 62
    - 114
  genome: !ruby/object:Word
    word: genome
    stem: genom
    docFrequency: 5.0
    docPositions:
    - 62
    - 70
    - 114
  initiative: !ruby/object:Word
    word: initiative
    stem: initi
    docFrequency: 9.0
    docPositions:
    - 62
    - 70
    - 114
  launched: !ruby/object:Word
    word: launched
    stem: launch
    docFrequency: 3.0
    docPositions:
    - 62
    - 114
  reduce: !ruby/object:Word
    word: reduce
    stem: reduc
    docFrequency: 3.0
    docPositions:
    - 62
    - 114
  cost: !ruby/object:Word
    word: cost
    stem: cost
    docFrequency: 3.0
    docPositions:
    - 62
    - 114
  speed: !ruby/object:Word
    word: speed
    stem: speed
    docFrequency: 3.0
    docPositions:
    - 62
    - 114
  creation: !ruby/object:Word
    word: creation
    stem: creation
    docFrequency: 5.0
    docPositions:
    - 62
    - 73
    - 114
  these: !ruby/object:Word
    word: these
    stem: these
    docFrequency: 7.0
    docPositions:
    - 62
    - 72
    - 76
    - 114
  recipients: !ruby/object:Word
    word: recipients
    stem: recipi
    docFrequency: 3.0
    docPositions:
    - 62
    - 114
  funds: !ruby/object:Word
    word: funds
    stem: fund
    docFrequency: 3.0
    docPositions:
    - 62
    - 114
  revolutionize: !ruby/object:Word
    word: revolutionize
    stem: revolution
    docFrequency: 3.0
    docPositions:
    - 62
    - 114
  engineer: !ruby/object:Word
    word: engineer
    stem: engin
    docFrequency: 3.0
    docPositions:
    - 62
    - 114
  our: !ruby/object:Word
    word: our
    stem: our
    docFrequency: 11.0
    docPositions:
    - 62
    - 70
    - 75
    - 77
    - 114
  program: !ruby/object:Word
    word: program
    stem: program
    docFrequency: 3.0
    docPositions:
    - 62
    - 114
  scientists: !ruby/object:Word
    word: scientists
    stem: scientist
    docFrequency: 9.0
    docPositions:
    - 62
    - 66
    - 73
    - 74
    - 114
  contribute: !ruby/object:Word
    word: contribute
    stem: contribut
    docFrequency: 5.0
    docPositions:
    - 62
    - 70
    - 114
  '': !ruby/object:Word
    word: ''
    stem: ''
    docFrequency: 7.0
    docPositions:
    - 63
    - 68
    - 70
    - 72
    - 75
    - 77
  there: !ruby/object:Word
    word: there
    stem: there
    docFrequency: 3.0
    docPositions:
    - 63
    - 114
  than: !ruby/object:Word
    word: than
    stem: than
    docFrequency: 3.0
    docPositions:
    - 63
    - 114
  known: !ruby/object:Word
    word: known
    stem: known
    docFrequency: 5.0
    docPositions:
    - 63
    - 67
    - 114
  but: !ruby/object:Word
    word: but
    stem: but
    docFrequency: 7.0
    docPositions:
    - 63
    - 72
    - 74
    - 114
  vast: !ruby/object:Word
    word: vast
    stem: vast
    docFrequency: 3.0
    docPositions:
    - 63
    - 114
  majority: !ruby/object:Word
    word: majority
    stem: major
    docFrequency: 3.0
    docPositions:
    - 63
    - 114
  cases: !ruby/object:Word
    word: cases
    stem: case
    docFrequency: 3.0
    docPositions:
    - 63
    - 114
  we: !ruby/object:Word
    word: we
    stem: we
    docFrequency: 11.0
    docPositions:
    - 63
    - 72
    - 75
    - 77
    - 114
  cannot: !ruby/object:Word
    word: cannot
    stem: cannot
    docFrequency: 3.0
    docPositions:
    - 63
    - 114
  predict: !ruby/object:Word
    word: predict
    stem: predict
    docFrequency: 5.0
    docPositions:
    - 63
    - 114
  sort: !ruby/object:Word
    word: sort
    stem: sort
    docFrequency: 3.0
    docPositions:
    - 63
    - 114
  structure: !ruby/object:Word
    word: structure
    stem: structur
    docFrequency: 5.0
    docPositions:
    - 63
    - 67
    - 114
  they: !ruby/object:Word
    word: they
    stem: thei
    docFrequency: 7.0
    docPositions:
    - 63
    - 67
    - 77
    - 114
  form: !ruby/object:Word
    word: form
    stem: form
    docFrequency: 5.0
    docPositions:
    - 63
    - 67
    - 114
  those: !ruby/object:Word
    word: those
    stem: those
    docFrequency: 5.0
    docPositions:
    - 63
    - 114
  start: !ruby/object:Word
    word: start
    stem: start
    docFrequency: 3.0
    docPositions:
    - 63
    - 114
  packing: !ruby/object:Word
    word: packing
    stem: pack
    docFrequency: 3.0
    docPositions:
    - 63
    - 114
  together: !ruby/object:Word
    word: together
    stem: togeth
    docFrequency: 3.0
    docPositions:
    - 63
    - 114
  said: !ruby/object:Word
    word: said
    stem: said
    docFrequency: 15.0
    docPositions:
    - 63
    - 64
    - 68
    - 70
    - 71
    - 72
    - 75
    - 114
  james: !ruby/object:Word
    word: james
    stem: jame
    docFrequency: 5.0
    docPositions:
    - 63
    - 78
    - 114
  f: !ruby/object:Word
    word: f
    stem: f
    docFrequency: 3.0
    docPositions:
    - 63
    - 114
  jackson: !ruby/object:Word
    word: jackson
    stem: jackson
    docFrequency: 3.0
    docPositions:
    - 63
    - 114
  professor: !ruby/object:Word
    word: professor
    stem: professor
    docFrequency: 9.0
    docPositions:
    - 63
    - 68
    - 76
    - 114
  luther: !ruby/object:Word
    word: luther
    stem: luther
    docFrequency: 3.0
    docPositions:
    - 63
    - 114
  dana: !ruby/object:Word
    word: dana
    stem: dana
    docFrequency: 3.0
    docPositions:
    - 63
    - 114
  waterman: !ruby/object:Word
    word: waterman
    stem: waterman
    docFrequency: 3.0
    docPositions:
    - 63
    - 114
  principal: !ruby/object:Word
    word: principal
    stem: princip
    docFrequency: 3.0
    docPositions:
    - 63
    - 114
  investigator: !ruby/object:Word
    word: investigator
    stem: investig
    docFrequency: 5.0
    docPositions:
    - 63
    - 68
    - 114
  grant: !ruby/object:Word
    word: grant
    stem: grant
    docFrequency: 8.0
    docPositions:
    - 63
    - 68
    - 73
    - 84
    - 114
  want: !ruby/object:Word
    word: want
    stem: want
    docFrequency: 3.0
    docPositions:
    - 63
    - 114
  able: !ruby/object:Word
    word: able
    stem: abl
    docFrequency: 3.0
    docPositions:
    - 63
    - 114
  well: !ruby/object:Word
    word: well
    stem: well
    docFrequency: 5.0
    docPositions:
    - 63
    - 77
    - 114
  structures: !ruby/object:Word
    word: structures
    stem: structur
    docFrequency: 11.0
    docPositions:
    - 63
    - 69
    - 73
    - 74
    - 114
  results: !ruby/object:Word
    word: results
    stem: result
    docFrequency: 3.0
    docPositions:
    - 64
    - 114
  would: !ruby/object:Word
    word: would
    stem: would
    docFrequency: 3.0
    docPositions:
    - 64
    - 114
  represent: !ruby/object:Word
    word: represent
    stem: repres
    docFrequency: 3.0
    docPositions:
    - 64
    - 114
  transformative: !ruby/object:Word
    word: transformative
    stem: transform
    docFrequency: 5.0
    docPositions:
    - 64
    - 68
    - 114
  approach: !ruby/object:Word
    word: approach
    stem: approach
    docFrequency: 3.0
    docPositions:
    - 64
    - 114
  discovery: !ruby/object:Word
    word: discovery
    stem: discoveri
    docFrequency: 3.0
    docPositions:
    - 64
    - 114
  organic: !ruby/object:Word
    word: organic
    stem: organ
    docFrequency: 9.0
    docPositions:
    - 64
    - 71
    - 72
    - 114
  he: !ruby/object:Word
    word: he
    stem: he
    docFrequency: 3.0
    docPositions:
    - 64
    - 114
  combining: !ruby/object:Word
    word: combining
    stem: combin
    docFrequency: 3.0
    docPositions:
    - 64
    - 114
  chemical: !ruby/object:Word
    word: chemical
    stem: chemic
    docFrequency: 3.0
    docPositions:
    - 64
    - 114
  synthesis: !ruby/object:Word
    word: synthesis
    stem: synthesi
    docFrequency: 7.0
    docPositions:
    - 64
    - 68
    - 70
    - 114
  characterization: !ruby/object:Word
    word: characterization
    stem: character
    docFrequency: 5.0
    docPositions:
    - 64
    - 70
    - 114
  methods: !ruby/object:Word
    word: methods
    stem: method
    docFrequency: 3.0
    docPositions:
    - 64
    - 114
  recently: !ruby/object:Word
    word: recently
    stem: recent
    docFrequency: 3.0
    docPositions:
    - 65
    - 114
  colleagues: !ruby/object:Word
    word: colleagues
    stem: colleagu
    docFrequency: 3.0
    docPositions:
    - 65
    - 114
  have: !ruby/object:Word
    word: have
    stem: have
    docFrequency: 5.0
    docPositions:
    - 65
    - 67
    - 114
  shown: !ruby/object:Word
    word: shown
    stem: shown
    docFrequency: 3.0
    docPositions:
    - 65
    - 114
  such: !ruby/object:Word
    word: such
    stem: such
    docFrequency: 3.0
    docPositions:
    - 65
    - 114
  ambitious: !ruby/object:Word
    word: ambitious
    stem: ambiti
    docFrequency: 3.0
    docPositions:
    - 65
    - 114
  achievable: !ruby/object:Word
    word: achievable
    stem: achiev
    docFrequency: 3.0
    docPositions:
    - 65
    - 114
  paper: !ruby/object:Word
    word: paper
    stem: paper
    docFrequency: 9.0
    docPositions:
    - 66
    - 68
    - 78
    - 114
  published: !ruby/object:Word
    word: published
    stem: publish
    docFrequency: 3.0
    docPositions:
    - 66
    - 114
  nov: !ruby/object:Word
    word: nov
    stem: nov
    docFrequency: 3.0
    docPositions:
    - 66
    - 114
  european: !ruby/object:Word
    word: european
    stem: european
    docFrequency: 3.0
    docPositions:
    - 66
    - 114
  journal: !ruby/object:Word
    word: journal
    stem: journal
    docFrequency: 5.0
    docPositions:
    - 66
    - 78
    - 114
  describe: !ruby/object:Word
    word: describe
    stem: describ
    docFrequency: 3.0
    docPositions:
    - 66
    - 114
  innovative: !ruby/object:Word
    word: innovative
    stem: innov
    docFrequency: 3.0
    docPositions:
    - 66
    - 114
  one: !ruby/object:Word
    word: one
    stem: 'on'
    docFrequency: 3.0
    docPositions:
    - 66
    - 114
  pot: !ruby/object:Word
    word: pot
    stem: pot
    docFrequency: 3.0
    docPositions:
    - 66
    - 114
  method: !ruby/object:Word
    word: method
    stem: method
    docFrequency: 3.0
    docPositions:
    - 66
    - 114
  synthesize: !ruby/object:Word
    word: synthesize
    stem: synthes
    docFrequency: 5.0
    docPositions:
    - 66
    - 74
    - 114
  macromolecule: !ruby/object:Word
    word: macromolecule
    stem: macromolecul
    docFrequency: 5.0
    docPositions:
    - 66
    - 78
    - 114
  called: !ruby/object:Word
    word: called
    stem: call
    docFrequency: 3.0
    docPositions:
    - 66
    - 114
  tricarbazolo: !ruby/object:Word
    word: tricarbazolo
    stem: tricarbazolo
    docFrequency: 5.0
    docPositions:
    - 66
    - 78
    - 114
  triazolophane: !ruby/object:Word
    word: triazolophane
    stem: triazolophan
    docFrequency: 5.0
    docPositions:
    - 66
    - 78
    - 114
  tricarb: !ruby/object:Word
    word: tricarb
    stem: tricarb
    docFrequency: 11.0
    docPositions:
    - 66
    - 67
    - 69
    - 78
    - 114
  multifunctional: !ruby/object:Word
    word: multifunctional
    stem: multifunct
    docFrequency: 3.0
    docPositions:
    - 67
    - 114
  ring: !ruby/object:Word
    word: ring
    stem: ring
    docFrequency: 5.0
    docPositions:
    - 67
    - 78
    - 114
  shaped: !ruby/object:Word
    word: shaped
    stem: shape
    docFrequency: 7.0
    docPositions:
    - 67
    - 68
    - 78
    - 114
  bear: !ruby/object:Word
    word: bear
    stem: bear
    docFrequency: 3.0
    docPositions:
    - 67
    - 114
  alignment: !ruby/object:Word
    word: alignment
    stem: align
    docFrequency: 3.0
    docPositions:
    - 67
    - 114
  markers: !ruby/object:Word
    word: markers
    stem: marker
    docFrequency: 3.0
    docPositions:
    - 67
    - 114
  so: !ruby/object:Word
    word: so
    stem: so
    docFrequency: 5.0
    docPositions:
    - 67
    - 77
    - 114
  line: !ruby/object:Word
    word: line
    stem: line
    docFrequency: 3.0
    docPositions:
    - 67
    - 114
  up: !ruby/object:Word
    word: up
    stem: up
    docFrequency: 3.0
    docPositions:
    - 67
    - 114
  perfectly: !ruby/object:Word
    word: perfectly
    stem: perfectli
    docFrequency: 3.0
    docPositions:
    - 67
    - 114
  each: !ruby/object:Word
    word: each
    stem: each
    docFrequency: 7.0
    docPositions:
    - 67
    - 68
    - 74
    - 114
  upon: !ruby/object:Word
    word: upon
    stem: upon
    docFrequency: 5.0
    docPositions:
    - 67
    - 74
    - 114
  contact: !ruby/object:Word
    word: contact
    stem: contact
    docFrequency: 5.0
    docPositions:
    - 67
    - 74
    - 114
  highly: !ruby/object:Word
    word: highly
    stem: highli
    docFrequency: 11.0
    docPositions:
    - 67
    - 71
    - 74
    - 78
    - 114
  organized: !ruby/object:Word
    word: organized
    stem: organ
    docFrequency: 5.0
    docPositions:
    - 67
    - 78
    - 114
  multilayered: !ruby/object:Word
    word: multilayered
    stem: multilay
    docFrequency: 5.0
    docPositions:
    - 67
    - 78
    - 114
  patterns: !ruby/object:Word
    word: patterns
    stem: pattern
    docFrequency: 9.0
    docPositions:
    - 67
    - 68
    - 71
    - 78
    - 114
  also: !ruby/object:Word
    word: also
    stem: also
    docFrequency: 7.0
    docPositions:
    - 67
    - 68
    - 78
    - 114
  central: !ruby/object:Word
    word: central
    stem: central
    docFrequency: 3.0
    docPositions:
    - 67
    - 114
  pocket: !ruby/object:Word
    word: pocket
    stem: pocket
    docFrequency: 3.0
    docPositions:
    - 67
    - 114
  capture: !ruby/object:Word
    word: capture
    stem: captur
    docFrequency: 3.0
    docPositions:
    - 67
    - 114
  negatively: !ruby/object:Word
    word: negatively
    stem: neg
    docFrequency: 3.0
    docPositions:
    - 67
    - 114
  charged: !ruby/object:Word
    word: charged
    stem: charg
    docFrequency: 3.0
    docPositions:
    - 67
    - 114
  particles: !ruby/object:Word
    word: particles
    stem: particl
    docFrequency: 3.0
    docPositions:
    - 67
    - 114
  anions: !ruby/object:Word
    word: anions
    stem: anion
    docFrequency: 3.0
    docPositions:
    - 67
    - 114
  developed: !ruby/object:Word
    word: developed
    stem: develop
    docFrequency: 3.0
    docPositions:
    - 68
    - 114
  very: !ruby/object:Word
    word: very
    stem: veri
    docFrequency: 7.0
    docPositions:
    - 68
    - 72
    - 114
  elegant: !ruby/object:Word
    word: elegant
    stem: eleg
    docFrequency: 3.0
    docPositions:
    - 68
    - 114
  associate: !ruby/object:Word
    word: associate
    stem: associ
    docFrequency: 3.0
    docPositions:
    - 68
    - 114
  co: !ruby/object:Word
    word: co
    stem: co
    docFrequency: 5.0
    docPositions:
    - 68
    - 114
  author: !ruby/object:Word
    word: author
    stem: author
    docFrequency: 5.0
    docPositions:
    - 68
    - 78
    - 114
  result: !ruby/object:Word
    word: result
    stem: result
    docFrequency: 3.0
    docPositions:
    - 68
    - 114
  recognize: !ruby/object:Word
    word: recognize
    stem: recogn
    docFrequency: 3.0
    docPositions:
    - 68
    - 114
  specific: !ruby/object:Word
    word: specific
    stem: specif
    docFrequency: 3.0
    docPositions:
    - 68
    - 114
  way: !ruby/object:Word
    word: way
    stem: wai
    docFrequency: 3.0
    docPositions:
    - 68
    - 114
  order: !ruby/object:Word
    word: order
    stem: order
    docFrequency: 5.0
    docPositions:
    - 68
    - 72
    - 114
  stack: !ruby/object:Word
    word: stack
    stem: stack
    docFrequency: 3.0
    docPositions:
    - 68
    - 114
  beautiful: !ruby/object:Word
    word: beautiful
    stem: beauti
    docFrequency: 3.0
    docPositions:
    - 68
    - 114
  flower: !ruby/object:Word
    word: flower
    stem: flower
    docFrequency: 3.0
    docPositions:
    - 68
    - 114
  crystalline: !ruby/object:Word
    word: crystalline
    stem: crystallin
    docFrequency: 3.0
    docPositions:
    - 68
    - 114
  potentially: !ruby/object:Word
    word: potentially
    stem: potenti
    docFrequency: 3.0
    docPositions:
    - 68
    - 114
  properties: !ruby/object:Word
    word: properties
    stem: properti
    docFrequency: 5.0
    docPositions:
    - 68
    - 74
    - 114
  funded: !ruby/object:Word
    word: funded
    stem: fund
    docFrequency: 3.0
    docPositions:
    - 69
    - 114
  creating: !ruby/object:Word
    word: creating
    stem: creat
    docFrequency: 9.0
    docPositions:
    - 69
    - 70
    - 71
    - 74
    - 114
  like: !ruby/object:Word
    word: like
    stem: like
    docFrequency: 3.0
    docPositions:
    - 69
    - 114
  molecule: !ruby/object:Word
    word: molecule
    stem: molecul
    docFrequency: 3.0
    docPositions:
    - 69
    - 114
  specifically: !ruby/object:Word
    word: specifically
    stem: specif
    docFrequency: 5.0
    docPositions:
    - 69
    - 71
    - 114
  pre: !ruby/object:Word
    word: pre
    stem: pre
    docFrequency: 3.0
    docPositions:
    - 69
    - 114
  programmed: !ruby/object:Word
    word: programmed
    stem: program
    docFrequency: 5.0
    docPositions:
    - 69
    - 77
    - 114
  assemble: !ruby/object:Word
    word: assemble
    stem: assembl
    docFrequency: 7.0
    docPositions:
    - 69
    - 70
    - 77
    - 114
  into: !ruby/object:Word
    word: into
    stem: into
    docFrequency: 11.0
    docPositions:
    - 69
    - 70
    - 74
    - 77
    - 78
    - 114
  dimensional: !ruby/object:Word
    word: dimensional
    stem: dimension
    docFrequency: 5.0
    docPositions:
    - 69
    - 114
  go: !ruby/object:Word
    word: go
    stem: go
    docFrequency: 5.0
    docPositions:
    - 69
    - 72
    - 114
  beyond: !ruby/object:Word
    word: beyond
    stem: beyond
    docFrequency: 3.0
    docPositions:
    - 69
    - 114
  comparatively: !ruby/object:Word
    word: comparatively
    stem: compar
    docFrequency: 3.0
    docPositions:
    - 69
    - 114
  simple: !ruby/object:Word
    word: simple
    stem: simpl
    docFrequency: 3.0
    docPositions:
    - 69
    - 114
  two: !ruby/object:Word
    word: two
    stem: two
    docFrequency: 3.0
    docPositions:
    - 69
    - 114
  arrangements: !ruby/object:Word
    word: arrangements
    stem: arrang
    docFrequency: 5.0
    docPositions:
    - 69
    - 77
    - 114
  building: !ruby/object:Word
    word: building
    stem: build
    docFrequency: 3.0
    docPositions:
    - 70
    - 114
  blocks: !ruby/object:Word
    word: blocks
    stem: block
    docFrequency: 3.0
    docPositions:
    - 70
    - 114
  functional: !ruby/object:Word
    word: functional
    stem: function
    docFrequency: 3.0
    docPositions:
    - 70
    - 114
  major: !ruby/object:Word
    word: major
    stem: major
    docFrequency: 3.0
    docPositions:
    - 70
    - 114
  breakthrough: !ruby/object:Word
    word: breakthrough
    stem: breakthrough
    docFrequency: 3.0
    docPositions:
    - 70
    - 114
  component: !ruby/object:Word
    word: component
    stem: compon
    docFrequency: 3.0
    docPositions:
    - 70
    - 114
  stephen: !ruby/object:Word
    word: stephen
    stem: stephen
    docFrequency: 3.0
    docPositions:
    - 70
    - 114
  c: !ruby/object:Word
    word: c
    stem: c
    docFrequency: 3.0
    docPositions:
    - 70
    - 114
  jacobson: !ruby/object:Word
    word: jacobson
    stem: jacobson
    docFrequency: 3.0
    docPositions:
    - 70
    - 114
  chair: !ruby/object:Word
    word: chair
    stem: chair
    docFrequency: 3.0
    docPositions:
    - 70
    - 114
  i: !ruby/object:Word
    word: i
    stem: i
    docFrequency: 3.0
    docPositions:
    - 70
    - 114
  am: !ruby/object:Word
    word: am
    stem: am
    docFrequency: 3.0
    docPositions:
    - 70
    - 114
  pleased: !ruby/object:Word
    word: pleased
    stem: pleas
    docFrequency: 3.0
    docPositions:
    - 70
    - 114
  recognized: !ruby/object:Word
    word: recognized
    stem: recogn
    docFrequency: 3.0
    docPositions:
    - 70
    - 114
  faculty: !ruby/object:Word
    word: faculty
    stem: faculti
    docFrequency: 3.0
    docPositions:
    - 70
    - 114
  combined: !ruby/object:Word
    word: combined
    stem: combin
    docFrequency: 3.0
    docPositions:
    - 70
    - 114
  expertise: !ruby/object:Word
    word: expertise
    stem: expertis
    docFrequency: 3.0
    docPositions:
    - 70
    - 114
  theory: !ruby/object:Word
    word: theory
    stem: theori
    docFrequency: 5.0
    docPositions:
    - 70
    - 77
    - 114
  selecting: !ruby/object:Word
    word: selecting
    stem: select
    docFrequency: 3.0
    docPositions:
    - 70
    - 114
  them: !ruby/object:Word
    word: them
    stem: them
    docFrequency: 3.0
    docPositions:
    - 70
    - 114
  important: !ruby/object:Word
    word: important
    stem: import
    docFrequency: 5.0
    docPositions:
    - 70
    - 73
    - 114
  ability: !ruby/object:Word
    word: ability
    stem: abil
    docFrequency: 3.0
    docPositions:
    - 71
    - 114
  alternate: !ruby/object:Word
    word: alternate
    stem: altern
    docFrequency: 3.0
    docPositions:
    - 71
    - 114
  different: !ruby/object:Word
    word: different
    stem: differ
    docFrequency: 3.0
    docPositions:
    - 71
    - 114
  ordered: !ruby/object:Word
    word: ordered
    stem: order
    docFrequency: 3.0
    docPositions:
    - 71
    - 114
  step: !ruby/object:Word
    word: step
    stem: step
    docFrequency: 3.0
    docPositions:
    - 71
    - 114
  electronics: !ruby/object:Word
    word: electronics
    stem: electron
    docFrequency: 3.0
    docPositions:
    - 71
    - 114
  class: !ruby/object:Word
    word: class
    stem: class
    docFrequency: 3.0
    docPositions:
    - 71
    - 114
  material: !ruby/object:Word
    word: material
    stem: materi
    docFrequency: 5.0
    docPositions:
    - 71
    - 73
    - 114
  whose: !ruby/object:Word
    word: whose
    stem: whose
    docFrequency: 3.0
    docPositions:
    - 71
    - 114
  applications: !ruby/object:Word
    word: applications
    stem: applic
    docFrequency: 3.0
    docPositions:
    - 71
    - 114
  include: !ruby/object:Word
    word: include
    stem: includ
    docFrequency: 3.0
    docPositions:
    - 71
    - 114
  panels: !ruby/object:Word
    word: panels
    stem: panel
    docFrequency: 3.0
    docPositions:
    - 71
    - 114
  circuitry: !ruby/object:Word
    word: circuitry
    stem: circuitri
    docFrequency: 3.0
    docPositions:
    - 71
    - 114
  best: !ruby/object:Word
    word: best
    stem: best
    docFrequency: 3.0
    docPositions:
    - 72
    - 114
  right: !ruby/object:Word
    word: right
    stem: right
    docFrequency: 3.0
    docPositions:
    - 72
    - 114
  now: !ruby/object:Word
    word: now
    stem: now
    docFrequency: 3.0
    docPositions:
    - 72
    - 114
  made: !ruby/object:Word
    word: made
    stem: made
    docFrequency: 3.0
    docPositions:
    - 72
    - 114
  extremely: !ruby/object:Word
    word: extremely
    stem: extrem
    docFrequency: 5.0
    docPositions:
    - 72
    - 114
  pure: !ruby/object:Word
    word: pure
    stem: pure
    docFrequency: 5.0
    docPositions:
    - 72
    - 114
  silicon: !ruby/object:Word
    word: silicon
    stem: silicon
    docFrequency: 3.0
    docPositions:
    - 72
    - 114
  which: !ruby/object:Word
    word: which
    stem: which
    docFrequency: 5.0
    docPositions:
    - 72
    - 74
    - 114
  requires: !ruby/object:Word
    word: requires
    stem: requir
    docFrequency: 3.0
    docPositions:
    - 72
    - 114
  precise: !ruby/object:Word
    word: precise
    stem: precis
    docFrequency: 3.0
    docPositions:
    - 72
    - 114
  expensive: !ruby/object:Word
    word: expensive
    stem: expens
    docFrequency: 3.0
    docPositions:
    - 72
    - 114
  production: !ruby/object:Word
    word: production
    stem: product
    docFrequency: 3.0
    docPositions:
    - 72
    - 114
  process: !ruby/object:Word
    word: process
    stem: process
    docFrequency: 5.0
    docPositions:
    - 72
    - 74
    - 114
  if: !ruby/object:Word
    word: if
    stem: if
    docFrequency: 3.0
    docPositions:
    - 72
    - 114
  can: !ruby/object:Word
    word: can
    stem: can
    docFrequency: 7.0
    docPositions:
    - 72
    - 74
    - 77
    - 114
  controlling: !ruby/object:Word
    word: controlling
    stem: control
    docFrequency: 3.0
    docPositions:
    - 72
    - 114
  their: !ruby/object:Word
    word: their
    stem: their
    docFrequency: 5.0
    docPositions:
    - 72
    - 114
  interfaces: !ruby/object:Word
    word: interfaces
    stem: interfac
    docFrequency: 3.0
    docPositions:
    - 72
    - 114
  components: !ruby/object:Word
    word: components
    stem: compon
    docFrequency: 3.0
    docPositions:
    - 72
    - 114
  performance: !ruby/object:Word
    word: performance
    stem: perform
    docFrequency: 3.0
    docPositions:
    - 72
    - 114
  improve: !ruby/object:Word
    word: improve
    stem: improv
    docFrequency: 3.0
    docPositions:
    - 72
    - 114
  significantly: !ruby/object:Word
    word: significantly
    stem: significantli
    docFrequency: 3.0
    docPositions:
    - 72
    - 114
  costs: !ruby/object:Word
    word: costs
    stem: cost
    docFrequency: 3.0
    docPositions:
    - 72
    - 114
  down: !ruby/object:Word
    word: down
    stem: down
    docFrequency: 3.0
    docPositions:
    - 72
    - 114
  most: !ruby/object:Word
    word: most
    stem: most
    docFrequency: 3.0
    docPositions:
    - 73
    - 114
  use: !ruby/object:Word
    word: use
    stem: us
    docFrequency: 3.0
    docPositions:
    - 73
    - 114
  develop: !ruby/object:Word
    word: develop
    stem: develop
    docFrequency: 5.0
    docPositions:
    - 73
    - 76
    - 114
  enabling: !ruby/object:Word
    word: enabling
    stem: enabl
    docFrequency: 3.0
    docPositions:
    - 73
    - 114
  virtual: !ruby/object:Word
    word: virtual
    stem: virtual
    docFrequency: 5.0
    docPositions:
    - 73
    - 74
    - 114
  experimentation: !ruby/object:Word
    word: experimentation
    stem: experiment
    docFrequency: 7.0
    docPositions:
    - 73
    - 74
    - 77
    - 114
  potential: !ruby/object:Word
    word: potential
    stem: potenti
    docFrequency: 5.0
    docPositions:
    - 73
    - 74
    - 114
  examine: !ruby/object:Word
    word: examine
    stem: examin
    docFrequency: 3.0
    docPositions:
    - 73
    - 114
  millions: !ruby/object:Word
    word: millions
    stem: million
    docFrequency: 3.0
    docPositions:
    - 73
    - 114
  compounds: !ruby/object:Word
    word: compounds
    stem: compound
    docFrequency: 3.0
    docPositions:
    - 73
    - 114
  interest: !ruby/object:Word
    word: interest
    stem: interest
    docFrequency: 3.0
    docPositions:
    - 73
    - 114
  currently: !ruby/object:Word
    word: currently
    stem: current
    docFrequency: 3.0
    docPositions:
    - 74
    - 114
  explained: !ruby/object:Word
    word: explained
    stem: explain
    docFrequency: 3.0
    docPositions:
    - 74
    - 114
  must: !ruby/object:Word
    word: must
    stem: must
    docFrequency: 3.0
    docPositions:
    - 74
    - 114
  engage: !ruby/object:Word
    word: engage
    stem: engag
    docFrequency: 3.0
    docPositions:
    - 74
    - 114
  arduous: !ruby/object:Word
    word: arduous
    stem: arduou
    docFrequency: 3.0
    docPositions:
    - 74
    - 114
  time: !ruby/object:Word
    word: time
    stem: time
    docFrequency: 7.0
    docPositions:
    - 74
    - 114
  consuming: !ruby/object:Word
    word: consuming
    stem: consum
    docFrequency: 3.0
    docPositions:
    - 74
    - 114
  trial: !ruby/object:Word
    word: trial
    stem: trial
    docFrequency: 3.0
    docPositions:
    - 74
    - 114
  error: !ruby/object:Word
    word: error
    stem: error
    docFrequency: 3.0
    docPositions:
    - 74
    - 114
  specialized: !ruby/object:Word
    word: specialized
    stem: special
    docFrequency: 3.0
    docPositions:
    - 74
    - 114
  since: !ruby/object:Word
    word: since
    stem: sinc
    docFrequency: 3.0
    docPositions:
    - 74
    - 114
  'no': !ruby/object:Word
    word: 'no'
    stem: 'no'
    docFrequency: 3.0
    docPositions:
    - 74
    - 114
  blueprint: !ruby/object:Word
    word: blueprint
    stem: blueprint
    docFrequency: 3.0
    docPositions:
    - 74
    - 114
  exists: !ruby/object:Word
    word: exists
    stem: exist
    docFrequency: 3.0
    docPositions:
    - 74
    - 114
  react: !ruby/object:Word
    word: react
    stem: react
    docFrequency: 3.0
    docPositions:
    - 74
    - 114
  coming: !ruby/object:Word
    word: coming
    stem: come
    docFrequency: 5.0
    docPositions:
    - 74
    - 75
    - 114
  engineers: !ruby/object:Word
    word: engineers
    stem: engin
    docFrequency: 3.0
    docPositions:
    - 74
    - 114
  could: !ruby/object:Word
    word: could
    stem: could
    docFrequency: 3.0
    docPositions:
    - 74
    - 114
  screen: !ruby/object:Word
    word: screen
    stem: screen
    docFrequency: 3.0
    docPositions:
    - 74
    - 114
  combinations: !ruby/object:Word
    word: combinations
    stem: combin
    docFrequency: 3.0
    docPositions:
    - 74
    - 114
  over: !ruby/object:Word
    word: over
    stem: over
    docFrequency: 3.0
    docPositions:
    - 74
    - 114
  days: !ruby/object:Word
    word: days
    stem: dai
    docFrequency: 5.0
    docPositions:
    - 74
    - 114
  only: !ruby/object:Word
    word: only
    stem: onli
    docFrequency: 3.0
    docPositions:
    - 74
    - 114
  then: !ruby/object:Word
    word: then
    stem: then
    docFrequency: 3.0
    docPositions:
    - 74
    - 114
  devoting: !ruby/object:Word
    word: devoting
    stem: devot
    docFrequency: 3.0
    docPositions:
    - 74
    - 114
  resources: !ruby/object:Word
    word: resources
    stem: resourc
    docFrequency: 3.0
    docPositions:
    - 74
    - 114
  top: !ruby/object:Word
    word: top
    stem: top
    docFrequency: 3.0
    docPositions:
    - 74
    - 114
  five: !ruby/object:Word
    word: five
    stem: five
    docFrequency: 3.0
    docPositions:
    - 74
    - 114
  candidates: !ruby/object:Word
    word: candidates
    stem: candid
    docFrequency: 3.0
    docPositions:
    - 74
    - 114
  itself: !ruby/object:Word
    word: itself
    stem: itself
    docFrequency: 3.0
    docPositions:
    - 74
    - 114
  require: !ruby/object:Word
    word: require
    stem: requir
    docFrequency: 3.0
    docPositions:
    - 74
    - 114
  per: !ruby/object:Word
    word: per
    stem: per
    docFrequency: 3.0
    docPositions:
    - 74
    - 114
  compound: !ruby/object:Word
    word: compound
    stem: compound
    docFrequency: 3.0
    docPositions:
    - 74
    - 114
  enormous: !ruby/object:Word
    word: enormous
    stem: enorm
    docFrequency: 3.0
    docPositions:
    - 74
    - 114
  savings: !ruby/object:Word
    word: savings
    stem: save
    docFrequency: 3.0
    docPositions:
    - 74
    - 114
  cad: !ruby/object:Word
    word: cad
    stem: cad
    docFrequency: 5.0
    docPositions:
    - 75
    - 76
    - 114
  prevalent: !ruby/object:Word
    word: prevalent
    stem: preval
    docFrequency: 3.0
    docPositions:
    - 75
    - 114
  electrical: !ruby/object:Word
    word: electrical
    stem: electr
    docFrequency: 3.0
    docPositions:
    - 75
    - 114
  mechanical: !ruby/object:Word
    word: mechanical
    stem: mechan
    docFrequency: 3.0
    docPositions:
    - 75
    - 114
  civil: !ruby/object:Word
    word: civil
    stem: civil
    docFrequency: 3.0
    docPositions:
    - 75
    - 114
  engineering: !ruby/object:Word
    word: engineering
    stem: engin
    docFrequency: 5.0
    docPositions:
    - 75
    - 114
  need: !ruby/object:Word
    word: need
    stem: need
    docFrequency: 3.0
    docPositions:
    - 75
    - 114
  same: !ruby/object:Word
    word: same
    stem: same
    docFrequency: 3.0
    docPositions:
    - 75
    - 114
  fingertips: !ruby/object:Word
    word: fingertips
    stem: fingertip
    docFrequency: 3.0
    docPositions:
    - 75
    - 114
  innovations: !ruby/object:Word
    word: innovations
    stem: innov
    docFrequency: 3.0
    docPositions:
    - 75
    - 114
  computational: !ruby/object:Word
    word: computational
    stem: comput
    docFrequency: 3.0
    docPositions:
    - 75
    - 114
  collaborators: !ruby/object:Word
    word: collaborators
    stem: collabor
    docFrequency: 3.0
    docPositions:
    - 75
    - 114
  collaborations: !ruby/object:Word
    word: collaborations
    stem: collabor
    docFrequency: 3.0
    docPositions:
    - 76
    - 114
  distinguished: !ruby/object:Word
    word: distinguished
    stem: distinguish
    docFrequency: 3.0
    docPositions:
    - 76
    - 114
  help: !ruby/object:Word
    word: help
    stem: help
    docFrequency: 3.0
    docPositions:
    - 76
    - 114
  using: !ruby/object:Word
    word: using
    stem: us
    docFrequency: 3.0
    docPositions:
    - 76
    - 114
  recent: !ruby/object:Word
    word: recent
    stem: recent
    docFrequency: 3.0
    docPositions:
    - 76
    - 114
  advances: !ruby/object:Word
    word: advances
    stem: advanc
    docFrequency: 3.0
    docPositions:
    - 76
    - 114
  multi: !ruby/object:Word
    word: multi
    stem: multi
    docFrequency: 3.0
    docPositions:
    - 76
    - 114
  scale: !ruby/object:Word
    word: scale
    stem: scale
    docFrequency: 3.0
    docPositions:
    - 76
    - 114
  simulation: !ruby/object:Word
    word: simulation
    stem: simul
    docFrequency: 5.0
    docPositions:
    - 76
    - 77
    - 114
  employ: !ruby/object:Word
    word: employ
    stem: emploi
    docFrequency: 3.0
    docPositions:
    - 76
    - 114
  work: !ruby/object:Word
    word: work
    stem: work
    docFrequency: 3.0
    docPositions:
    - 76
    - 114
  atomic: !ruby/object:Word
    word: atomic
    stem: atom
    docFrequency: 3.0
    docPositions:
    - 76
    - 114
  force: !ruby/object:Word
    word: force
    stem: forc
    docFrequency: 3.0
    docPositions:
    - 76
    - 114
  fields: !ruby/object:Word
    word: fields
    stem: field
    docFrequency: 3.0
    docPositions:
    - 76
    - 114
  ultimately: !ruby/object:Word
    word: ultimately
    stem: ultim
    docFrequency: 3.0
    docPositions:
    - 77
    - 114
  plan: !ruby/object:Word
    word: plan
    stem: plan
    docFrequency: 3.0
    docPositions:
    - 77
    - 114
  show: !ruby/object:Word
    word: show
    stem: show
    docFrequency: 3.0
    docPositions:
    - 77
    - 114
  experimentally: !ruby/object:Word
    word: experimentally
    stem: experiment
    docFrequency: 3.0
    docPositions:
    - 77
    - 114
  themselves: !ruby/object:Word
    word: themselves
    stem: themselv
    docFrequency: 3.0
    docPositions:
    - 77
    - 114
  d: !ruby/object:Word
    word: d
    stem: d
    docFrequency: 5.0
    docPositions:
    - 77
    - 114
  produce: !ruby/object:Word
    word: produce
    stem: produc
    docFrequency: 3.0
    docPositions:
    - 77
    - 114
  working: !ruby/object:Word
    word: working
    stem: work
    docFrequency: 3.0
    docPositions:
    - 77
    - 114
  operational: !ruby/object:Word
    word: operational
    stem: oper
    docFrequency: 3.0
    docPositions:
    - 77
    - 114
  accurate: !ruby/object:Word
    word: accurate
    stem: accur
    docFrequency: 3.0
    docPositions:
    - 77
    - 114
  added: !ruby/object:Word
    word: added
    stem: ad
    docFrequency: 3.0
    docPositions:
    - 77
    - 114
  achieve: !ruby/object:Word
    word: achieve
    stem: achiev
    docFrequency: 3.0
    docPositions:
    - 77
    - 114
  high: !ruby/object:Word
    word: high
    stem: high
    docFrequency: 3.0
    docPositions:
    - 77
    - 114
  fidelity: !ruby/object:Word
    word: fidelity
    stem: fidel
    docFrequency: 3.0
    docPositions:
    - 77
    - 114
  between: !ruby/object:Word
    word: between
    stem: between
    docFrequency: 3.0
    docPositions:
    - 77
    - 114
  addition: !ruby/object:Word
    word: addition
    stem: addit
    docFrequency: 3.0
    docPositions:
    - 78
    - 114
  contributors: !ruby/object:Word
    word: contributors
    stem: contributor
    docFrequency: 3.0
    docPositions:
    - 78
    - 114
  were: !ruby/object:Word
    word: were
    stem: were
    docFrequency: 3.0
    docPositions:
    - 78
    - 114
  brandon: !ruby/object:Word
    word: brandon
    stem: brandon
    docFrequency: 3.0
    docPositions:
    - 78
    - 114
  e: !ruby/object:Word
    word: e
    stem: e
    docFrequency: 3.0
    docPositions:
    - 78
    - 114
  hirsch: !ruby/object:Word
    word: hirsch
    stem: hirsch
    docFrequency: 3.0
    docPositions:
    - 78
    - 114
  yun: !ruby/object:Word
    word: yun
    stem: yun
    docFrequency: 3.0
    docPositions:
    - 78
    - 114
  liu: !ruby/object:Word
    word: liu
    stem: liu
    docFrequency: 3.0
    docPositions:
    - 78
    - 114
  r: !ruby/object:Word
    word: r
    stem: r
    docFrequency: 3.0
    docPositions:
    - 78
    - 114
  dobscha: !ruby/object:Word
    word: dobscha
    stem: dobscha
    docFrequency: 3.0
    docPositions:
    - 78
    - 114
  graduate: !ruby/object:Word
    word: graduate
    stem: graduat
    docFrequency: 5.0
    docPositions:
    - 78
    - 114
  students: !ruby/object:Word
    word: students
    stem: student
    docFrequency: 3.0
    docPositions:
    - 78
    - 114
  david: !ruby/object:Word
    word: david
    stem: david
    docFrequency: 3.0
    docPositions:
    - 78
    - 114
  w: !ruby/object:Word
    word: w
    stem: w
    docFrequency: 3.0
    docPositions:
    - 78
    - 114
  burke: !ruby/object:Word
    word: burke
    stem: burk
    docFrequency: 3.0
    docPositions:
    - 78
    - 114
  undergraduate: !ruby/object:Word
    word: undergraduate
    stem: undergradu
    docFrequency: 3.0
    docPositions:
    - 78
    - 114
  student: !ruby/object:Word
    word: student
    stem: student
    docFrequency: 5.0
    docPositions:
    - 78
    - 114
  semin: !ruby/object:Word
    word: semin
    stem: semin
    docFrequency: 3.0
    docPositions:
    - 78
    - 114
  lee: !ruby/object:Word
    word: lee
    stem: lee
    docFrequency: 3.0
    docPositions:
    - 78
    - 114
  former: !ruby/object:Word
    word: former
    stem: former
    docFrequency: 3.0
    docPositions:
    - 78
    - 114
  postdoctoral: !ruby/object:Word
    word: postdoctoral
    stem: postdoctor
    docFrequency: 3.0
    docPositions:
    - 78
    - 114
  fellow: !ruby/object:Word
    word: fellow
    stem: fellow
    docFrequency: 3.0
    docPositions:
    - 78
    - 114
  beckman: !ruby/object:Word
    word: beckman
    stem: beckman
    docFrequency: 3.0
    docPositions:
    - 78
    - 114
  illinois: !ruby/object:Word
    word: illinois
    stem: illinoi
    docFrequency: 3.0
    docPositions:
    - 78
    - 114
  urbana: !ruby/object:Word
    word: urbana
    stem: urbana
    docFrequency: 3.0
    docPositions:
    - 78
    - 114
  champaign: !ruby/object:Word
    word: champaign
    stem: champaign
    docFrequency: 3.0
    docPositions:
    - 78
    - 114
  printsharethe: !ruby/object:Word
    word: printsharethe
    stem: printshareth
    docFrequency: 2.0
    docPositions:
    - 78
  assembles: !ruby/object:Word
    word: assembles
    stem: assembl
    docFrequency: 3.0
    docPositions:
    - 78
    - 114
  photo: !ruby/object:Word
    word: photo
    stem: photo
    docFrequency: 5.0
    docPositions:
    - 78
    - 80
    - 114
    - 116
  universityprint: !ruby/object:Word
    word: universityprint
    stem: universityprint
    docFrequency: 5.0
    docPositions:
    - 80
    - 82
    - 116
    - 118
  quality: !ruby/object:Word
    word: quality
    stem: qualiti
    docFrequency: 5.0
    docPositions:
    - 80
    - 82
    - 116
    - 118
  photoamar: !ruby/object:Word
    word: photoamar
    stem: photoamar
    docFrequency: 3.0
    docPositions:
    - 80
    - 116
  photomedia: !ruby/object:Word
    word: photomedia
    stem: photomedia
    docFrequency: 2.0
    docPositions:
    - 82
  contactskevin: !ruby/object:Word
    word: contactskevin
    stem: contactskevin
    docFrequency: 2.0
    docPositions:
    - 82
  fryling: !ruby/object:Word
    word: fryling
    stem: fryle
    docFrequency: 2.0
    docPositions:
    - 82
  office: !ruby/object:Word
    word: office
    stem: offic
    docFrequency: 2.0
    docPositions:
    - 82
  edu: !ruby/object:Word
    word: edu
    stem: edu
    docFrequency: 3.0
    docPositions:
    - 84
  web: !ruby/object:Word
    word: web
    stem: web
    docFrequency: 2.0
    docPositions:
    - 84
  version: !ruby/object:Word
    word: version
    stem: version
    docFrequency: 2.0
    docPositions:
    - 84
  news: !ruby/object:Word
    word: news
    stem: new
    docFrequency: 2.0
    docPositions:
    - 84
  releases: !ruby/object:Word
    word: releases
    stem: releas
    docFrequency: 2.0
    docPositions:
    - 84
  gen: !ruby/object:Word
    word: gen
    stem: gen
    docFrequency: 2.0
    docPositions:
    - 84
  shtml: !ruby/object:Word
    word: shtml
    stem: shtml
    docFrequency: 2.0
    docPositions:
    - 84
  newsroomarchivecontactnewslettersrss: !ruby/object:Word
    word: newsroomarchivecontactnewslettersrss
    stem: newsroomarchivecontactnewslettersrss
    docFrequency: 2.0
    docPositions:
    - 89
  feeds: !ruby/object:Word
    word: feeds
    stem: feed
    docFrequency: 2.0
    docPositions:
    - 89
  facebook: !ruby/object:Word
    word: facebook
    stem: facebook
    docFrequency: 2.0
    docPositions:
    - 90
  twitter: !ruby/object:Word
    word: twitter
    stem: twitter
    docFrequency: 2.0
    docPositions:
    - 90
  youtube: !ruby/object:Word
    word: youtube
    stem: youtub
    docFrequency: 2.0
    docPositions:
    - 90
  linkedin: !ruby/object:Word
    word: linkedin
    stem: linkedin
    docFrequency: 2.0
    docPositions:
    - 90
  google: !ruby/object:Word
    word: google
    stem: googl
    docFrequency: 2.0
    docPositions:
    - 90
  fulfilling: !ruby/object:Word
    word: fulfilling
    stem: fulfil
    docFrequency: 2.0
    docPositions:
    - 104
  promise: !ruby/object:Word
    word: promise
    stem: promis
    docFrequency: 2.0
    docPositions:
    - 104
  privacy: !ruby/object:Word
    word: privacy
    stem: privaci
    docFrequency: 2.0
    docPositions:
    - 105
  notice: !ruby/object:Word
    word: notice
    stem: notic
    docFrequency: 3.0
    docPositions:
    - 105
    - 118
  copyright: !ruby/object:Word
    word: copyright
    stem: copyright
    docFrequency: 5.0
    docPositions:
    - 109
    - 111
    - 121
    - 123
  trustees: !ruby/object:Word
    word: trustees
    stem: truste
    docFrequency: 3.0
    docPositions:
    - 110
    - 122
  complaints: !ruby/object:Word
    word: complaints
    stem: complaint
    docFrequency: 3.0
    docPositions:
    - 111
    - 123
  releasebloomington: !ruby/object:Word
    word: releasebloomington
    stem: releasebloomington
    docFrequency: 2.0
    docPositions:
    - 114
  photofulfilling: !ruby/object:Word
    word: photofulfilling
    stem: photofulfil
    docFrequency: 2.0
    docPositions:
    - 118
  promiseprivacy: !ruby/object:Word
    word: promiseprivacy
    stem: promiseprivaci
    docFrequency: 2.0
    docPositions:
    - 118
lineCount: 125
wordCount: 2026
rank: 0.2781690568789498
title: "\n            NSF awards IU $1.2M to study self-assembling molecules, software
  for next-generation materials: IU Bloomington Newsroom: Indiana University Bloomington\n
  \               \n        "
links:
- https://www.indiana.edu
- http://news.indiana.edu
- http://news.indiana.edu/all-iub-news/index.shtml
- http://news.indiana.edu/arts-humanities/index.shtml
- http://news.indiana.edu/business/index.shtml
- http://news.indiana.edu/international/index.shtml
- http://news.indiana.edu/law-policy/index.shtml
- http://news.indiana.edu/life-health-sciences/index.shtml
- http://news.indiana.edu/science-technology/index.shtml
- http://www.iuhoosiers.com/
- http://news.indiana.edu/index.shtml
- http://flood.chem.indiana.edu/
- http://stait.chem.indiana.edu/
- http://ortoleva.chem.indiana.edu/
- https://www.whitehouse.gov/mgi
- https://www.nsf.gov/funding/pgm_summ.jsp?pims_id=505073
- http://onlinelibrary.wiley.com/doi/10.1002/chem.201503161/full
- https://www.nsf.gov/awardsearch/showAward?AWD_ID=1533988
- http://jacobson.chem.indiana.edu/
- http://beckman.illinois.edu/directory/person/seminlee
- https://www.iu.edu/~images/dams/484235_actual.jpg
- https://www.iu.edu/~images/dams/484236_actual.jpg
- http://news.indiana.edu/releases/iu/2015/12/next-gen-materials-grant.shtml
- http://news.iu.edu/
- http://newsinfo.iu.edu/web/page/normal/1286.html?s=pages
- http://www.facebook.com/IndianaUniversity
- http://twitter.com/IUNewsroom
- https://www.youtube.com/user/iu
- http://www.linkedin.com/company/indiana-university-bloomington
- https://plus.google.com/116105654836823545019?prsrc=3
- http://www.iu.edu/
- http://www.iu.edu/copyright/index.shtml
- http://www.iu.edu/
- http://www.iu.edu/copyright/complaints.shtml
rawText: "\n        \n        \n        \n        \nSkip to Content\nSkip to Search\nSkip
  to Navigation\n\n \n    \n       \n        \n        \n            \n        \n\t\n\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\t\tIndiana
  University Bloomington\n\t\t\t\t\tIndiana University Bloomington\n\t\t\t\t\tIU Bloomington\n\t\t\t\t\n\t\t\t\n\t\t\n\t\n
  \       \n    \n    \n        \n        \n        \n            \n        \n\n\n\t\n\t\tSearch\n\t\n
  \       \n    \n    \n        \n        \n        \n\nIU Bloomington Newsroom\n\n\n
  \n    \n        \n        \n            \n                \n            \n            \n
  \       All IUB NewsArts & HumanitiesBusinessInternationalLaw & PolicyLife & Health
  SciencesScience & TechnologyIU Athletics\n                IUB Newsroom »NSF awards
  IU $1.2M to study self-assembling molecules, software for next-generation materialsNSF
  awards IU $1.2M to study self-assembling molecules, software for next-generation
  materialsInterdisciplinary project to support development of more efficient solar
  cells, other future materials Dec. 1, 2015FOR IMMEDIATE RELEASE\nBLOOMINGTON, Ind.
  -- The National Science Foundation has awarded $1.2 million to three research groups
  at Indiana University to advance research on self-assembling molecules and computer-aided
  design software required to create the next generation of solar cells, circuits,
  sensors and other technology.\nThis interdisciplinary team in the IU Bloomington
  College of Arts and Sciences' Department of Chemistry is led by Amar Flood, Steven
  Tait and Peter Ortoleva in collaboration with Mu-Hyun Baik of the Korea Advanced
  Institute of Science and Technology, who previously served at IU.\nDesigning new
  materials at the molecular level is a key goal of the U.S. government's Materials
  Genome Initiative, a project launched in 2011 to reduce the cost, and speed the
  creation, of these materials. As recipients of funds from the NSF's Designing Materials
  to Revolutionize and Engineer Our Future program, the IU scientists will contribute
  to this national initiative.\n\"There are more than 100 million known molecules,
  but in the vast majority of cases we cannot predict what sort of structure they
  will form when those molecules start packing together,\" said Amar Flood, the James
  F. Jackson Professor of Chemistry and Luther Dana Waterman Professor in the IU Bloomington
  Department of Chemistry, who is the principal investigator on the grant. \"We want
  to be able to predict, as well as design, those structures.\"\nThe results would
  represent a \"transformative approach to the discovery of organic materials,\" he
  said, combining computer-aided design, chemical synthesis and molecular characterization
  methods.\nAnd recently, Flood and colleagues have shown such an ambitious goal is
  achievable.\nIn a paper published Nov. 23 in Chemistry -- A European Journal, the
  IU scientists describe an innovative \"one-pot\" method to synthesize a new macromolecule
  called a tricarbazolo triazolophane, or \"tricarb.\"\nA multifunctional, ring-shaped
  structure, tricarb molecules bear alignment markers so that they line up perfectly
  with each other upon contact to form highly organized, multilayered patterns. Tricarb
  molecules also have a central pocket to capture the negatively charged particles
  known as anions.\n\"Amar has developed a very elegant synthesis,\" said Tait, an
  associate professor of chemistry who is a co-author on the paper and also a co-investigator
  on the NSF grant. \"The result is molecules that recognize each other in a very
  specific way to order and stack in beautiful, flower-shaped crystalline patterns
  with potentially transformative properties.\"\nThe NSF-funded project will support
  creating molecular structures, like the tricarb molecule, that are specifically
  pre-programmed to self-assemble into three-dimensional structures that go beyond
  the comparatively simple, two-dimensional molecular arrangements.\n\"Creating building
  blocks that self-assemble into functional materials will be a major breakthrough
  in materials science and is a key component of the Materials Genome Initiative,\"
  said Stephen C. Jacobson, chair of the IU Bloomington Department of Chemistry. \"I
  am pleased that the NSF has recognized our faculty's combined expertise in synthesis,
  characterization and theory in selecting them to contribute to this important initiative.\"\nSpecifically,
  Flood said, the ability to alternate different molecules in highly ordered patterns
  is a key step in creating organic electronics, a new class of material whose applications
  include highly efficient solar panels and advanced computer circuitry.\n\"The best
  solar cells right now are made of extremely pure silicon, which requires a very
  precise -- and expensive -- production process,\" Tait said. \"But if we can create
  extremely pure, self-assembling organic materials, controlling the order of their
  interfaces and components at the molecular level, the performance of these organic
  materials will improve significantly, and their costs will go down.\"\nMost important
  for the creation of new molecular structures, the IU team will use the grant to
  develop computer-aided design software enabling virtual experimentation with the
  potential to examine the millions of molecular compounds of interest to material
  scientists.\nCurrently, Flood explained, scientists must engage in an arduous and
  time-consuming process of trial-and-error to design new structures with highly specialized
  properties since no blueprint exists for how molecules will react upon coming into
  contact with each other. But with virtual experimentation, molecular engineers could
  screen 100 potential molecular combinations over 100 days, only then devoting time
  and resources to synthesize the top five candidates, which can itself require about
  100 days per compound, creating enormous time-savings.\n\"CAD software is prevalent
  in electrical, mechanical and civil engineering, and we need that same technology
  at our fingertips for molecular and materials engineering,\" Flood said. \"The innovations
  coming from our computational collaborators are key.\"\nThese collaborations are
  with Ortoleva, a Distinguished Professor in the IU Bloomington Department of Chemistry
  who will help develop the CAD software using recent advances in multi-scale simulation
  that employ Baik's work on atomic-level force fields.\n\"Ultimately, we plan to
  show experimentally how molecules can be programmed so that they assemble themselves
  into 2-D and 3-D arrangements, as well as produce a working, operational and accurate
  simulation software,\" Flood added. \"Our goal will be to achieve high fidelity
  between theory, design and experimentation.\"\nIn addition to Flood and Tait, IU
  contributors to the journal paper were Brandon E. Hirsch, Yun Liu and James R. Dobscha,
  all graduate students in chemistry, and David W. Burke, an undergraduate student.
  Also an author on the paper is Semin Lee, a former IU graduate student and a postdoctoral
  fellow of the Beckman Institute for Advanced Science and Technology at the University
  of Illinois at Urbana-Champaign.PrintShareThe ring-shaped macromolecule tricarbazolo
  triazolophane, or \"tricarb,\" self-assembles into highly organized, multilayered
  patterns. | Photo by \n                            \n                            Indiana
  UniversityPrint-Quality PhotoAmar Flood | Photo by \n                            \n
  \                           Indiana UniversityPrint-Quality PhotoMedia ContactsKevin Fryling
  Office \n                        \n                        812-856-2988kfryling@iu.edu Web
  version: http://news.indiana.edu/releases/iu/2015/12/next-gen-materials-grant.shtml\n
  \               \n                \n        \n        \n        IU NewsroomArchiveContactNewslettersRSS
  Feeds\n                                Facebook  Twitter  YouTube  LinkedIn Google+
  \n \n    \n    \n            \n        \n                \n            \n        \n
  \       \n        \n        \n            \n        \n\t\tFulfilling the Promise\n\t\tPrivacy
  Notice\n\t\t\n\t\t\t\n\t\t\t\n\t\t\t\tCopyright © 2015\t\t\t\n\t\t\tThe Trustees
  of Indiana University,\n\t\t\tCopyright Complaints\n\t\t\n\t\nInterdisciplinary
  project to support development of more efficient solar cells, other future materials
  FOR IMMEDIATE RELEASEBLOOMINGTON, Ind. -- The National Science Foundation has awarded
  $1.2 million to three research groups at Indiana University to advance research
  on self-assembling molecules and computer-aided design software required to create
  the next generation of solar cells, circuits, sensors and other technology.This
  interdisciplinary team in the IU Bloomington College of Arts and Sciences' Department
  of Chemistry is led by Amar Flood, Steven Tait and Peter Ortoleva in collaboration
  with Mu-Hyun Baik of the Korea Advanced Institute of Science and Technology, who
  previously served at IU.Designing new materials at the molecular level is a key
  goal of the U.S. government's Materials Genome Initiative, a project launched in
  2011 to reduce the cost, and speed the creation, of these materials. As recipients
  of funds from the NSF's Designing Materials to Revolutionize and Engineer Our Future
  program, the IU scientists will contribute to this national initiative.\"There are
  more than 100 million known molecules, but in the vast majority of cases we cannot
  predict what sort of structure they will form when those molecules start packing
  together,\" said Amar Flood, the James F. Jackson Professor of Chemistry and Luther
  Dana Waterman Professor in the IU Bloomington Department of Chemistry, who is the
  principal investigator on the grant. \"We want to be able to predict, as well as
  design, those structures.\"The results would represent a \"transformative approach
  to the discovery of organic materials,\" he said, combining computer-aided design,
  chemical synthesis and molecular characterization methods.And recently, Flood and
  colleagues have shown such an ambitious goal is achievable.In a paper published
  Nov. 23 in Chemistry -- A European Journal, the IU scientists describe an innovative
  \"one-pot\" method to synthesize a new macromolecule called a tricarbazolo triazolophane,
  or \"tricarb.\"A multifunctional, ring-shaped structure, tricarb molecules bear
  alignment markers so that they line up perfectly with each other upon contact to
  form highly organized, multilayered patterns. Tricarb molecules also have a central
  pocket to capture the negatively charged particles known as anions.\"Amar has developed
  a very elegant synthesis,\" said Tait, an associate professor of chemistry who is
  a co-author on the paper and also a co-investigator on the NSF grant. \"The result
  is molecules that recognize each other in a very specific way to order and stack
  in beautiful, flower-shaped crystalline patterns with potentially transformative
  properties.\"The NSF-funded project will support creating molecular structures,
  like the tricarb molecule, that are specifically pre-programmed to self-assemble
  into three-dimensional structures that go beyond the comparatively simple, two-dimensional
  molecular arrangements.\"Creating building blocks that self-assemble into functional
  materials will be a major breakthrough in materials science and is a key component
  of the Materials Genome Initiative,\" said Stephen C. Jacobson, chair of the IU
  Bloomington Department of Chemistry. \"I am pleased that the NSF has recognized
  our faculty's combined expertise in synthesis, characterization and theory in selecting
  them to contribute to this important initiative.\"Specifically, Flood said, the
  ability to alternate different molecules in highly ordered patterns is a key step
  in creating organic electronics, a new class of material whose applications include
  highly efficient solar panels and advanced computer circuitry.\"The best solar cells
  right now are made of extremely pure silicon, which requires a very precise -- and
  expensive -- production process,\" Tait said. \"But if we can create extremely pure,
  self-assembling organic materials, controlling the order of their interfaces and
  components at the molecular level, the performance of these organic materials will
  improve significantly, and their costs will go down.\"Most important for the creation
  of new molecular structures, the IU team will use the grant to develop computer-aided
  design software enabling virtual experimentation with the potential to examine the
  millions of molecular compounds of interest to material scientists.Currently, Flood
  explained, scientists must engage in an arduous and time-consuming process of trial-and-error
  to design new structures with highly specialized properties since no blueprint exists
  for how molecules will react upon coming into contact with each other. But with
  virtual experimentation, molecular engineers could screen 100 potential molecular
  combinations over 100 days, only then devoting time and resources to synthesize
  the top five candidates, which can itself require about 100 days per compound, creating
  enormous time-savings.\"CAD software is prevalent in electrical, mechanical and
  civil engineering, and we need that same technology at our fingertips for molecular
  and materials engineering,\" Flood said. \"The innovations coming from our computational
  collaborators are key.\"These collaborations are with Ortoleva, a Distinguished
  Professor in the IU Bloomington Department of Chemistry who will help develop the
  CAD software using recent advances in multi-scale simulation that employ Baik's
  work on atomic-level force fields.\"Ultimately, we plan to show experimentally how
  molecules can be programmed so that they assemble themselves into 2-D and 3-D arrangements,
  as well as produce a working, operational and accurate simulation software,\" Flood
  added. \"Our goal will be to achieve high fidelity between theory, design and experimentation.\"In
  addition to Flood and Tait, IU contributors to the journal paper were Brandon E.
  Hirsch, Yun Liu and James R. Dobscha, all graduate students in chemistry, and David
  W. Burke, an undergraduate student. Also an author on the paper is Semin Lee, a
  former IU graduate student and a postdoctoral fellow of the Beckman Institute for
  Advanced Science and Technology at the University of Illinois at Urbana-Champaign.The
  ring-shaped macromolecule tricarbazolo triazolophane, or \"tricarb,\" self-assembles
  into highly organized, multilayered patterns. | Photo by \n                            \n
  \                           Indiana UniversityPrint-Quality PhotoAmar Flood | Photo
  by \n                            \n                            Indiana UniversityPrint-Quality
  PhotoFulfilling the PromisePrivacy Notice\n\t\t\t\n\t\t\t\n\t\t\t\tCopyright © 2015\t\t\t\n\t\t\tThe
  Trustees of Indiana University,\n\t\t\tCopyright Complaints\n\t\t"
