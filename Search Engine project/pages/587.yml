--- !ruby/object:WebPage
page: !ruby/object:Nokogiri::HTML::Document
  decorators: 
  node_cache:
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  errors:
  - !ruby/exception:Nokogiri::XML::SyntaxError
    message: |
      Attribute class redefined
    domain: 5
    code: 42
    level: 2
    file: "/tmp/open-uri20151214-21537-zkjoh3"
    line: 46
    str1: class
    str2: 
    str3: 
    int1: 0
    column: 179
  - !ruby/exception:Nokogiri::XML::SyntaxError
    message: |
      Attribute class redefined
    domain: 5
    code: 42
    level: 2
    file: "/tmp/open-uri20151214-21537-zkjoh3"
    line: 64
    str1: class
    str2: 
    str3: 
    int1: 0
    column: 386
address: http://www.sciencemuseum.org.uk/onlinestuff/stories/babbage.aspx?page=5
inboundLinks: []
lines:
- "\r\n"
- "    \r\n"
- "        Site display :NormalText only       Accessibility :BSLAudio\r\n"
- "                Skip to content\r\n"
- "              Privacy and cookies|Sign up to our newsletterGoAstonishing Science.
  Spectacular museum.Home\r\n"
- "            Visit The Museum\r\n"
- "          \r\n"
- "            Online Stuff\r\n"
- "          EducatorsShop OnlineAbout Us\r\n"
- "        \r\n"
- "            \r\n"
- "            \r\n"
- "\r\n"
- "\r\n"
- "    \r\n"
- "\r\n"
- "            \r\n"
- "            \r\n"
- "\r\n"
- "\r\n"
- "\r\n"
- "    \r\n"
- "    \r\n"
- "        \r\n"
- "    \r\n"
- "        \r\n"
- "            \r\n"
- "\r\n"
- "\r\n"
- "\r\n"
- "\r\n"
- "\r\n"
- "\t\r\n"
- "                Babbage<Prev12345Next>\r\n"
- "\t\tThe designs for the Analytical Engine include almost all the essential logical
  features of a modern electronic digital computer. The engine was programmable using
  punched cards. It had a ‘store’ where numbers and intermediate results could be
  held and a separate ‘mill’ where the arithmetic processing was performed. The separation
  of the ‘store’ (memory) and ‘mill’ (central processor) is a fundamental feature
  of the internal organisation of modern computers. \r\n"
- "The Analytical Engine could have `looped’ (repeat the same sequence of operations
  a predetermined number of times) and was capable of conditional branching (IF… THEN…
  statements) i.e. automatically take alternative courses of action depending on the
  result of a cacluation. \r\n"
- "In 1842, an Italian mathematician, Louis Menebrea, published a memoir in French
  on the subject of the Analytical Engine. Babbage was delighted with the interest
  in his project and appointed Ada Lovelace to act as a translator for the article.
  Ada added a series of in depth notes (which were longer than the original memoir),
  including detail of a method for calculating Bernoulli numbers using the Engine.
  It is her level of understanding of Babbage's mechanical machine that gives Ada
  Lovelace the credit she has today of being the first computer programmer.  \r\n"
- "If it had been completed the Analytical Engine would have been vast. It would have
  needed to be operated by a steam engine of some kind. Babbage made little attempt
  to raise funds to build the Analytical Engine. Instead he continued to work on simpler
  and cheaper methods of manufacturing parts and built a small trial model which was
  under construction at the time of his death. \r\n"
- "The movement to automate mathematical calculation in the nineteenth century failed
  and the impetus to continue this work was largely lost with Babbage’s death. From
  the vantage point of the modern computer age we are better placed to appreciate
  the full extent to which Babbage was indeed the first pioneer of computing. \r\n"
- "References\r\n"
- "Babbage, C., The Works of Charles Babbage. 11 volumes Campbell-Kelly, Martin, ed.,
  London:: William Pickering, 1989\r\n"
- "Collier, B., The little engines that could’ve: The calculating machines of Charles
  Babbage, Doctoral dissertation, Harvard, 1970, New York:: Garland, 1991\r\n"
- "Dubbey, J. M., The Mathematical work of Charles Babbage, : Cambridge University
  Press, 1978\r\n"
- "Hyman, A., Charles Babbage: pioneer of the computer, : Oxford University Press,
  1982\r\n"
- "Langley Moore, D., Ada, Countess of Lovelace: Byron’s legitimate daughter, London::
  John Murray, 1977\r\n"
- "Lindgren, M., Glory and Failure: The Difference Engines of Johann Muller, Charles
  Babbage, Georg and Edvard Scheutz, London:: MIT Press, 1990\r\n"
- "Moseley, M, Irascible genius: A Life of Charles Babbage, Inventor, London: Hutchinson,
  1964\r\n"
- "Stein, D, Ada: A Life and a Legacy, London:: MIT Press, 1985\r\n"
- "Swade, D., Charles Babbage and his Calculating Engines, London:: Science Museum,
  1991\r\n"
- "Swade, D., The Cogwheel Brain: Charles Babbage and the Quest to build the first
  Computer, London:: Little, Brown, 2001\r\n"
- "Toole, B., Ada, The Enchantress of Numbers, : Strawberry Press, 1992\r\n"
- "Woolley, B., The Bride of Science: Romance, Reason and Byron's Daughter, : Macmillan,
  1999Page 5 of 5Previous: Page 4 - Babbage<Prev12345Next>\r\n"
- "            \r\n"
- "        \r\n"
- "        \r\n"
- "        \r\n"
- "            \r\n"
- "        \r\n"
- "        \r\n"
- "    \r\n"
- "            \r\n"
- "    \r\n"
- "         \r\n"
- "    \r\n"
- "\r\n"
- "\r\n"
- "            \r\n"
- "            \r\n"
- "                 \r\n"
- "            \r\n"
- "        \r\n"
- "        \r\n"
- "        FacebookTwitterGoogle+YouTubeFlickrPinterestContact usSupport usPress and
  MediaEnquiries/Freedom of Information(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':\r\n"
- "      new Date().getTime(),event:'gtm.js'});var\r\n"
- "      f=d.getElementsByTagName(s)[0],\r\n"
- "      j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=\r\n"
- "      '//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j\r\n"
- "      ,f);\r\n"
- |2
        })(window,document,'script','dataLayer','GTM-KJVX2T');var _kiq = _kiq || [];
- |2
        var versaTag = {};
- |2
        versaTag.id = "782"
- |2
        versaTag.sync = 0
- |2
        versaTag.dispType = "js"
- |2
        versaTag.ptcl = "HTTP"
- |2
        versaTag.bsUrl = "bs.serving-sys.com/BurstingPipe"
- |2
        //versaTag.mobile = 1
- |2
        //VersaTag activity parameters include all conversion parameters including custom parameters. Syntax: "ParamName1":"ParamValue1", "ParamName2":"ParamValue2". ParamValue can be empty.
- |2
        versaTag.activityParams = {
- |2
        //Custom parameters:
- |2
        };
- |2
        //Static retargeting tags parameters. Syntax: "TagID1":"ParamValue1", "TagID2":"ParamValue2". ParamValue can be empty.
- |2
        versaTag.retargetParams = {};
- |2
        //Dynamic retargeting tags parameters. Syntax: "TagID1":"ParamValue1", "TagID2":"ParamValue2". ParamValue can be empty.
- |2
        versaTag.dynamicRetargetParams = {};
- |2
        //Third party tags conditional parameters. Syntax: "TagID1":"ParamValue1", "TagID2":"ParamValue2". ParamValue can be empty.
- |2
        versaTag.conditionalParams = {};
- "    \r\n"
- "        \r\n"
- "    \r\n"
- "    \r\n"
- "    \r\n"
- 'Astonishing Science. Spectacular museum.The designs for the Analytical Engine include
  almost all the essential logical features of a modern electronic digital computer.
  The engine was programmable using punched cards. It had a ‘store’ where numbers
  and intermediate results could be held and a separate ‘mill’ where the arithmetic
  processing was performed. The separation of the ‘store’ (memory) and ‘mill’ (central
  processor) is a fundamental feature of the internal organisation of modern computers.
  The Analytical Engine could have `looped’ (repeat the same sequence of operations
  a predetermined number of times) and was capable of conditional branching (IF… THEN…
  statements) i.e. automatically take alternative courses of action depending on the
  result of a cacluation. In 1842, an Italian mathematician, Louis Menebrea, published
  a memoir in French on the subject of the Analytical Engine. Babbage was delighted
  with the interest in his project and appointed Ada Lovelace to act as a translator
  for the article. Ada added a series of in depth notes (which were longer than the
  original memoir), including detail of a method for calculating Bernoulli numbers
  using the Engine. It is her level of understanding of Babbage''s mechanical machine
  that gives Ada Lovelace the credit she has today of being the first computer programmer. 
  If it had been completed the Analytical Engine would have been vast. It would have
  needed to be operated by a steam engine of some kind. Babbage made little attempt
  to raise funds to build the Analytical Engine. Instead he continued to work on simpler
  and cheaper methods of manufacturing parts and built a small trial model which was
  under construction at the time of his death. The movement to automate mathematical
  calculation in the nineteenth century failed and the impetus to continue this work
  was largely lost with Babbage’s death. From the vantage point of the modern computer
  age we are better placed to appreciate the full extent to which Babbage was indeed
  the first pioneer of computing. Page 5 of 5Previous: Page 4 - Babbage'
index:
  site: !ruby/object:Word
    word: site
    stem: site
    docFrequency: 2.0
    docPositions:
    - 2
  display: !ruby/object:Word
    word: display
    stem: displai
    docFrequency: 2.0
    docPositions:
    - 2
  normaltext: !ruby/object:Word
    word: normaltext
    stem: normaltext
    docFrequency: 2.0
    docPositions:
    - 2
  only: !ruby/object:Word
    word: only
    stem: onli
    docFrequency: 2.0
    docPositions:
    - 2
  accessibility: !ruby/object:Word
    word: accessibility
    stem: access
    docFrequency: 2.0
    docPositions:
    - 2
  bslaudio: !ruby/object:Word
    word: bslaudio
    stem: bslaudio
    docFrequency: 2.0
    docPositions:
    - 2
  skip: !ruby/object:Word
    word: skip
    stem: skip
    docFrequency: 2.0
    docPositions:
    - 3
  content: !ruby/object:Word
    word: content
    stem: content
    docFrequency: 2.0
    docPositions:
    - 3
  privacy: !ruby/object:Word
    word: privacy
    stem: privaci
    docFrequency: 2.0
    docPositions:
    - 4
  and: !ruby/object:Word
    word: and
    stem: and
    docFrequency: 25.0
    docPositions:
    - 4
    - 34
    - 35
    - 36
    - 37
    - 38
    - 45
    - 47
    - 48
    - 49
    - 51
    - 72
    - 101
  cookies: !ruby/object:Word
    word: cookies
    stem: cooki
    docFrequency: 2.0
    docPositions:
    - 4
  sign: !ruby/object:Word
    word: sign
    stem: sign
    docFrequency: 2.0
    docPositions:
    - 4
  up: !ruby/object:Word
    word: up
    stem: up
    docFrequency: 2.0
    docPositions:
    - 4
  our: !ruby/object:Word
    word: our
    stem: our
    docFrequency: 2.0
    docPositions:
    - 4
  newslettergoastonishing: !ruby/object:Word
    word: newslettergoastonishing
    stem: newslettergoastonish
    docFrequency: 2.0
    docPositions:
    - 4
  science: !ruby/object:Word
    word: science
    stem: scienc
    docFrequency: 5.0
    docPositions:
    - 4
    - 48
    - 51
    - 101
  spectacular: !ruby/object:Word
    word: spectacular
    stem: spectacular
    docFrequency: 3.0
    docPositions:
    - 4
    - 101
  museum: !ruby/object:Word
    word: museum
    stem: museum
    docFrequency: 5.0
    docPositions:
    - 4
    - 5
    - 48
    - 101
  home: !ruby/object:Word
    word: home
    stem: home
    docFrequency: 2.0
    docPositions:
    - 4
  visit: !ruby/object:Word
    word: visit
    stem: visit
    docFrequency: 2.0
    docPositions:
    - 5
  online: !ruby/object:Word
    word: online
    stem: onlin
    docFrequency: 2.0
    docPositions:
    - 7
  stuff: !ruby/object:Word
    word: stuff
    stem: stuff
    docFrequency: 2.0
    docPositions:
    - 7
  educatorsshop: !ruby/object:Word
    word: educatorsshop
    stem: educatorsshop
    docFrequency: 2.0
    docPositions:
    - 8
  onlineabout: !ruby/object:Word
    word: onlineabout
    stem: onlineabout
    docFrequency: 2.0
    docPositions:
    - 8
  us: !ruby/object:Word
    word: us
    stem: us
    docFrequency: 2.0
    docPositions:
    - 8
  babbage: !ruby/object:Word
    word: babbage
    stem: babbag
    docFrequency: 23.0
    docPositions:
    - 33
    - 36
    - 37
    - 38
    - 40
    - 41
    - 42
    - 43
    - 45
    - 46
    - 48
    - 49
    - 51
    - 101
  designs: !ruby/object:Word
    word: designs
    stem: design
    docFrequency: 3.0
    docPositions:
    - 34
    - 101
  analytical: !ruby/object:Word
    word: analytical
    stem: analyt
    docFrequency: 11.0
    docPositions:
    - 34
    - 35
    - 36
    - 37
    - 101
  engine: !ruby/object:Word
    word: engine
    stem: engin
    docFrequency: 17.0
    docPositions:
    - 34
    - 35
    - 36
    - 37
    - 101
  include: !ruby/object:Word
    word: include
    stem: includ
    docFrequency: 4.0
    docPositions:
    - 34
    - 86
    - 101
  almost: !ruby/object:Word
    word: almost
    stem: almost
    docFrequency: 3.0
    docPositions:
    - 34
    - 101
  all: !ruby/object:Word
    word: all
    stem: all
    docFrequency: 4.0
    docPositions:
    - 34
    - 86
    - 101
  essential: !ruby/object:Word
    word: essential
    stem: essenti
    docFrequency: 3.0
    docPositions:
    - 34
    - 101
  logical: !ruby/object:Word
    word: logical
    stem: logic
    docFrequency: 3.0
    docPositions:
    - 34
    - 101
  features: !ruby/object:Word
    word: features
    stem: featur
    docFrequency: 3.0
    docPositions:
    - 34
    - 101
  modern: !ruby/object:Word
    word: modern
    stem: modern
    docFrequency: 7.0
    docPositions:
    - 34
    - 38
    - 101
  electronic: !ruby/object:Word
    word: electronic
    stem: electron
    docFrequency: 3.0
    docPositions:
    - 34
    - 101
  digital: !ruby/object:Word
    word: digital
    stem: digit
    docFrequency: 3.0
    docPositions:
    - 34
    - 101
  computer: !ruby/object:Word
    word: computer
    stem: comput
    docFrequency: 9.0
    docPositions:
    - 34
    - 36
    - 38
    - 43
    - 49
    - 101
  programmable: !ruby/object:Word
    word: programmable
    stem: programm
    docFrequency: 3.0
    docPositions:
    - 34
    - 101
  using: !ruby/object:Word
    word: using
    stem: us
    docFrequency: 5.0
    docPositions:
    - 34
    - 36
    - 101
  punched: !ruby/object:Word
    word: punched
    stem: punch
    docFrequency: 3.0
    docPositions:
    - 34
    - 101
  cards: !ruby/object:Word
    word: cards
    stem: card
    docFrequency: 3.0
    docPositions:
    - 34
    - 101
  had: !ruby/object:Word
    word: had
    stem: had
    docFrequency: 5.0
    docPositions:
    - 34
    - 37
    - 101
  store: !ruby/object:Word
    word: store
    stem: store
    docFrequency: 5.0
    docPositions:
    - 34
    - 101
  numbers: !ruby/object:Word
    word: numbers
    stem: number
    docFrequency: 6.0
    docPositions:
    - 34
    - 36
    - 50
    - 101
  intermediate: !ruby/object:Word
    word: intermediate
    stem: intermedi
    docFrequency: 3.0
    docPositions:
    - 34
    - 101
  results: !ruby/object:Word
    word: results
    stem: result
    docFrequency: 3.0
    docPositions:
    - 34
    - 101
  could: !ruby/object:Word
    word: could
    stem: could
    docFrequency: 6.0
    docPositions:
    - 34
    - 35
    - 41
    - 101
  held: !ruby/object:Word
    word: held
    stem: held
    docFrequency: 3.0
    docPositions:
    - 34
    - 101
  separate: !ruby/object:Word
    word: separate
    stem: separ
    docFrequency: 3.0
    docPositions:
    - 34
    - 101
  mill: !ruby/object:Word
    word: mill
    stem: mill
    docFrequency: 5.0
    docPositions:
    - 34
    - 101
  arithmetic: !ruby/object:Word
    word: arithmetic
    stem: arithmet
    docFrequency: 3.0
    docPositions:
    - 34
    - 101
  processing: !ruby/object:Word
    word: processing
    stem: process
    docFrequency: 3.0
    docPositions:
    - 34
    - 101
  performed: !ruby/object:Word
    word: performed
    stem: perform
    docFrequency: 3.0
    docPositions:
    - 34
    - 101
  separation: !ruby/object:Word
    word: separation
    stem: separ
    docFrequency: 3.0
    docPositions:
    - 34
    - 101
  memory: !ruby/object:Word
    word: memory
    stem: memori
    docFrequency: 3.0
    docPositions:
    - 34
    - 101
  central: !ruby/object:Word
    word: central
    stem: central
    docFrequency: 3.0
    docPositions:
    - 34
    - 101
  processor: !ruby/object:Word
    word: processor
    stem: processor
    docFrequency: 3.0
    docPositions:
    - 34
    - 101
  fundamental: !ruby/object:Word
    word: fundamental
    stem: fundament
    docFrequency: 3.0
    docPositions:
    - 34
    - 101
  feature: !ruby/object:Word
    word: feature
    stem: featur
    docFrequency: 3.0
    docPositions:
    - 34
    - 101
  internal: !ruby/object:Word
    word: internal
    stem: intern
    docFrequency: 3.0
    docPositions:
    - 34
    - 101
  organisation: !ruby/object:Word
    word: organisation
    stem: organis
    docFrequency: 3.0
    docPositions:
    - 34
    - 101
  computers: !ruby/object:Word
    word: computers
    stem: comput
    docFrequency: 3.0
    docPositions:
    - 34
    - 101
  have: !ruby/object:Word
    word: have
    stem: have
    docFrequency: 7.0
    docPositions:
    - 35
    - 37
    - 101
  looped: !ruby/object:Word
    word: looped
    stem: loop
    docFrequency: 3.0
    docPositions:
    - 35
    - 101
  repeat: !ruby/object:Word
    word: repeat
    stem: repeat
    docFrequency: 3.0
    docPositions:
    - 35
    - 101
  same: !ruby/object:Word
    word: same
    stem: same
    docFrequency: 3.0
    docPositions:
    - 35
    - 101
  sequence: !ruby/object:Word
    word: sequence
    stem: sequenc
    docFrequency: 3.0
    docPositions:
    - 35
    - 101
  operations: !ruby/object:Word
    word: operations
    stem: oper
    docFrequency: 3.0
    docPositions:
    - 35
    - 101
  predetermined: !ruby/object:Word
    word: predetermined
    stem: predetermin
    docFrequency: 3.0
    docPositions:
    - 35
    - 101
  number: !ruby/object:Word
    word: number
    stem: number
    docFrequency: 3.0
    docPositions:
    - 35
    - 101
  times: !ruby/object:Word
    word: times
    stem: time
    docFrequency: 3.0
    docPositions:
    - 35
    - 101
  capable: !ruby/object:Word
    word: capable
    stem: capabl
    docFrequency: 3.0
    docPositions:
    - 35
    - 101
  conditional: !ruby/object:Word
    word: conditional
    stem: condit
    docFrequency: 4.0
    docPositions:
    - 35
    - 94
    - 101
  branching: !ruby/object:Word
    word: branching
    stem: branch
    docFrequency: 3.0
    docPositions:
    - 35
    - 101
  if: !ruby/object:Word
    word: if
    stem: if
    docFrequency: 5.0
    docPositions:
    - 35
    - 37
    - 101
  then: !ruby/object:Word
    word: then
    stem: then
    docFrequency: 3.0
    docPositions:
    - 35
    - 101
  statements: !ruby/object:Word
    word: statements
    stem: statement
    docFrequency: 3.0
    docPositions:
    - 35
    - 101
  i: !ruby/object:Word
    word: i
    stem: i
    docFrequency: 5.0
    docPositions:
    - 35
    - 72
    - 76
    - 101
  e: !ruby/object:Word
    word: e
    stem: e
    docFrequency: 3.0
    docPositions:
    - 35
    - 101
  automatically: !ruby/object:Word
    word: automatically
    stem: automat
    docFrequency: 3.0
    docPositions:
    - 35
    - 101
  take: !ruby/object:Word
    word: take
    stem: take
    docFrequency: 3.0
    docPositions:
    - 35
    - 101
  alternative: !ruby/object:Word
    word: alternative
    stem: altern
    docFrequency: 3.0
    docPositions:
    - 35
    - 101
  courses: !ruby/object:Word
    word: courses
    stem: cours
    docFrequency: 3.0
    docPositions:
    - 35
    - 101
  action: !ruby/object:Word
    word: action
    stem: action
    docFrequency: 3.0
    docPositions:
    - 35
    - 101
  depending: !ruby/object:Word
    word: depending
    stem: depend
    docFrequency: 3.0
    docPositions:
    - 35
    - 101
  result: !ruby/object:Word
    word: result
    stem: result
    docFrequency: 3.0
    docPositions:
    - 35
    - 101
  cacluation: !ruby/object:Word
    word: cacluation
    stem: cacluat
    docFrequency: 3.0
    docPositions:
    - 35
    - 101
  italian: !ruby/object:Word
    word: italian
    stem: italian
    docFrequency: 3.0
    docPositions:
    - 36
    - 101
  mathematician: !ruby/object:Word
    word: mathematician
    stem: mathematician
    docFrequency: 3.0
    docPositions:
    - 36
    - 101
  louis: !ruby/object:Word
    word: louis
    stem: loui
    docFrequency: 3.0
    docPositions:
    - 36
    - 101
  menebrea: !ruby/object:Word
    word: menebrea
    stem: menebrea
    docFrequency: 3.0
    docPositions:
    - 36
    - 101
  published: !ruby/object:Word
    word: published
    stem: publish
    docFrequency: 3.0
    docPositions:
    - 36
    - 101
  memoir: !ruby/object:Word
    word: memoir
    stem: memoir
    docFrequency: 5.0
    docPositions:
    - 36
    - 101
  french: !ruby/object:Word
    word: french
    stem: french
    docFrequency: 3.0
    docPositions:
    - 36
    - 101
  subject: !ruby/object:Word
    word: subject
    stem: subject
    docFrequency: 3.0
    docPositions:
    - 36
    - 101
  delighted: !ruby/object:Word
    word: delighted
    stem: delight
    docFrequency: 3.0
    docPositions:
    - 36
    - 101
  interest: !ruby/object:Word
    word: interest
    stem: interest
    docFrequency: 3.0
    docPositions:
    - 36
    - 101
  his: !ruby/object:Word
    word: his
    stem: hi
    docFrequency: 6.0
    docPositions:
    - 36
    - 37
    - 48
    - 101
  project: !ruby/object:Word
    word: project
    stem: project
    docFrequency: 3.0
    docPositions:
    - 36
    - 101
  appointed: !ruby/object:Word
    word: appointed
    stem: appoint
    docFrequency: 3.0
    docPositions:
    - 36
    - 101
  ada: !ruby/object:Word
    word: ada
    stem: ada
    docFrequency: 10.0
    docPositions:
    - 36
    - 44
    - 47
    - 50
    - 101
  lovelace: !ruby/object:Word
    word: lovelace
    stem: lovelac
    docFrequency: 6.0
    docPositions:
    - 36
    - 44
    - 101
  act: !ruby/object:Word
    word: act
    stem: act
    docFrequency: 3.0
    docPositions:
    - 36
    - 101
  translator: !ruby/object:Word
    word: translator
    stem: translat
    docFrequency: 3.0
    docPositions:
    - 36
    - 101
  article: !ruby/object:Word
    word: article
    stem: articl
    docFrequency: 3.0
    docPositions:
    - 36
    - 101
  added: !ruby/object:Word
    word: added
    stem: ad
    docFrequency: 3.0
    docPositions:
    - 36
    - 101
  series: !ruby/object:Word
    word: series
    stem: seri
    docFrequency: 3.0
    docPositions:
    - 36
    - 101
  depth: !ruby/object:Word
    word: depth
    stem: depth
    docFrequency: 3.0
    docPositions:
    - 36
    - 101
  notes: !ruby/object:Word
    word: notes
    stem: note
    docFrequency: 3.0
    docPositions:
    - 36
    - 101
  which: !ruby/object:Word
    word: which
    stem: which
    docFrequency: 7.0
    docPositions:
    - 36
    - 37
    - 38
    - 101
  were: !ruby/object:Word
    word: were
    stem: were
    docFrequency: 3.0
    docPositions:
    - 36
    - 101
  longer: !ruby/object:Word
    word: longer
    stem: longer
    docFrequency: 3.0
    docPositions:
    - 36
    - 101
  than: !ruby/object:Word
    word: than
    stem: than
    docFrequency: 3.0
    docPositions:
    - 36
    - 101
  original: !ruby/object:Word
    word: original
    stem: origin
    docFrequency: 3.0
    docPositions:
    - 36
    - 101
  including: !ruby/object:Word
    word: including
    stem: includ
    docFrequency: 4.0
    docPositions:
    - 36
    - 86
    - 101
  detail: !ruby/object:Word
    word: detail
    stem: detail
    docFrequency: 3.0
    docPositions:
    - 36
    - 101
  method: !ruby/object:Word
    word: method
    stem: method
    docFrequency: 3.0
    docPositions:
    - 36
    - 101
  calculating: !ruby/object:Word
    word: calculating
    stem: calcul
    docFrequency: 5.0
    docPositions:
    - 36
    - 41
    - 48
    - 101
  bernoulli: !ruby/object:Word
    word: bernoulli
    stem: bernoulli
    docFrequency: 3.0
    docPositions:
    - 36
    - 101
  her: !ruby/object:Word
    word: her
    stem: her
    docFrequency: 3.0
    docPositions:
    - 36
    - 101
  level: !ruby/object:Word
    word: level
    stem: level
    docFrequency: 3.0
    docPositions:
    - 36
    - 101
  understanding: !ruby/object:Word
    word: understanding
    stem: understand
    docFrequency: 3.0
    docPositions:
    - 36
    - 101
  s: !ruby/object:Word
    word: s
    stem: s
    docFrequency: 10.0
    docPositions:
    - 36
    - 38
    - 44
    - 51
    - 72
    - 74
    - 75
    - 101
  mechanical: !ruby/object:Word
    word: mechanical
    stem: mechan
    docFrequency: 3.0
    docPositions:
    - 36
    - 101
  machine: !ruby/object:Word
    word: machine
    stem: machin
    docFrequency: 3.0
    docPositions:
    - 36
    - 101
  gives: !ruby/object:Word
    word: gives
    stem: give
    docFrequency: 3.0
    docPositions:
    - 36
    - 101
  credit: !ruby/object:Word
    word: credit
    stem: credit
    docFrequency: 3.0
    docPositions:
    - 36
    - 101
  she: !ruby/object:Word
    word: she
    stem: she
    docFrequency: 3.0
    docPositions:
    - 36
    - 101
  has: !ruby/object:Word
    word: has
    stem: ha
    docFrequency: 3.0
    docPositions:
    - 36
    - 101
  today: !ruby/object:Word
    word: today
    stem: todai
    docFrequency: 3.0
    docPositions:
    - 36
    - 101
  being: !ruby/object:Word
    word: being
    stem: be
    docFrequency: 3.0
    docPositions:
    - 36
    - 101
  first: !ruby/object:Word
    word: first
    stem: first
    docFrequency: 6.0
    docPositions:
    - 36
    - 38
    - 49
    - 101
  programmer: !ruby/object:Word
    word: programmer
    stem: programm
    docFrequency: 3.0
    docPositions:
    - 36
    - 101
  been: !ruby/object:Word
    word: been
    stem: been
    docFrequency: 5.0
    docPositions:
    - 37
    - 101
  completed: !ruby/object:Word
    word: completed
    stem: complet
    docFrequency: 3.0
    docPositions:
    - 37
    - 101
  would: !ruby/object:Word
    word: would
    stem: would
    docFrequency: 5.0
    docPositions:
    - 37
    - 101
  vast: !ruby/object:Word
    word: vast
    stem: vast
    docFrequency: 3.0
    docPositions:
    - 37
    - 101
  needed: !ruby/object:Word
    word: needed
    stem: need
    docFrequency: 3.0
    docPositions:
    - 37
    - 101
  operated: !ruby/object:Word
    word: operated
    stem: oper
    docFrequency: 3.0
    docPositions:
    - 37
    - 101
  steam: !ruby/object:Word
    word: steam
    stem: steam
    docFrequency: 3.0
    docPositions:
    - 37
    - 101
  some: !ruby/object:Word
    word: some
    stem: some
    docFrequency: 3.0
    docPositions:
    - 37
    - 101
  kind: !ruby/object:Word
    word: kind
    stem: kind
    docFrequency: 3.0
    docPositions:
    - 37
    - 101
  made: !ruby/object:Word
    word: made
    stem: made
    docFrequency: 3.0
    docPositions:
    - 37
    - 101
  little: !ruby/object:Word
    word: little
    stem: littl
    docFrequency: 5.0
    docPositions:
    - 37
    - 41
    - 49
    - 101
  attempt: !ruby/object:Word
    word: attempt
    stem: attempt
    docFrequency: 3.0
    docPositions:
    - 37
    - 101
  raise: !ruby/object:Word
    word: raise
    stem: rais
    docFrequency: 3.0
    docPositions:
    - 37
    - 101
  funds: !ruby/object:Word
    word: funds
    stem: fund
    docFrequency: 3.0
    docPositions:
    - 37
    - 101
  build: !ruby/object:Word
    word: build
    stem: build
    docFrequency: 4.0
    docPositions:
    - 37
    - 49
    - 101
  instead: !ruby/object:Word
    word: instead
    stem: instead
    docFrequency: 3.0
    docPositions:
    - 37
    - 101
  he: !ruby/object:Word
    word: he
    stem: he
    docFrequency: 3.0
    docPositions:
    - 37
    - 101
  continued: !ruby/object:Word
    word: continued
    stem: continu
    docFrequency: 3.0
    docPositions:
    - 37
    - 101
  work: !ruby/object:Word
    word: work
    stem: work
    docFrequency: 6.0
    docPositions:
    - 37
    - 38
    - 42
    - 101
  simpler: !ruby/object:Word
    word: simpler
    stem: simpler
    docFrequency: 3.0
    docPositions:
    - 37
    - 101
  cheaper: !ruby/object:Word
    word: cheaper
    stem: cheaper
    docFrequency: 3.0
    docPositions:
    - 37
    - 101
  methods: !ruby/object:Word
    word: methods
    stem: method
    docFrequency: 3.0
    docPositions:
    - 37
    - 101
  manufacturing: !ruby/object:Word
    word: manufacturing
    stem: manufactur
    docFrequency: 3.0
    docPositions:
    - 37
    - 101
  parts: !ruby/object:Word
    word: parts
    stem: part
    docFrequency: 3.0
    docPositions:
    - 37
    - 101
  built: !ruby/object:Word
    word: built
    stem: built
    docFrequency: 3.0
    docPositions:
    - 37
    - 101
  small: !ruby/object:Word
    word: small
    stem: small
    docFrequency: 3.0
    docPositions:
    - 37
    - 101
  trial: !ruby/object:Word
    word: trial
    stem: trial
    docFrequency: 3.0
    docPositions:
    - 37
    - 101
  model: !ruby/object:Word
    word: model
    stem: model
    docFrequency: 3.0
    docPositions:
    - 37
    - 101
  under: !ruby/object:Word
    word: under
    stem: under
    docFrequency: 3.0
    docPositions:
    - 37
    - 101
  construction: !ruby/object:Word
    word: construction
    stem: construct
    docFrequency: 3.0
    docPositions:
    - 37
    - 101
  time: !ruby/object:Word
    word: time
    stem: time
    docFrequency: 3.0
    docPositions:
    - 37
    - 101
  death: !ruby/object:Word
    word: death
    stem: death
    docFrequency: 5.0
    docPositions:
    - 37
    - 38
    - 101
  movement: !ruby/object:Word
    word: movement
    stem: movement
    docFrequency: 3.0
    docPositions:
    - 38
    - 101
  automate: !ruby/object:Word
    word: automate
    stem: autom
    docFrequency: 3.0
    docPositions:
    - 38
    - 101
  mathematical: !ruby/object:Word
    word: mathematical
    stem: mathemat
    docFrequency: 4.0
    docPositions:
    - 38
    - 42
    - 101
  calculation: !ruby/object:Word
    word: calculation
    stem: calcul
    docFrequency: 3.0
    docPositions:
    - 38
    - 101
  nineteenth: !ruby/object:Word
    word: nineteenth
    stem: nineteenth
    docFrequency: 3.0
    docPositions:
    - 38
    - 101
  century: !ruby/object:Word
    word: century
    stem: centuri
    docFrequency: 3.0
    docPositions:
    - 38
    - 101
  failed: !ruby/object:Word
    word: failed
    stem: fail
    docFrequency: 3.0
    docPositions:
    - 38
    - 101
  impetus: !ruby/object:Word
    word: impetus
    stem: impetu
    docFrequency: 3.0
    docPositions:
    - 38
    - 101
  continue: !ruby/object:Word
    word: continue
    stem: continu
    docFrequency: 3.0
    docPositions:
    - 38
    - 101
  largely: !ruby/object:Word
    word: largely
    stem: larg
    docFrequency: 3.0
    docPositions:
    - 38
    - 101
  lost: !ruby/object:Word
    word: lost
    stem: lost
    docFrequency: 3.0
    docPositions:
    - 38
    - 101
  vantage: !ruby/object:Word
    word: vantage
    stem: vantag
    docFrequency: 3.0
    docPositions:
    - 38
    - 101
  point: !ruby/object:Word
    word: point
    stem: point
    docFrequency: 3.0
    docPositions:
    - 38
    - 101
  age: !ruby/object:Word
    word: age
    stem: ag
    docFrequency: 3.0
    docPositions:
    - 38
    - 101
  we: !ruby/object:Word
    word: we
    stem: we
    docFrequency: 3.0
    docPositions:
    - 38
    - 101
  better: !ruby/object:Word
    word: better
    stem: better
    docFrequency: 3.0
    docPositions:
    - 38
    - 101
  placed: !ruby/object:Word
    word: placed
    stem: place
    docFrequency: 3.0
    docPositions:
    - 38
    - 101
  appreciate: !ruby/object:Word
    word: appreciate
    stem: appreci
    docFrequency: 3.0
    docPositions:
    - 38
    - 101
  full: !ruby/object:Word
    word: full
    stem: full
    docFrequency: 3.0
    docPositions:
    - 38
    - 101
  extent: !ruby/object:Word
    word: extent
    stem: extent
    docFrequency: 3.0
    docPositions:
    - 38
    - 101
  indeed: !ruby/object:Word
    word: indeed
    stem: inde
    docFrequency: 3.0
    docPositions:
    - 38
    - 101
  pioneer: !ruby/object:Word
    word: pioneer
    stem: pioneer
    docFrequency: 4.0
    docPositions:
    - 38
    - 43
    - 101
  computing: !ruby/object:Word
    word: computing
    stem: comput
    docFrequency: 3.0
    docPositions:
    - 38
    - 101
  references: !ruby/object:Word
    word: references
    stem: refer
    docFrequency: 2.0
    docPositions:
    - 39
  c: !ruby/object:Word
    word: c
    stem: c
    docFrequency: 2.0
    docPositions:
    - 40
  works: !ruby/object:Word
    word: works
    stem: work
    docFrequency: 2.0
    docPositions:
    - 40
  charles: !ruby/object:Word
    word: charles
    stem: charl
    docFrequency: 9.0
    docPositions:
    - 40
    - 41
    - 42
    - 43
    - 45
    - 46
    - 48
    - 49
  volumes: !ruby/object:Word
    word: volumes
    stem: volum
    docFrequency: 2.0
    docPositions:
    - 40
  campbell: !ruby/object:Word
    word: campbell
    stem: campbel
    docFrequency: 2.0
    docPositions:
    - 40
  kelly: !ruby/object:Word
    word: kelly
    stem: kelli
    docFrequency: 2.0
    docPositions:
    - 40
  martin: !ruby/object:Word
    word: martin
    stem: martin
    docFrequency: 2.0
    docPositions:
    - 40
  ed: !ruby/object:Word
    word: ed
    stem: ed
    docFrequency: 2.0
    docPositions:
    - 40
  london: !ruby/object:Word
    word: london
    stem: london
    docFrequency: 8.0
    docPositions:
    - 40
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
  william: !ruby/object:Word
    word: william
    stem: william
    docFrequency: 2.0
    docPositions:
    - 40
  pickering: !ruby/object:Word
    word: pickering
    stem: picker
    docFrequency: 2.0
    docPositions:
    - 40
  collier: !ruby/object:Word
    word: collier
    stem: collier
    docFrequency: 2.0
    docPositions:
    - 41
  b: !ruby/object:Word
    word: b
    stem: b
    docFrequency: 4.0
    docPositions:
    - 41
    - 50
    - 51
  engines: !ruby/object:Word
    word: engines
    stem: engin
    docFrequency: 4.0
    docPositions:
    - 41
    - 45
    - 48
  ve: !ruby/object:Word
    word: ve
    stem: ve
    docFrequency: 2.0
    docPositions:
    - 41
  machines: !ruby/object:Word
    word: machines
    stem: machin
    docFrequency: 2.0
    docPositions:
    - 41
  doctoral: !ruby/object:Word
    word: doctoral
    stem: doctor
    docFrequency: 2.0
    docPositions:
    - 41
  dissertation: !ruby/object:Word
    word: dissertation
    stem: dissert
    docFrequency: 2.0
    docPositions:
    - 41
  harvard: !ruby/object:Word
    word: harvard
    stem: harvard
    docFrequency: 2.0
    docPositions:
    - 41
  new: !ruby/object:Word
    word: new
    stem: new
    docFrequency: 3.0
    docPositions:
    - 41
    - 73
  york: !ruby/object:Word
    word: york
    stem: york
    docFrequency: 2.0
    docPositions:
    - 41
  garland: !ruby/object:Word
    word: garland
    stem: garland
    docFrequency: 2.0
    docPositions:
    - 41
  dubbey: !ruby/object:Word
    word: dubbey
    stem: dubbei
    docFrequency: 2.0
    docPositions:
    - 42
  j: !ruby/object:Word
    word: j
    stem: j
    docFrequency: 6.0
    docPositions:
    - 42
    - 75
    - 76
  m: !ruby/object:Word
    word: m
    stem: m
    docFrequency: 4.0
    docPositions:
    - 42
    - 45
    - 46
  cambridge: !ruby/object:Word
    word: cambridge
    stem: cambridg
    docFrequency: 2.0
    docPositions:
    - 42
  university: !ruby/object:Word
    word: university
    stem: univers
    docFrequency: 3.0
    docPositions:
    - 42
    - 43
  press: !ruby/object:Word
    word: press
    stem: press
    docFrequency: 6.0
    docPositions:
    - 42
    - 43
    - 45
    - 47
    - 50
  hyman: !ruby/object:Word
    word: hyman
    stem: hyman
    docFrequency: 2.0
    docPositions:
    - 43
  oxford: !ruby/object:Word
    word: oxford
    stem: oxford
    docFrequency: 2.0
    docPositions:
    - 43
  langley: !ruby/object:Word
    word: langley
    stem: langlei
    docFrequency: 2.0
    docPositions:
    - 44
  moore: !ruby/object:Word
    word: moore
    stem: moor
    docFrequency: 2.0
    docPositions:
    - 44
  d: !ruby/object:Word
    word: d
    stem: d
    docFrequency: 8.0
    docPositions:
    - 44
    - 47
    - 48
    - 49
    - 72
    - 74
    - 75
  countess: !ruby/object:Word
    word: countess
    stem: countess
    docFrequency: 2.0
    docPositions:
    - 44
  byron: !ruby/object:Word
    word: byron
    stem: byron
    docFrequency: 3.0
    docPositions:
    - 44
    - 51
  legitimate: !ruby/object:Word
    word: legitimate
    stem: legitim
    docFrequency: 2.0
    docPositions:
    - 44
  daughter: !ruby/object:Word
    word: daughter
    stem: daughter
    docFrequency: 3.0
    docPositions:
    - 44
    - 51
  john: !ruby/object:Word
    word: john
    stem: john
    docFrequency: 2.0
    docPositions:
    - 44
  murray: !ruby/object:Word
    word: murray
    stem: murrai
    docFrequency: 2.0
    docPositions:
    - 44
  lindgren: !ruby/object:Word
    word: lindgren
    stem: lindgren
    docFrequency: 2.0
    docPositions:
    - 45
  glory: !ruby/object:Word
    word: glory
    stem: glori
    docFrequency: 2.0
    docPositions:
    - 45
  failure: !ruby/object:Word
    word: failure
    stem: failur
    docFrequency: 2.0
    docPositions:
    - 45
  difference: !ruby/object:Word
    word: difference
    stem: differ
    docFrequency: 2.0
    docPositions:
    - 45
  johann: !ruby/object:Word
    word: johann
    stem: johann
    docFrequency: 2.0
    docPositions:
    - 45
  muller: !ruby/object:Word
    word: muller
    stem: muller
    docFrequency: 2.0
    docPositions:
    - 45
  georg: !ruby/object:Word
    word: georg
    stem: georg
    docFrequency: 2.0
    docPositions:
    - 45
  edvard: !ruby/object:Word
    word: edvard
    stem: edvard
    docFrequency: 2.0
    docPositions:
    - 45
  scheutz: !ruby/object:Word
    word: scheutz
    stem: scheutz
    docFrequency: 2.0
    docPositions:
    - 45
  mit: !ruby/object:Word
    word: mit
    stem: mit
    docFrequency: 3.0
    docPositions:
    - 45
    - 47
  moseley: !ruby/object:Word
    word: moseley
    stem: moselei
    docFrequency: 2.0
    docPositions:
    - 46
  irascible: !ruby/object:Word
    word: irascible
    stem: irasc
    docFrequency: 2.0
    docPositions:
    - 46
  genius: !ruby/object:Word
    word: genius
    stem: geniu
    docFrequency: 2.0
    docPositions:
    - 46
  life: !ruby/object:Word
    word: life
    stem: life
    docFrequency: 3.0
    docPositions:
    - 46
    - 47
  inventor: !ruby/object:Word
    word: inventor
    stem: inventor
    docFrequency: 2.0
    docPositions:
    - 46
  hutchinson: !ruby/object:Word
    word: hutchinson
    stem: hutchinson
    docFrequency: 2.0
    docPositions:
    - 46
  stein: !ruby/object:Word
    word: stein
    stem: stein
    docFrequency: 2.0
    docPositions:
    - 47
  legacy: !ruby/object:Word
    word: legacy
    stem: legaci
    docFrequency: 2.0
    docPositions:
    - 47
  swade: !ruby/object:Word
    word: swade
    stem: swade
    docFrequency: 3.0
    docPositions:
    - 48
    - 49
  cogwheel: !ruby/object:Word
    word: cogwheel
    stem: cogwheel
    docFrequency: 2.0
    docPositions:
    - 49
  brain: !ruby/object:Word
    word: brain
    stem: brain
    docFrequency: 2.0
    docPositions:
    - 49
  quest: !ruby/object:Word
    word: quest
    stem: quest
    docFrequency: 2.0
    docPositions:
    - 49
  brown: !ruby/object:Word
    word: brown
    stem: brown
    docFrequency: 2.0
    docPositions:
    - 49
  toole: !ruby/object:Word
    word: toole
    stem: tool
    docFrequency: 2.0
    docPositions:
    - 50
  enchantress: !ruby/object:Word
    word: enchantress
    stem: enchantress
    docFrequency: 2.0
    docPositions:
    - 50
  strawberry: !ruby/object:Word
    word: strawberry
    stem: strawberri
    docFrequency: 2.0
    docPositions:
    - 50
  woolley: !ruby/object:Word
    word: woolley
    stem: woollei
    docFrequency: 2.0
    docPositions:
    - 51
  bride: !ruby/object:Word
    word: bride
    stem: bride
    docFrequency: 2.0
    docPositions:
    - 51
  romance: !ruby/object:Word
    word: romance
    stem: romanc
    docFrequency: 2.0
    docPositions:
    - 51
  reason: !ruby/object:Word
    word: reason
    stem: reason
    docFrequency: 2.0
    docPositions:
    - 51
  macmillan: !ruby/object:Word
    word: macmillan
    stem: macmillan
    docFrequency: 2.0
    docPositions:
    - 51
  page: !ruby/object:Word
    word: page
    stem: page
    docFrequency: 4.0
    docPositions:
    - 51
    - 101
  facebooktwittergoogle: !ruby/object:Word
    word: facebooktwittergoogle
    stem: facebooktwittergoogl
    docFrequency: 2.0
    docPositions:
    - 72
  youtubeflickrpinterestcontact: !ruby/object:Word
    word: youtubeflickrpinterestcontact
    stem: youtubeflickrpinterestcontact
    docFrequency: 2.0
    docPositions:
    - 72
  ussupport: !ruby/object:Word
    word: ussupport
    stem: ussupport
    docFrequency: 2.0
    docPositions:
    - 72
  uspress: !ruby/object:Word
    word: uspress
    stem: uspress
    docFrequency: 2.0
    docPositions:
    - 72
  mediaenquiries: !ruby/object:Word
    word: mediaenquiries
    stem: mediaenquiri
    docFrequency: 2.0
    docPositions:
    - 72
  freedom: !ruby/object:Word
    word: freedom
    stem: freedom
    docFrequency: 2.0
    docPositions:
    - 72
  information: !ruby/object:Word
    word: information
    stem: inform
    docFrequency: 2.0
    docPositions:
    - 72
  function: !ruby/object:Word
    word: function
    stem: function
    docFrequency: 2.0
    docPositions:
    - 72
  w: !ruby/object:Word
    word: w
    stem: w
    docFrequency: 5.0
    docPositions:
    - 72
  l: !ruby/object:Word
    word: l
    stem: l
    docFrequency: 8.0
    docPositions:
    - 72
    - 75
  push: !ruby/object:Word
    word: push
    stem: push
    docFrequency: 2.0
    docPositions:
    - 72
  gtm: !ruby/object:Word
    word: gtm
    stem: gtm
    docFrequency: 5.0
    docPositions:
    - 72
    - 73
    - 76
    - 78
  start: !ruby/object:Word
    word: start
    stem: start
    docFrequency: 2.0
    docPositions:
    - 72
  date: !ruby/object:Word
    word: date
    stem: date
    docFrequency: 2.0
    docPositions:
    - 73
  gettime: !ruby/object:Word
    word: gettime
    stem: gettim
    docFrequency: 2.0
    docPositions:
    - 73
  event: !ruby/object:Word
    word: event
    stem: event
    docFrequency: 2.0
    docPositions:
    - 73
  f: !ruby/object:Word
    word: f
    stem: f
    docFrequency: 4.0
    docPositions:
    - 74
    - 76
    - 77
  getelementsbytagname: !ruby/object:Word
    word: getelementsbytagname
    stem: getelementsbytagnam
    docFrequency: 2.0
    docPositions:
    - 74
  createelement: !ruby/object:Word
    word: createelement
    stem: createel
    docFrequency: 2.0
    docPositions:
    - 75
  dl: !ruby/object:Word
    word: dl
    stem: dl
    docFrequency: 3.0
    docPositions:
    - 75
    - 76
  datalayer: !ruby/object:Word
    word: datalayer
    stem: datalay
    docFrequency: 3.0
    docPositions:
    - 75
    - 78
  async: !ruby/object:Word
    word: async
    stem: async
    docFrequency: 2.0
    docPositions:
    - 75
  'true': !ruby/object:Word
    word: 'true'
    stem: 'true'
    docFrequency: 2.0
    docPositions:
    - 75
  '': !ruby/object:Word
    word: ''
    stem: ''
    docFrequency: 10.0
    docPositions:
    - 76
    - 77
    - 78
    - 85
    - 86
    - 88
    - 90
    - 92
    - 94
  googletagmanager: !ruby/object:Word
    word: googletagmanager
    stem: googletagmanag
    docFrequency: 2.0
    docPositions:
    - 76
  id: !ruby/object:Word
    word: id
    stem: id
    docFrequency: 3.0
    docPositions:
    - 76
    - 80
  parentnode: !ruby/object:Word
    word: parentnode
    stem: parentnod
    docFrequency: 2.0
    docPositions:
    - 76
  insertbefore: !ruby/object:Word
    word: insertbefore
    stem: insertbefor
    docFrequency: 2.0
    docPositions:
    - 76
  window: !ruby/object:Word
    word: window
    stem: window
    docFrequency: 2.0
    docPositions:
    - 78
  document: !ruby/object:Word
    word: document
    stem: document
    docFrequency: 2.0
    docPositions:
    - 78
  script: !ruby/object:Word
    word: script
    stem: script
    docFrequency: 2.0
    docPositions:
    - 78
  _kiq: !ruby/object:Word
    word: _kiq
    stem: _kiq
    docFrequency: 3.0
    docPositions:
    - 78
  versatag: !ruby/object:Word
    word: versatag
    stem: versatag
    docFrequency: 13.0
    docPositions:
    - 79
    - 80
    - 81
    - 82
    - 83
    - 84
    - 85
    - 86
    - 87
    - 91
    - 93
    - 95
  sync: !ruby/object:Word
    word: sync
    stem: sync
    docFrequency: 2.0
    docPositions:
    - 81
  disptype: !ruby/object:Word
    word: disptype
    stem: disptyp
    docFrequency: 2.0
    docPositions:
    - 82
  ptcl: !ruby/object:Word
    word: ptcl
    stem: ptcl
    docFrequency: 2.0
    docPositions:
    - 83
  bsurl: !ruby/object:Word
    word: bsurl
    stem: bsurl
    docFrequency: 2.0
    docPositions:
    - 84
  bs: !ruby/object:Word
    word: bs
    stem: bs
    docFrequency: 2.0
    docPositions:
    - 84
  serving: !ruby/object:Word
    word: serving
    stem: serv
    docFrequency: 2.0
    docPositions:
    - 84
  sys: !ruby/object:Word
    word: sys
    stem: sy
    docFrequency: 2.0
    docPositions:
    - 84
  burstingpipe: !ruby/object:Word
    word: burstingpipe
    stem: burstingpip
    docFrequency: 2.0
    docPositions:
    - 84
  mobile: !ruby/object:Word
    word: mobile
    stem: mobil
    docFrequency: 2.0
    docPositions:
    - 85
  activity: !ruby/object:Word
    word: activity
    stem: activ
    docFrequency: 2.0
    docPositions:
    - 86
  parameters: !ruby/object:Word
    word: parameters
    stem: paramet
    docFrequency: 8.0
    docPositions:
    - 86
    - 88
    - 90
    - 92
    - 94
  conversion: !ruby/object:Word
    word: conversion
    stem: convers
    docFrequency: 2.0
    docPositions:
    - 86
  custom: !ruby/object:Word
    word: custom
    stem: custom
    docFrequency: 3.0
    docPositions:
    - 86
    - 88
  syntax: !ruby/object:Word
    word: syntax
    stem: syntax
    docFrequency: 5.0
    docPositions:
    - 86
    - 90
    - 92
    - 94
  paramvalue: !ruby/object:Word
    word: paramvalue
    stem: paramvalu
    docFrequency: 5.0
    docPositions:
    - 86
    - 90
    - 92
    - 94
  can: !ruby/object:Word
    word: can
    stem: can
    docFrequency: 5.0
    docPositions:
    - 86
    - 90
    - 92
    - 94
  empty: !ruby/object:Word
    word: empty
    stem: empti
    docFrequency: 5.0
    docPositions:
    - 86
    - 90
    - 92
    - 94
  activityparams: !ruby/object:Word
    word: activityparams
    stem: activityparam
    docFrequency: 2.0
    docPositions:
    - 87
  static: !ruby/object:Word
    word: static
    stem: static
    docFrequency: 2.0
    docPositions:
    - 90
  retargeting: !ruby/object:Word
    word: retargeting
    stem: retarget
    docFrequency: 3.0
    docPositions:
    - 90
    - 92
  tags: !ruby/object:Word
    word: tags
    stem: tag
    docFrequency: 4.0
    docPositions:
    - 90
    - 92
    - 94
  retargetparams: !ruby/object:Word
    word: retargetparams
    stem: retargetparam
    docFrequency: 2.0
    docPositions:
    - 91
  dynamic: !ruby/object:Word
    word: dynamic
    stem: dynam
    docFrequency: 2.0
    docPositions:
    - 92
  dynamicretargetparams: !ruby/object:Word
    word: dynamicretargetparams
    stem: dynamicretargetparam
    docFrequency: 2.0
    docPositions:
    - 93
  third: !ruby/object:Word
    word: third
    stem: third
    docFrequency: 2.0
    docPositions:
    - 94
  party: !ruby/object:Word
    word: party
    stem: parti
    docFrequency: 2.0
    docPositions:
    - 94
  conditionalparams: !ruby/object:Word
    word: conditionalparams
    stem: conditionalparam
    docFrequency: 2.0
    docPositions:
    - 95
  astonishing: !ruby/object:Word
    word: astonishing
    stem: astonish
    docFrequency: 2.0
    docPositions:
    - 101
lineCount: 102
wordCount: 1050
rank: 0.2540983606557377
title: "Babbage -\r\n           -  Science Museum\r\n      "
links:
- http://www.facebook.com/sciencemuseumlondon
- http://www.twitter.com/sciencemuseum
- https://plus.google.com/111775837462022537710?prsrc=3
- http://www.youtube.com/user/sciencemuseum
- http://www.flickr.com/photos/sciencemuseum/
- https://pinterest.com/sciencemuseum/
- http://www.sciencemuseumgroup.ac.uk/smgpages/enquiries.asp
rawText: "\r\n    \r\n        Site display :NormalText only       Accessibility :BSLAudio\r\n
  \               Skip to content\r\n              Privacy and cookies|Sign up to
  our newsletterGoAstonishing Science. Spectacular museum.Home\r\n            Visit
  The Museum\r\n          \r\n            Online Stuff\r\n          EducatorsShop
  OnlineAbout Us\r\n        \r\n            \r\n            \r\n\r\n\r\n    \r\n\r\n
  \           \r\n            \r\n\r\n\r\n\r\n    \r\n    \r\n        \r\n    \r\n
  \       \r\n            \r\n\r\n\r\n\r\n\r\n\r\n\t\r\n                Babbage<Prev12345Next>\r\n\t\tThe
  designs for the Analytical Engine include almost all the essential logical features
  of a modern electronic digital computer. The engine was programmable using punched
  cards. It had a ‘store’ where numbers and intermediate results could be held and
  a separate ‘mill’ where the arithmetic processing was performed. The separation
  of the ‘store’ (memory) and ‘mill’ (central processor) is a fundamental feature
  of the internal organisation of modern computers. \r\nThe Analytical Engine could
  have `looped’ (repeat the same sequence of operations a predetermined number of
  times) and was capable of conditional branching (IF… THEN… statements) i.e. automatically
  take alternative courses of action depending on the result of a cacluation. \r\nIn
  1842, an Italian mathematician, Louis Menebrea, published a memoir in French on
  the subject of the Analytical Engine. Babbage was delighted with the interest in
  his project and appointed Ada Lovelace to act as a translator for the article. Ada
  added a series of in depth notes (which were longer than the original memoir), including
  detail of a method for calculating Bernoulli numbers using the Engine. It is her
  level of understanding of Babbage's mechanical machine that gives Ada Lovelace the
  credit she has today of being the first computer programmer.  \r\nIf it had been
  completed the Analytical Engine would have been vast. It would have needed to be
  operated by a steam engine of some kind. Babbage made little attempt to raise funds
  to build the Analytical Engine. Instead he continued to work on simpler and cheaper
  methods of manufacturing parts and built a small trial model which was under construction
  at the time of his death. \r\nThe movement to automate mathematical calculation
  in the nineteenth century failed and the impetus to continue this work was largely
  lost with Babbage’s death. From the vantage point of the modern computer age we
  are better placed to appreciate the full extent to which Babbage was indeed the
  first pioneer of computing. \r\nReferences\r\nBabbage, C., The Works of Charles
  Babbage. 11 volumes Campbell-Kelly, Martin, ed., London:: William Pickering, 1989\r\nCollier,
  B., The little engines that could’ve: The calculating machines of Charles Babbage,
  Doctoral dissertation, Harvard, 1970, New York:: Garland, 1991\r\nDubbey, J. M.,
  The Mathematical work of Charles Babbage, : Cambridge University Press, 1978\r\nHyman,
  A., Charles Babbage: pioneer of the computer, : Oxford University Press, 1982\r\nLangley
  Moore, D., Ada, Countess of Lovelace: Byron’s legitimate daughter, London:: John
  Murray, 1977\r\nLindgren, M., Glory and Failure: The Difference Engines of Johann
  Muller, Charles Babbage, Georg and Edvard Scheutz, London:: MIT Press, 1990\r\nMoseley,
  M, Irascible genius: A Life of Charles Babbage, Inventor, London: Hutchinson, 1964\r\nStein,
  D, Ada: A Life and a Legacy, London:: MIT Press, 1985\r\nSwade, D., Charles Babbage
  and his Calculating Engines, London:: Science Museum, 1991\r\nSwade, D., The Cogwheel
  Brain: Charles Babbage and the Quest to build the first Computer, London:: Little,
  Brown, 2001\r\nToole, B., Ada, The Enchantress of Numbers, : Strawberry Press, 1992\r\nWoolley,
  B., The Bride of Science: Romance, Reason and Byron's Daughter, : Macmillan, 1999Page
  5 of 5Previous: Page 4 - Babbage<Prev12345Next>\r\n            \r\n        \r\n
  \       \r\n        \r\n            \r\n        \r\n        \r\n    \r\n            \r\n
  \   \r\n         \r\n    \r\n\r\n\r\n            \r\n            \r\n                 \r\n
  \           \r\n        \r\n        \r\n        FacebookTwitterGoogle+YouTubeFlickrPinterestContact
  usSupport usPress and MediaEnquiries/Freedom of Information(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':\r\n
  \     new Date().getTime(),event:'gtm.js'});var\r\n      f=d.getElementsByTagName(s)[0],\r\n
  \     j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=\r\n
  \     '//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j\r\n
  \     ,f);\r\n      })(window,document,'script','dataLayer','GTM-KJVX2T');var _kiq
  = _kiq || [];\n      var versaTag = {};\n      versaTag.id = \"782\"\n      versaTag.sync
  = 0\n      versaTag.dispType = \"js\"\n      versaTag.ptcl = \"HTTP\"\n      versaTag.bsUrl
  = \"bs.serving-sys.com/BurstingPipe\"\n      //versaTag.mobile = 1\n      //VersaTag
  activity parameters include all conversion parameters including custom parameters.
  Syntax: \"ParamName1\":\"ParamValue1\", \"ParamName2\":\"ParamValue2\". ParamValue
  can be empty.\n      versaTag.activityParams = {\n      //Custom parameters:\n      };\n
  \     //Static retargeting tags parameters. Syntax: \"TagID1\":\"ParamValue1\",
  \"TagID2\":\"ParamValue2\". ParamValue can be empty.\n      versaTag.retargetParams
  = {};\n      //Dynamic retargeting tags parameters. Syntax: \"TagID1\":\"ParamValue1\",
  \"TagID2\":\"ParamValue2\". ParamValue can be empty.\n      versaTag.dynamicRetargetParams
  = {};\n      //Third party tags conditional parameters. Syntax: \"TagID1\":\"ParamValue1\",
  \"TagID2\":\"ParamValue2\". ParamValue can be empty.\n      versaTag.conditionalParams
  = {};\n    \r\n        \r\n    \r\n    \r\n    \r\nAstonishing Science. Spectacular
  museum.The designs for the Analytical Engine include almost all the essential logical
  features of a modern electronic digital computer. The engine was programmable using
  punched cards. It had a ‘store’ where numbers and intermediate results could be
  held and a separate ‘mill’ where the arithmetic processing was performed. The separation
  of the ‘store’ (memory) and ‘mill’ (central processor) is a fundamental feature
  of the internal organisation of modern computers. The Analytical Engine could have
  `looped’ (repeat the same sequence of operations a predetermined number of times)
  and was capable of conditional branching (IF… THEN… statements) i.e. automatically
  take alternative courses of action depending on the result of a cacluation. In 1842,
  an Italian mathematician, Louis Menebrea, published a memoir in French on the subject
  of the Analytical Engine. Babbage was delighted with the interest in his project
  and appointed Ada Lovelace to act as a translator for the article. Ada added a series
  of in depth notes (which were longer than the original memoir), including detail
  of a method for calculating Bernoulli numbers using the Engine. It is her level
  of understanding of Babbage's mechanical machine that gives Ada Lovelace the credit
  she has today of being the first computer programmer.  If it had been completed
  the Analytical Engine would have been vast. It would have needed to be operated
  by a steam engine of some kind. Babbage made little attempt to raise funds to build
  the Analytical Engine. Instead he continued to work on simpler and cheaper methods
  of manufacturing parts and built a small trial model which was under construction
  at the time of his death. The movement to automate mathematical calculation in the
  nineteenth century failed and the impetus to continue this work was largely lost
  with Babbage’s death. From the vantage point of the modern computer age we are better
  placed to appreciate the full extent to which Babbage was indeed the first pioneer
  of computing. Page 5 of 5Previous: Page 4 - Babbage"
