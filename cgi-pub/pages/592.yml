--- !ruby/object:WebPage
page: !ruby/object:Nokogiri::HTML::Document
  decorators: 
  node_cache:
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  errors:
  - !ruby/exception:Nokogiri::XML::SyntaxError
    message: |
      Unexpected end tag : style
    domain: 5
    code: 76
    level: 2
    file: "/tmp/open-uri20151214-21537-1ympsu"
    line: 544
    str1: style
    str2: 
    str3: 
    int1: 0
    column: 42
  - !ruby/exception:Nokogiri::XML::SyntaxError
    message: |
      Unexpected end tag : h1
    domain: 5
    code: 76
    level: 2
    file: "/tmp/open-uri20151214-21537-1ympsu"
    line: 549
    str1: h1
    str2: 
    str3: 
    int1: 0
    column: 72
  - !ruby/exception:Nokogiri::XML::SyntaxError
    message: |
      Unexpected end tag : div
    domain: 5
    code: 76
    level: 2
    file: "/tmp/open-uri20151214-21537-1ympsu"
    line: 552
    str1: div
    str2: 
    str3: 
    int1: 0
    column: 36
  - !ruby/exception:Nokogiri::XML::SyntaxError
    message: |
      Unexpected end tag : h2
    domain: 5
    code: 76
    level: 2
    file: "/tmp/open-uri20151214-21537-1ympsu"
    line: 699
    str1: h2
    str2: 
    str3: 
    int1: 0
    column: 161
  - !ruby/exception:Nokogiri::XML::SyntaxError
    message: |
      Unexpected end tag : span
    domain: 5
    code: 76
    level: 2
    file: "/tmp/open-uri20151214-21537-1ympsu"
    line: 699
    str1: span
    str2: 
    str3: 
    int1: 0
    column: 628
  - !ruby/exception:Nokogiri::XML::SyntaxError
    message: |
      Unexpected end tag : a
    domain: 5
    code: 76
    level: 2
    file: "/tmp/open-uri20151214-21537-1ympsu"
    line: 699
    str1: a
    str2: 
    str3: 
    int1: 0
    column: 857
  - !ruby/exception:Nokogiri::XML::SyntaxError
    message: |
      Unexpected end tag : p
    domain: 5
    code: 76
    level: 2
    file: "/tmp/open-uri20151214-21537-1ympsu"
    line: 699
    str1: p
    str2: 
    str3: 
    int1: 0
    column: 875
  - !ruby/exception:Nokogiri::XML::SyntaxError
    message: |
      Unexpected end tag : button
    domain: 5
    code: 76
    level: 2
    file: "/tmp/open-uri20151214-21537-1ympsu"
    line: 699
    str1: button
    str2: 
    str3: 
    int1: 0
    column: 982
  - !ruby/exception:Nokogiri::XML::SyntaxError
    message: |
      Unexpected end tag : li
    domain: 5
    code: 76
    level: 2
    file: "/tmp/open-uri20151214-21537-1ympsu"
    line: 699
    str1: li
    str2: 
    str3: 
    int1: 0
    column: 988
  - !ruby/exception:Nokogiri::XML::SyntaxError
    message: |
      Unexpected end tag : a
    domain: 5
    code: 76
    level: 2
    file: "/tmp/open-uri20151214-21537-1ympsu"
    line: 699
    str1: a
    str2: 
    str3: 
    int1: 0
    column: 1062
  - !ruby/exception:Nokogiri::XML::SyntaxError
    message: |
      Unexpected end tag : li
    domain: 5
    code: 76
    level: 2
    file: "/tmp/open-uri20151214-21537-1ympsu"
    line: 699
    str1: li
    str2: 
    str3: 
    int1: 0
    column: 1067
  - !ruby/exception:Nokogiri::XML::SyntaxError
    message: |
      Unexpected end tag : ul
    domain: 5
    code: 76
    level: 2
    file: "/tmp/open-uri20151214-21537-1ympsu"
    line: 699
    str1: ul
    str2: 
    str3: 
    int1: 0
    column: 1072
  - !ruby/exception:Nokogiri::XML::SyntaxError
    message: |
      Unexpected end tag : script
    domain: 5
    code: 76
    level: 2
    file: "/tmp/open-uri20151214-21537-1ympsu"
    line: 699
    str1: script
    str2: 
    str3: 
    int1: 0
    column: 1092
  - !ruby/exception:Nokogiri::XML::SyntaxError
    message: |
      htmlParseEntityRef: no name
    domain: 5
    code: 68
    level: 2
    file: "/tmp/open-uri20151214-21537-1ympsu"
    line: 983
    str1: 
    str2: 
    str3: 
    int1: 0
    column: 57
  - !ruby/exception:Nokogiri::XML::SyntaxError
    message: |
      Unexpected end tag : p
    domain: 5
    code: 76
    level: 2
    file: "/tmp/open-uri20151214-21537-1ympsu"
    line: 1297
    str1: p
    str2: 
    str3: 
    int1: 0
    column: 116
  - !ruby/exception:Nokogiri::XML::SyntaxError
    message: |
      Unexpected end tag : p
    domain: 5
    code: 76
    level: 2
    file: "/tmp/open-uri20151214-21537-1ympsu"
    line: 1366
    str1: p
    str2: 
    str3: 
    int1: 0
    column: 116
  - !ruby/exception:Nokogiri::XML::SyntaxError
    message: |
      Unexpected end tag : p
    domain: 5
    code: 76
    level: 2
    file: "/tmp/open-uri20151214-21537-1ympsu"
    line: 1503
    str1: p
    str2: 
    str3: 
    int1: 0
    column: 116
  - !ruby/exception:Nokogiri::XML::SyntaxError
    message: |
      Unexpected end tag : a
    domain: 5
    code: 76
    level: 2
    file: "/tmp/open-uri20151214-21537-1ympsu"
    line: 2412
    str1: a
    str2: 
    str3: 
    int1: 0
    column: 148
  - !ruby/exception:Nokogiri::XML::SyntaxError
    message: |
      Unexpected end tag : a
    domain: 5
    code: 76
    level: 2
    file: "/tmp/open-uri20151214-21537-1ympsu"
    line: 2413
    str1: a
    str2: 
    str3: 
    int1: 0
    column: 149
  - !ruby/exception:Nokogiri::XML::SyntaxError
    message: |
      Unexpected end tag : a
    domain: 5
    code: 76
    level: 2
    file: "/tmp/open-uri20151214-21537-1ympsu"
    line: 2414
    str1: a
    str2: 
    str3: 
    int1: 0
    column: 150
  - !ruby/exception:Nokogiri::XML::SyntaxError
    message: |
      Unexpected end tag : a
    domain: 5
    code: 76
    level: 2
    file: "/tmp/open-uri20151214-21537-1ympsu"
    line: 2415
    str1: a
    str2: 
    str3: 
    int1: 0
    column: 161
  - !ruby/exception:Nokogiri::XML::SyntaxError
    message: |
      Unexpected end tag : a
    domain: 5
    code: 76
    level: 2
    file: "/tmp/open-uri20151214-21537-1ympsu"
    line: 2416
    str1: a
    str2: 
    str3: 
    int1: 0
    column: 159
  - !ruby/exception:Nokogiri::XML::SyntaxError
    message: |
      Unexpected end tag : a
    domain: 5
    code: 76
    level: 2
    file: "/tmp/open-uri20151214-21537-1ympsu"
    line: 2417
    str1: a
    str2: 
    str3: 
    int1: 0
    column: 139
  - !ruby/exception:Nokogiri::XML::SyntaxError
    message: |
      Unexpected end tag : a
    domain: 5
    code: 76
    level: 2
    file: "/tmp/open-uri20151214-21537-1ympsu"
    line: 2418
    str1: a
    str2: 
    str3: 
    int1: 0
    column: 123
  - !ruby/exception:Nokogiri::XML::SyntaxError
    message: |
      Unexpected end tag : a
    domain: 5
    code: 76
    level: 2
    file: "/tmp/open-uri20151214-21537-1ympsu"
    line: 2419
    str1: a
    str2: 
    str3: 
    int1: 0
    column: 118
  - !ruby/exception:Nokogiri::XML::SyntaxError
    message: |
      Unexpected end tag : a
    domain: 5
    code: 76
    level: 2
    file: "/tmp/open-uri20151214-21537-1ympsu"
    line: 2420
    str1: a
    str2: 
    str3: 
    int1: 0
    column: 132
  - !ruby/exception:Nokogiri::XML::SyntaxError
    message: |
      Unexpected end tag : li
    domain: 5
    code: 76
    level: 2
    file: "/tmp/open-uri20151214-21537-1ympsu"
    line: 2422
    str1: li
    str2: 
    str3: 
    int1: 0
    column: 160
  - !ruby/exception:Nokogiri::XML::SyntaxError
    message: |
      Unexpected end tag : a
    domain: 5
    code: 76
    level: 2
    file: "/tmp/open-uri20151214-21537-1ympsu"
    line: 2423
    str1: a
    str2: 
    str3: 
    int1: 0
    column: 136
  - !ruby/exception:Nokogiri::XML::SyntaxError
    message: |
      Unexpected end tag : span
    domain: 5
    code: 76
    level: 2
    file: "/tmp/open-uri20151214-21537-1ympsu"
    line: 2423
    str1: span
    str2: 
    str3: 
    int1: 0
    column: 143
  - !ruby/exception:Nokogiri::XML::SyntaxError
    message: |
      Unexpected end tag : p
    domain: 5
    code: 76
    level: 2
    file: "/tmp/open-uri20151214-21537-1ympsu"
    line: 2423
    str1: p
    str2: 
    str3: 
    int1: 0
    column: 237
  - !ruby/exception:Nokogiri::XML::SyntaxError
    message: |
      Opening and ending tag mismatch: div and td
    domain: 5
    code: 76
    level: 2
    file: "/tmp/open-uri20151214-21537-1ympsu"
    line: 2423
    str1: div
    str2: td
    str3: 
    int1: 0
    column: 268
  - !ruby/exception:Nokogiri::XML::SyntaxError
    message: |
      Unexpected end tag : script
    domain: 5
    code: 76
    level: 2
    file: "/tmp/open-uri20151214-21537-1ympsu"
    line: 2427
    str1: script
    str2: 
    str3: 
    int1: 0
    column: 10
  - !ruby/exception:Nokogiri::XML::SyntaxError
    message: |
      Opening and ending tag mismatch: div and td
    domain: 5
    code: 76
    level: 2
    file: "/tmp/open-uri20151214-21537-1ympsu"
    line: 2449
    str1: div
    str2: td
    str3: 
    int1: 0
    column: 7
  - !ruby/exception:Nokogiri::XML::SyntaxError
    message: |
      htmlParseEntityRef: expecting ';'
    domain: 5
    code: 23
    level: 2
    file: "/tmp/open-uri20151214-21537-1ympsu"
    line: 2498
    str1: 
    str2: 
    str3: 
    int1: 0
    column: 143
  - !ruby/exception:Nokogiri::XML::SyntaxError
    message: |
      error parsing attribute name
    domain: 5
    code: 68
    level: 2
    file: "/tmp/open-uri20151214-21537-1ympsu"
    line: 2521
    str1: 
    str2: 
    str3: 
    int1: 0
    column: 3595
  - !ruby/exception:Nokogiri::XML::SyntaxError
    message: |
      Unexpected end tag : div
    domain: 5
    code: 76
    level: 2
    file: "/tmp/open-uri20151214-21537-1ympsu"
    line: 2723
    str1: div
    str2: 
    str3: 
    int1: 0
    column: 7
address: http://news.bbc.co.uk/1/hi/technology/8492762.stm
inboundLinks: []
lines:
- |2+

- |2+

- |2+

- "\r\n"
- "\r\n"
- "\r\n"
- "\r\n"
- "\tif(typeof BBC.adverts != 'undefined' && typeof BBC.adverts.setPageVersion !=
  'undefined'){\r\n"
- "\t\tBBC.adverts.setPageVersion('4');\r\n"
- "\t}\r\n"
- "\r\n"
- "// <![CDATA[\r\n"
- "require([\"istats-1\"], function (istats) {\r\n"
- "function countername(u) {\r\n"
- "   var countername = [];\r\n"
- "    u = u.replace(/\\.[^.\\/]+$/, '');\r\n"
- "    u = u.replace(/[#][^#]+$/, '' );\r\n"
- "    u = u.replace(/[\\?][^\\?]+$/, '' );\r\n"
- "    u = u.replace(/\\/newsid_\\d+/g, '/');\r\n"
- "    u = u.replace(/\\/[12]\\//, '/');\r\n"
- "    u = u.replace(/\\/reviews\\//, '/');\r\n"
- "    u = u.replace(/\\/sport[12]\\//, '/sport/');\r\n"
- "    u = u.replace(/\\/bbc_sport\\//, '/sport/');\r\n"
- "    u = u.replace(/\\/(hi|mobile)\\//, '/');\r\n"
- "    u = u.replace(/\\/(uk|i)fs\\//, '/');\r\n"
- "    var path    = u.split('/').slice(3);\r\n"
- "    var asset_id_re  = /(\\d+)\\/?$/;\r\n"
- "    var asset_id = '';\r\n"
- "    if (matches = asset_id_re.exec( path[path.length-1] )) {\r\n"
- "        asset_id = matches[1];\r\n"
- "    }\r\n"
- "    var prod_name  = 'news';\r\n"
- "    var prod = new Array();\r\n"
- "    prod['sport']    = /sport/;\r\n"
- "    prod['weather']  = /weather/;\r\n"
- "    prod['cbbc']     = /cbbc/;\r\n"
- "    for (var name in prod) {\r\n"
- "        if (u.match(prod[name])) {\r\n"
- "            prod_name = name;\r\n"
- "            break;\r\n"
- "        }\r\n"
- "    }\r\n"
- "    countername.push(prod_name);\r\n"
- "    for (var i=0; i<path.length; i++) {\r\n"
- "        var part = path[i];\r\n"
- "        if (part && (part != prod_name) && (part != asset_id) && (part != 'default'))
  {\r\n"
- "            countername.push(part);\r\n"
- "        }\r\n"
- "    }\r\n"
- "    if (asset_id) {countername.push(asset_id);}\r\n"
- "    countername.push('page');\r\n"
- "    return countername.join('.');\r\n"
- "}\r\n"
- "istats_countername = countername(location.href);\r\n"
- "});\r\n"
- "\r\n"
- "\t\r\n"
- "\t\r\n"
- "\t\t\n"
- |2+

- "   \n"
- |2+

- |2+

- |2+

- "    \n"
- |2+

- |2+

- |2+

- |2+

- |2+

- |2+

- " /*<![CDATA[*/ if (bbccookies.isAllowed('s1')) { require(['istats-1'], function
  (istats) {  istats.invoke(); }); } /*]]>*//*<![CDATA[*/ if (bbccookies.isAllowed('s1'))
  { (function () { require(['istats-1'], function (istats) { istatsTrackingUrl = istats.getDefaultURL();
  if (istats.isEnabled() && bbcFlagpoles_istats === 'ON') { sitestat(istatsTrackingUrl);
  } else { window.ns_pixelUrl = istatsTrackingUrl; /* used by Flash library to track
  */ } function sitestat(n) { var j = document, f = j.location, b = \"\"; if (j.cookie.indexOf(\"st_ux=\")
  != -1) { var k = j.cookie.split(\";\"); var e = \"st_ux\", h = document.domain,
  a = \"/\"; if (typeof ns_ != \"undefined\" && typeof ns_.ux != \"undefined\") {
  e = ns_.ux.cName || e; h = ns_.ux.cDomain || h; a = ns_.ux.cPath || a } for (var
  g = 0, f = k.length; g < f; g++) { var m = k[g].indexOf(\"st_ux=\"); if (m != -1)
  { b = \"&\" + decodeURI(k[g].substring(m + 6)) } } bbccookies.set(e + \"=; expires=\"
  + new Date(new Date().getTime() - 60).toGMTString() + \"; path=\" + a + \"; domain=\"
  + h); } window.ns_pixelUrl = n;  } }); })(); } else { window.istats = {enabled:
  false}; } /*]]>*/   \n"
- "     \r\n"
- "\r\n"
- "       <![CDATA[ <div id=\"bbccookies-prompt\" class=\"bbccookies-w\"> <h2> Cookies
  on the BBC website  <p> The BBC has updated its cookie policy. We use cookies to
  ensure that we give you the best experience on our website. This includes cookies
  from third party social media websites if you visit a page which contains embedded
  content from social media. Such third party cookies may track your use of the BBC
  website.<span class=\"bbccookies-international-message\"> We and our partners also
  use cookies to ensure we show you advertising that is relevant to you. If you continue
  without changing your settings, we'll assume that you are happy to receive all cookies
  on the BBC website. However, you can <a href=\"/privacy/cookies/managing/cookie-settings.html\">change
  your cookie settings at any time.  <ul> <li id=\"bbccookies-continue\"> <button
  type=\"button\" id=\"bbccookies-continue-button\">Continue  <li id=\"bbccookies-more\"><a
  href=\"/privacy/cookies/bbc\">Find out more  ]]> /*<![CDATA[*/ (function(){if(bbccookies._showPrompt()){var
  i=document,b=i.getElementById(\"blq-pre-mast\"),f=i.getElementById(\"blq-global\"),h=i.getElementById(\"blq-container\"),c=i.getElementById(\"blq-bbccookies-tmpl\"),a,g,e;if(b&&i.createElement){a=i.createElement(\"div\");a.id=\"bbccookies\";e=c.innerHTML;e=e.replace(\"<\"+\"![CDATA[\",\"\").replace(\"]]\"+\">\",\"\");a.innerHTML=e;if(f){f.insertBefore(a,b)}else{h.insertBefore(a,b)}g=i.getElementById(\"bbccookies-continue-button\");g.onclick=function(){a.parentNode.removeChild(a);return
  false};bbccookies._setPolicy(bbccookies.readPolicy())}}})(); /*]]>*/       British
  Broadcasting CorporationHome    Accessibility links Skip to content  Skip to local
  navigation  Skip to bbc.co.uk navigation Skip to bbc.co.uk search  Accessibility
  Help          \r\n"
- "\t\t\r\n"
- "\t\t\r\n"
- "\t\t\r\n"
- "\t\t\r\n"
- "\t\t\r\n"
- "\t\t\r\n"
- "\t\t\r\n"
- "\r\n"
- "\t\r\n"
- |2+

- "\r\n"
- "\r\n"
- "\tBBC News Updated every minute of every day\r\n"
- "\r\n"
- "\r\n"
- "\r\n"
- "\t\r\n"
- "\t\t\n"
- |2+

- "    \n"
- "        \n"
- "        \n"
- "\t\n"
- "            \n"
- "            \n"
- "\t\t\n"
- "            \n"
- "            \n"
- "\t\n"
- |2+

- "\t\t\t\n"
- |2+

- |2+

- "\t\n"
- "                \n"
- |2+

- "                \n"
- "\t\t\t\n"
- "\t\t\t\t\n"
- "\t\t\t\t\n"
- "\t\t\t\t\t\n"
- "\t\t\t\t\tOne-Minute World News\n"
- "\t\t\t\t\n"
- "\t\t\t\n"
- "                \n"
- |2+

- "                \n"
- |2+

- |2+

- |2+

- |2+

- |2+

- |2+

- "            \n"
- "                \n"
- "                    \n"
- "                \n"
- "            \n"
- "\t\n"
- "\t\r\n"
- "\t\r\n"
- "\t\r\n"
- "\t\r\n"
- "\t\r\n"
- "\t\r\n"
- "\t\r\n"
- "\t\r\n"
- "\t\r\n"
- "\t\t\t\r\n"
- "\t\t\t\r\n"
- "\t\t\t\r\n"
- "\t\t\t\r\n"
- "\t\t\t\r\n"
- "\t\t\t\t\r\n"
- "\r\n"
- "\r\n"
- "\r\n"
- "\r\n"
- "   \r\n"
- "\r\n"
- "\r\n"
- "\r\n"
- "\t\r\n"
- |2+

- |2+

- |2+

- |2+

- |2+

- |2+

- "\t\t\t\n"
- |2+

- |2+

- "\t\n"
- "\t\t\n"
- "\t\n"
- "\t\t\n"
- "\t\t\n"
- "\t\t\t\n"
- "\t\t\t\tNews Front Page\n"
- "\t\t\t\n"
- "\t\t\t\n"
- "\t\t\t\t\n"
- "\t\t\n"
- "\t\n"
- "\t\n"
- "\t\n"
- "\t\n"
- "\t\n"
- |2+

- |2+

- |2+

- |2+

- "\t\n"
- "\t\t\n"
- "\t\t\n"
- "\t\t\t\n"
- "\t\t\t\tAfrica\n"
- "\t\t\t\n"
- "\t\t\t\n"
- "\t\t\n"
- "\t\n"
- "\t\n"
- "\t\n"
- "\t\n"
- "\t\n"
- |2+

- |2+

- |2+

- |2+

- "\t\n"
- "\t\t\n"
- "\t\t\n"
- "\t\t\t\n"
- "\t\t\t\tAmericas\n"
- "\t\t\t\n"
- "\t\t\t\n"
- "\t\t\n"
- "\t\n"
- "\t\n"
- "\t\n"
- "\t\n"
- "\t\n"
- |2+

- |2+

- |2+

- |2+

- "\t\n"
- "\t\t\n"
- "\t\t\n"
- "\t\t\t\n"
- "\t\t\t\tAsia-Pacific\n"
- "\t\t\t\n"
- "\t\t\t\n"
- "\t\t\n"
- "\t\n"
- "\t\n"
- "\t\n"
- "\t\n"
- "\t\n"
- |2+

- |2+

- |2+

- |2+

- "\t\n"
- "\t\t\n"
- "\t\t\n"
- "\t\t\t\n"
- "\t\t\t\tEurope\n"
- "\t\t\t\n"
- "\t\t\t\n"
- "\t\t\n"
- "\t\n"
- "\t\n"
- "\t\n"
- "\t\n"
- "\t\n"
- |2+

- |2+

- |2+

- |2+

- "\t\n"
- "\t\t\n"
- "\t\t\n"
- "\t\t\t\n"
- "\t\t\t\tMiddle East\n"
- "\t\t\t\n"
- "\t\t\t\n"
- "\t\t\n"
- "\t\n"
- "\t\n"
- "\t\n"
- "\t\n"
- "\t\n"
- |2+

- |2+

- |2+

- |2+

- "\t\n"
- "\t\t\n"
- "\t\t\n"
- "\t\t\t\n"
- "\t\t\t\tSouth Asia\n"
- "\t\t\t\n"
- "\t\t\t\n"
- "\t\t\n"
- "\t\n"
- "\t\n"
- "\t\n"
- "\t\n"
- "\t\n"
- |2+

- |2+

- |2+

- |2+

- "\t\n"
- "\t\t\n"
- "\t\t\n"
- "\t\t\t\n"
- "\t\t\t\tUK\n"
- "\t\t\t\n"
- "\t\t\t\n"
- "\t\t\n"
- "\t\n"
- "\t\n"
- "\t\n"
- "\t\n"
- "\t\n"
- |2+

- |2+

- |2+

- |2+

- "\t\n"
- "\t\t\n"
- "\t\t\n"
- "\t\t\t\n"
- "\t\t\t\tBusiness\n"
- "\t\t\t\n"
- "\t\t\t\n"
- "\t\t\n"
- "\t\n"
- "\t\n"
- "\t\n"
- "\t\n"
- "\t\n"
- |2+

- |2+

- |2+

- |2+

- "\t\n"
- "\t\t\n"
- "\t\t\n"
- "\t\t\t\n"
- "\t\t\t\tHealth\n"
- "\t\t\t\n"
- "\t\t\t\n"
- "\t\t\n"
- "\t\n"
- "\t\n"
- "\t\n"
- "\t\n"
- "\t\n"
- |2+

- |2+

- |2+

- |2+

- "\t\n"
- "\t\t\n"
- "\t\t\n"
- "\t\t\t\n"
- "\t\t\t\tScience & Environment\n"
- "\t\t\t\n"
- "\t\t\t\n"
- "\t\t\n"
- "\t\n"
- "\t\n"
- "\t\n"
- "\t\n"
- "\t\n"
- |2+

- |2+

- |2+

- |2+

- "\t\n"
- "\t\t\n"
- "\t\t\t\n"
- "\t\t\t\tTechnology\n"
- "\t\t\t\n"
- "\t\t\t\n"
- "\t\t\t\n"
- |2+

- "\t\t\n"
- "\t\t\n"
- "\t\n"
- "\t\n"
- "\t\n"
- "\t\n"
- "\t\n"
- |2+

- |2+

- |2+

- |2+

- "\t\n"
- "\t\t\n"
- "\t\t\n"
- "\t\t\t\n"
- "\t\t\t\tEntertainment\n"
- "\t\t\t\n"
- "\t\t\t\n"
- "\t\t\n"
- "\t\n"
- "\t\n"
- "\t\n"
- "\t\n"
- "\t\n"
- |2+

- |2+

- |2+

- |2+

- "\t\n"
- "\t\t\n"
- "\t\t\n"
- "\t\t\t\n"
- "\t\t\t\tAlso in the news\n"
- "\t\t\t\n"
- "\t\t\t\n"
- "\t\t\n"
- "\t\n"
- "\t\n"
- "\t-----------------\n"
- "\t\n"
- "\t\n"
- |2+

- |2+

- |2+

- |2+

- "\t\n"
- "\t\t\n"
- "\t\t\n"
- "\t\t\t\n"
- "\t\t\t\tVideo and Audio\n"
- "\t\t\t\n"
- "\t\t\t\n"
- "\t\t\n"
- "\t\n"
- "\t\n"
- "\t-----------------\n"
- "\t\n"
- "\t\r\n"
- "\r\n"
- "\r\n"
- "BBC.adverts.write(\"button\");\r\n"
- |
  BBC.adverts.show("button");
- "\t\t\t\tProgrammes\n"
- "\t\t\t\n"
- "\t\t\t\n"
- "\t\t\n"
- "\t\n"
- "\t\n"
- "\t\n"
- "\t\n"
- "\t\n"
- |2+

- |2+

- |2+

- |2+

- "\t\n"
- "\t\t\n"
- "\t\t\n"
- "\t\t\t\n"
- "\t\t\t\tHave Your Say\n"
- "\t\t\t\n"
- "\t\t\t\n"
- "\t\t\n"
- "\t\n"
- "\t\n"
- "\t\n"
- "\t\n"
- "\t\n"
- |2+

- |2+

- |2+

- |2+

- "\t\n"
- "\t\t\n"
- "\t\t\n"
- "\t\t\t\n"
- "\t\t\t\tIn Pictures\n"
- "\t\t\t\n"
- "\t\t\t\n"
- "\t\t\n"
- "\t\n"
- "\t\n"
- "\t\n"
- "\t\n"
- "\t\n"
- |2+

- |2+

- |2+

- |2+

- "\t\n"
- "\t\t\n"
- "\t\t\n"
- "\t\t\t\n"
- "\t\t\t\tCountry Profiles\n"
- "\t\t\t\n"
- "\t\t\t\n"
- "\t\t\n"
- "\t\n"
- "\t\n"
- "\t\n"
- "\t\n"
- "\t\n"
- |2+

- |2+

- |2+

- |2+

- "\t\n"
- "\t\t\n"
- "\t\t\n"
- "\t\t\t\n"
- "\t\t\t\tSpecial Reports\n"
- "\t\t\t\n"
- "\t\t\t\n"
- "\t\t\n"
- "\t\n"
- "\t\n"
- "\t\n"
- "\t\n"
- "\t\n"
- |2+

- |2+

- |2+

- |2+

- |2+

- "\t\n"
- |2+

- |2+

- |2+

- |2+

- |2+

- "\t\t\n"
- |2+

- |2+

- |2+

- |2+

- |2+

- |
  Related BBC sites
- |
  Sport
- "\tWeather\n"
- "\tOn This Day\n"
- "\tEditors' Blog\n"
- "\tBBC World Service\n"
- "\t\t\n"
- |2+

- |2+

- "\t\n"
- "\t\t\n"
- "\t\n"
- "        \n"
- "        \n"
- "        \n"
- |2+

- "      \n"
- "    \n"
- |2+

- "    \n"
- |2+

- "    \n"
- |2+

- "    \n"
- |2+

- "    \n"
- |2+

- "    \n"
- |2+

- "    \n"
- |2+

- "    \n"
- |2+

- "    \n"
- |2+

- "    \n"
- |2+

- "    \n"
- |2+

- "    \n"
- |2+

- "    \n"
- |2+

- "    \n"
- |2+

- "    \n"
- |2+

- "    \n"
- |2+

- "    \n"
- |2+

- "    \n"
- |2+

- "    \n"
- |2+

- "    \n"
- |2+

- " \n"
- "            \n"
- "\t\t\t\n"
- "                        \n"
- "                        \n"
- |
  Page last updated at 10:48 GMT, Tuesday, 2 February 2010
- |2+

- |2+

- |2+

- |2+

- "                        \n"
- "    \n"
- "        \n"
- "                \n"
- |2
                  E-mail this to a friend
- "            \n"
- "            \n"
- "\t       \t\n"
- "\t \tPrintable version\n"
- "            \n"
- "        \n"
- "\t\t    \n"
- "    \n"
- "    \n"
- |2+

- |2+

- |2+

- "                        \n"
- "                    \n"
- "                \n"
- "\t\t\t\n"
- "\t\t\t\n"
- "\t\t\t\t\n"
- "\t\t\t\t\tBletchley's code-cracking Colossus\n"
- "\t\t\t\t\n"
- "\t\t\t\n"
- "\t\t\n"
- "\t\t\n"
- "                        \n"
- |2+

- |2+

- |2+

- |2+

- |2+

- "\t\n"
- "\t\n"
- "\t\n"
- "\t\n"
- "\t\t\n"
- "\t\t\tPlease turn on JavaScript. Media requires JavaScript to play.  \n"
- "\t\t\n"
- "\t\t\n"
- "\t\t\t\n"
- "\t\t\n"
- "\t\t\n"
- "\t\t\n"
- "\t\t\n"
- |
  //<![CDATA[
- |
  var empId = 'emp_8486345',
- |2
      settings,
- |
  settings = bbc.fmtj.av.emp.getPlayerSettings(empId);
- |
  bbc.fmtj.av.emp.registerPlayer(empId, settings);
- |
  //]]>
- |2+

- "\t\n"
- "\t\n"
- "\t\n"
- "\t\n"
- "\t\tAdvertisement\n"
- "\t\n"
- "\t\n"
- "\t\n"
- "\t\n"
- "\tRetired British spy catcher Tony Sale rebuilt Colossus, the world's first programmable
  electronic computer.\n"
- |2+

- |2+

- |2+

- |2+

- |2+

- |
  The world's first large-scale, electronic programmable computer was created to do one job - crack Hitler's codes. Engineers and code-crackers describe life working on Colossus as part of a BBC News series on British computer pioneers.In June 1944, the Allies were debating when to go ahead with the invasion of Europe - D Day. Eisenhower's decision was directly influenced by information revealed by code-cracking machine Colossus. In messages it decoded, it was discovered that the trick the Allies sought to play on the Germans had worked. Hitler was convinced that the Allies would land near Calais and had kept two divisions in Holland and Belgium to counter this phantom attack. It meant the Allies would have time to muster their troops on the beach following the landings and dig in before reinforcements could arrive. Human errorColossus - the world's first large-scale, electronic programmable computer - was created to crack the codes used to conceal the messages that Hitler's generals were sending to each other. It was developed at Bletchley Park, the site of the Government Codes and Cipher School. "We were in no doubt about how important it was," said Captain Jerry Roberts, the sole surviving member of the unit, called the Testery, that used Colossus to crack codes. "We saw a number of messages signed by Adolf Hitler himself." The code breakers at Bletchley had been seeing messages sent by German generals since the early days of the war.
- |2+

- |2+

- |2+

- |2+

- |2+

- "\t\n"
- "\t\n"
- "\t\n"
- "\t\n"
- "\t\t\n"
- "\t\t\tPlease turn on JavaScript. Media requires JavaScript to play.  \n"
- "\t\t\n"
- "\t\t\n"
- "\t\t\t\n"
- "\t\t\n"
- "\t\t\n"
- "\t\t\n"
- "\t\t\n"
- |
  //<![CDATA[
- |
  var empId = 'emp_8491227',
- |2
      settings,
- |
  settings = bbc.fmtj.av.emp.getPlayerSettings(empId);
- |
  bbc.fmtj.av.emp.registerPlayer(empId, settings);
- |
  //]]>
- |2+

- "\t\n"
- "\t\n"
- "\t\n"
- "\t\n"
- "\t\tAdvertisement\n"
- "\t\n"
- "\t\n"
- "\t\n"
- "\t\n"
- "\tJerry Roberts used Colossus computer during World War 2 to decipher messages
  sent to Hitler's generals.\n"
- |2+

- |2+

- |2+

- |2+

- |2+

- |
  "I suspect sometimes we genuinely saw the messages before the blessed Germans," said Captain Roberts. To scramble, or encipher, the messages the Germans used the Lorenz SZ 40/42 coding machine - known as Tunny to the Allies. This was a more advanced machine than the well-known Enigma and the Allies had no captured examples on which to try out code-cracking techniques. But they were able to break this code thanks to human error. On 30 August 1941, a German operator sent a 4,000 character message twice, made the cardinal sin of using the same settings and made small changes to the re-sent text. In what Captain Roberts described as the "outstanding mental feat of the 20th Century" mathematician Bill Tutte used the two messages to work out how Lorenz enciphered text. Said Captain Roberts: "I used to see him twiddling his pencil staring into space and I wondered a few times if he was earning his corn, but he clearly was." Tutte's crack of the system helped the Allies decode the messages but soon too many messages were being intercepted for the human code crackers to handle. Following the success of the machines produced to crack Enigma, Bletchley decided to build another to crack Lorenz. Broken upOverseeing it was post office engineer Tommy Flowers and much of the early design work was done at the post office's Dollis Hill research lab. "He worked with a select band of brothers. There was about five of us initially," said Harry Fensom, who helped Flowers build the machine and oversaw its installation and operation at Bletchley.
- "\t\n"
- |2+

- "\t\n"
- "\t\t    \n"
- "\t\t\t    \n"
- "\t\t\t\t\n"
- "\t\t\t            \n"
- "\t\t\t                \n"
- "\t\t\t                        \n"
- "\t\t\t                            COLOSSUS\n"
- "\t\t\t                        \n"
- "\t\t\t                \n"
- "\t\t\t\t\t\n"
- "\t\t\t                \n"
- "\t\t\t                     \n"
- "\t\t\t                    Colossus Mark I\n"
- |2+

- |2+

- "Tech specs: 1500 valves, 5,000 characters per second, \n"
- |2+

- |2+

- |
  First operation: 5 February 1944
- |2+

- |2+

- |
  Creators: Tommy Flowers, Harry Fensom, Allen Coombs, Sid Broadhurst, Bill Chandler
- |2+

- |2+

- |2+

- "\t\t\t                \n"
- "\t\t\t                    \n"
- "\t\t\t                        \n"
- "\t\t\t                            \n"
- "\t\t\t                     \n"
- "\t\t\t                    \n"
- "    \n"
- "         \n"
- "        \n"
- "        \n"
- "            \n"
- "                \n"
- "            \n"
- |2
              Computer pioneer family tree
- "            \n"
- "                \n"
- "            \n"
- "        \n"
- "        \n"
- "    \n"
- "    \n"
- |2+

- |2+

- |2+

- |2+

- "\t\t\t                \n"
- "\t\t\t            \n"
- "\t\t\t        \"We didn't think of it as a computer,\" he said. \"Because in those
  days a computer was simply a device for manipulating arithmetic.\" Flowers wanted
  to use huge numbers of valves to power Colossus. The wisdom of the decision was
  doubted because valves were prone to breaking. But Flowers knew, from his work on
  telephone exchanges, that they can have a long life if they are kept running. It
  is switching them on and off that renders them friable. Colossus Mark I had 1,500
  valves and was delivered to Bletchley in late January 1944 and was cracking codes
  within a fortnight. Flowers' belief in the longevity of valves was proved because
  some of the valves dating from the Second World War are in the re-built Colossus
  now installed back at Bletchley. The oldest valve in the re-built Colossus dates
  from 1943, said Tony Sale, who oversaw the 14 year rebuild project. In total, he
  estimates, about 40 of its valves date from the 1940s. About 5 to 8 break every
  year, he said \"It can break the codes in a remarkably short time, six hours, that
  by other means was impossible to break,\" said Mr Sale. The rhythm of the machine
  is dictated by the paper tape bearing the message it is working on. That feeds data
  into the machine at a rate of 5000 characters a second. To reading the dots on the
  tape it uses parts from anti-aircraft shells.\n"
- |2+

- |2+

- |2+

- |2+

- |2+

- "\t\n"
- "\t\n"
- "\t\n"
- "\t\n"
- "\t\t\n"
- "\t\t\tPlease turn on JavaScript. Media requires JavaScript to play.  \n"
- "\t\t\n"
- "\t\t\n"
- "\t\t\t\n"
- "\t\t\n"
- "\t\t\n"
- "\t\t\n"
- "\t\t\n"
- |
  //<![CDATA[
- |
  var empId = 'emp_8491118',
- |2
      settings,
- |
  settings = bbc.fmtj.av.emp.getPlayerSettings(empId);
- |
  bbc.fmtj.av.emp.registerPlayer(empId, settings);
- |
  //]]>
- |2+

- "\t\n"
- "\tJerry Roberts shows how he deciphered German messages while a World War 2 code
  cracker for Britain.\n"
- |2+

- |2+

- |2+

- |2+

- |2+

- "The machine had to be produced quickly and Flowers and his team managed it in 10
  months. Harry Fensom remembers it as a frenetic time, when they stayed all hours
  to get it finished. \"That was just the way we worked,\" he said. In total 10 Colossi
  were produced including several Colossus II machines which went twice as fast. By
  the end of the war it is estimated that all the Colossi had decrypted more than
  63 million characters. The success of the machine spelled its doom. \"Nobody has
  any recognition because Winston Churchill wanted it expunged from peoples' minds,\"
  said Mr Fensom. \"He didn't want any of it to be released.\" This led many to claim
  that the American Eniac was the first programmable, electronic, digital computer.
  Those who worked on Colossus claim their creation has that honour. Captains Roberts
  is keen to ensure that proper credit is given to that achievement. \"I didn't realise
  that this was the beginning of a new world but it was,\" he told BBC News. \"After
  all, the inventor of the computer which has transformed our world is a person of
  some importance and we should be proud of those people.\" \"I would have thought
  that a statue was the least to expect,\" he said.\r\n"
- |2+

- " \n"
- "Bookmark with: \n"
- " \n"
- "Delicious \n"
- |2+

- " \n"
- "Digg \n"
- |2+

- " \n"
- "reddit \n"
- |2+

- " \n"
- "Facebook \n"
- |2+

- " \n"
- "StumbleUpon \n"
- |2+

- |
  What are these?
- |2+

- |2+

- |2+

- |
  <!--
- |
  var bm = new BookMark({site:'News',storyid:8492762,sectionid:44675,url:'/2/hi/technology/8492762.stm',edition:'International'});
- |
  //-->
- |2+

- "                \n"
- |2
                  E-mail this to a friend
- "            \n"
- "            \n"
- "\t       \t\n"
- "\t \tPrintable version\n"
- "            \n"
- "        \n"
- "\t\t    \r\n"
- "\r\n"
- "\tPrint Sponsor\r\n"
- "\tBBC.adverts.write(\"storyprintsponsorship\");\r\n"
- "\r\n"
- "BBC.adverts.show(\"storyprintsponsorship\");\r\n"
- "\tbbc_adsense_slot = \"adsense_middle\";\"us\" == \"us\" ? bbc_adsense_country
  = \"us\" : bbc_adsense_country = \"rest\";\r\n"
- |
  BBC.adverts.show("adsense_middle");
- "                    \n"
- "                    \n"
- "\t\t\t\n"
- "\t\t\t\n"
- "                        \n"
- "\t\t\n"
- "\t   \t\n"
- "\t   \t\t\n"
- "\t        \t\t\n"
- "   \t    \t\t \t\t\r\n"
- "\r\n"
- "    BBC.adverts.write(\"mpu\");\r\n"
- |
  BBC.adverts.show("mpu");
- |2
                                  SEE ALSO
- "                        \n"
- "                \n"
- "                \n"
- "\t\t\n"
- "\t\t\t\n"
- "\t\t\t\t\n"
- "\t\t\t\t\t\n"
- "\t\n"
- "\t\tComputer pioneer interactive family tree\n"
- "\t\t\n"
- "\t\t\t\n"
- "\t\t\t\t\t\t\t\t02 Feb 10 | \n"
- "\t\t\t\t\t\t\t\tTechnology\n"
- "\t\t\t\t\t\t\t\t\n"
- "\t\t\t\t\t\t\t\n"
- "\t\t\t\t\t\t\n"
- "\t\t\t\t\t\n"
- "\t\t\t\t\t\n"
- "\t\t\t\t\n"
- "\t\t\t\n"
- "\t\t\t\t\n"
- "\t\t\t\t\t\n"
- "\t\n"
- "\t\tSecrets, spies and supercomputers\n"
- "\t\t\n"
- "\t\t\t\n"
- "\t\t\t\t\t\t\t\t01 Feb 10 | \n"
- "\t\t\t\t\t\t\t\tTechnology\n"
- "\t\t\t\t\t\t\t\t\n"
- "\t\t\t\t\t\t\t\n"
- "\t\t\t\t\t\t\n"
- "\t\t\t\t\t\n"
- "\t\t\t\t\t\n"
- "\t\t\t\t\n"
- "\t\t\t\n"
- "\t\t\t\t\n"
- "\t\t\t\t\t\n"
- "\t\n"
- "\t\tCelebrating 40 years of the net\n"
- "\t\t\n"
- "\t\t\t\n"
- "\t\t\t\t\t\t\t\t29 Oct 09 | \n"
- "\t\t\t\t\t\t\t\tTechnology\n"
- "\t\t\t\t\t\t\t\t\n"
- "\t\t\t\t\t\t\t\n"
- "\t\t\t\t\t\t\n"
- "\t\t\t\t\t\n"
- "\t\t\t\t\t\n"
- "\t\t\t\t\n"
- "\t\t\t\n"
- "\t\t\t\t\n"
- "\t\t\t\t\t\n"
- "\t\n"
- "\t\tCode-cracking and computers\n"
- "\t\t\n"
- "\t\t\t\n"
- "\t\t\t\t\t\t\t\t06 Nov 08 | \n"
- "\t\t\t\t\t\t\t\tTechnology\n"
- "\t\t\t\t\t\t\t\t\n"
- "\t\t\t\t\t\t\t\n"
- "\t\t\t\t\t\t\n"
- "\t\t\t\t\t\n"
- "\t\t\t\t\t\n"
- "\t\t\t\t\n"
- "\t\t\t\n"
- "\t\t\t\t\n"
- "\t\t\t\t\t\n"
- "\t\n"
- "\t\tCelebrating the UK's computer pioneers\n"
- "\t\t\n"
- "\t\t\t\n"
- "\t\t\t\t\t\t\t\t24 Jul 08 | \n"
- "\t\t\t\t\t\t\t\tTechnology\n"
- "\t\t\t\t\t\t\t\t\n"
- "\t\t\t\t\t\t\t\n"
- "\t\t\t\t\t\t\n"
- "\t\t\t\t\t\n"
- "\t\t\t\t\t\n"
- "\t\t\t\t\n"
- "\t\t\t\n"
- "\t\t\t\t\n"
- "\t\t\t\t\t\n"
- "\t\n"
- "\t\tPM apology after Turing petition\n"
- "\t\t\n"
- "\t\t\t\n"
- "\t\t\t\t\t\t\t\t11 Sep 09 | \n"
- "\t\t\t\t\t\t\t\tTechnology\n"
- "\t\t\t\t\t\t\t\t\n"
- "\t\t\t\t\t\t\t\n"
- "\t\t\t\t\t\t\n"
- "\t\t\t\t\t\n"
- "\t\t\t\t\t\n"
- "\t\t\t\t\n"
- "\t\t\t\n"
- "\t\t\t\t\n"
- "\t\t\t\t\t\n"
- "\t\n"
- "\t\tReboot for UK's 'oldest' computer\n"
- "\t\t\n"
- "\t\t\t\n"
- "\t\t\t\t\t\t\t\t03 Sep 09 | \n"
- "\t\t\t\t\t\t\t\tTechnology\n"
- "\t\t\t\t\t\t\t\t\n"
- "\t\t\t\t\t\t\t\n"
- "\t\t\t\t\t\t\n"
- "\t\t\t\t\t\n"
- "\t\t\t\t\t\n"
- "\t\t\t\t\n"
- "\t\t\t\n"
- "\t\t\t\t\n"
- "\t\t\t\t\t\n"
- "\t\n"
- "\t\tOne tonne 'Baby' marks its birth\n"
- "\t\t\n"
- "\t\t\t\n"
- "\t\t\t\t\t\t\t\t20 Jun 08 | \n"
- "\t\t\t\t\t\t\t\tTechnology\n"
- "\t\t\t\t\t\t\t\t\n"
- "\t\t\t\t\t\t\t\n"
- "\t\t\t\t\t\t\n"
- "\t\t\t\t\t\n"
- "\t\t\t\t\t\n"
- "\t\t\t\t\n"
- "\t\t\t\n"
- "\t\t\t\t\n"
- "\t\t\t\t\t\n"
- "\t\n"
- "\t\tSecurity service targets gamers\n"
- "\t\t\n"
- "\t\t\t\n"
- "\t\t\t\t\t\t\t\t19 Oct 07 | \n"
- "\t\t\t\t\t\t\t\tTechnology\n"
- "\t\t\t\t\t\t\t\t\n"
- "\t\t\t\t\t\t\t\n"
- "\t\t\t\t\t\t\n"
- "\t\t\t\t\t\n"
- "\t\t\t\t\t\n"
- "\t\t\t\t\n"
- "\t\t\t\n"
- "\t\t\t\t\n"
- "\t\t\t\t\t\n"
- "\t\n"
- "\t\tThe past is the future at Bletchley Park\n"
- "\t\t\n"
- "\t\t\t\n"
- "\t\t\t\t\t\t\t\t12 Jul 07 | \n"
- "\t\t\t\t\t\t\t\tTechnology\n"
- "\t\t\t\t\t\t\t\t\n"
- "\t\t\t\t\t\t\t\n"
- "\t\t\t\t\t\t\n"
- "\t\t\t\t\t\n"
- "\t\t\t\t\t\n"
- "\t\t\t\t\n"
- "\t\t\t\n"
- "\t\t\n"
- "\t\t\n"
- "\t\n"
- |2+

- "\t\n"
- |2+

- " \n"
- |2+

- |2+

- |2
                                          RELATED INTERNET LINKS
- "                                        \n"
- "                                \n"
- "                        \n"
- "                        \n"
- "                                \n"
- "                                        \n"
- "                                                \n"
- |2
                                                          Bletchley Park
- "                                                        \n"
- "                                                \n"
- "                                        \n"
- "                                \n"
- "                                        \n"
- "                                                \n"
- |2
                                                          The National Museum of Computing
- "                                                        \n"
- "                                                \n"
- "                                        \n"
- "                                \n"
- "                                        \n"
- "                                                \n"
- |2
                                                          Early British Computers
- "                                                        \n"
- "                                                \n"
- "                                        \n"
- "                                \n"
- "                                        \n"
- "                                                \n"
- |2
                                                          Tony Sale
- "                                                        \n"
- "                                                \n"
- "                                        \n"
- "                                \n"
- "                                        \n"
- "                                                \n"
- |2
                                                          The Design of Colossus
- "                                                        \n"
- "                                                \n"
- "                                        \n"
- "                                \n"
- "                        \n"
- "                        \n"
- "                                \n"
- "                                        \n"
- |2
                                                  The BBC is not responsible for the content of external internet sites
- "                                        \n"
- "                                        \n"
- "                                \n"
- "                        \n"
- "                \n"
- "\t\n"
- |2+

- |2+

- |2+

- |2+

- |2
                              TOP TECHNOLOGY STORIES
- "                        \n"
- "                    \n"
- "                    \n"
- "                        \n"
- "                            \n"
- "\t\n"
- "\t\tUS lifts lid on WikiLeaks probe\n"
- "\t\t\n"
- "\t\t\t\n"
- |2+

- "                        \n"
- "                            \n"
- "\t\n"
- "\t\tBing gains market share in search\n"
- "\t\t\n"
- "\t\t\t\n"
- |2+

- "                        \n"
- "                            \n"
- "\t\n"
- "\t\t'Virtual human' makes Xbox debut\n"
- "\t\t\n"
- "\t\t\t\n"
- |2+

- "                        \n"
- "\t\t\tgetRssUrlStory('/rss/newsonline_world_edition/technology/rss.xml')\r\n"
- "\r\n"
- "MOST POPULAR STORIES NOW\r\n"
- "\r\n"
- "\r\n"
- "\r\n"
- "\r\n"
- "\r\n"
- "\tfunction liveStatsTabs(newTab,oldTab) {\r\n"
- "\t\r\n"
- "\tif (document.getElementById)\r\n"
- "\t{\r\n"
- "\t\tdocument.getElementById(newTab).style.display = \"inline\";\r\n"
- "\t\tdocument.getElementById(oldTab).style.display = \"none\";\r\n"
- "\t\treturn false;\r\n"
- "\t}\r\n"
- "\telse if (document.all)\r\n"
- "\t{\r\n"
- "\t\tdocument.all[oldTab].style.display = \"none\";\r\n"
- "\t\tdocument.all[newTab].style.display = \"inline\";\r\n"
- "\t\treturn false;\r\n"
- "\t}\r\n"
- "\telse {\r\n"
- "\t\treturn true;\r\n"
- "\t}\r\n"
- "\t}\r\n"
- "\t\r\n"
- "\tSHARED\r\n"
- "\t\tREAD\r\n"
- "\t\tWATCHED/LISTENED\r\n"
- "\tMost popular now, in detail \r\n"
- "\r\n"
- "\r\n"
- "SHARED\r\n"
- "\t\tREAD\r\n"
- "\t\tWATCHED/LISTENED\r\n"
- "\t\r\n"
- "    French teacher invented school attack\r\n"
- "  \r\n"
- "  \r\n"
- "    BBC News\r\n"
- "  \r\n"
- "  \r\n"
- "    Rage Against the Machine beat X Factor winner in charts\r\n"
- "  \r\n"
- "  \r\n"
- "    BBC News\r\n"
- "  \r\n"
- "  \r\n"
- "    BBC News\r\n"
- "  \r\n"
- "  \r\n"
- "    Man jailed for web grooming of boys\r\n"
- "  \r\n"
- "  \r\n"
- "    Cosby accusers' interviews published\r\n"
- "  \r\n"
- "  \r\n"
- "    BBC News\r\n"
- "  \r\n"
- "  \r\n"
- "    BBC News\r\n"
- "  \r\n"
- "  \r\n"
- "    Why did Copenhagen fail to deliver a climate deal?\r\n"
- "  \r\n"
- "Most popular now, in detail \r\n"
- "\r\n"
- "\r\n"
- "SHARED\r\n"
- "\t\tREAD\r\n"
- "\t\tWATCHED/LISTENED\r\n"
- "\t\r\n"
- "    \r\n"
- "      One-minute World News\r\n"
- "  \r\n"
- "  \r\n"
- "    \r\n"
- "      BBC News\r\n"
- "  \r\n"
- "  \r\n"
- "    \r\n"
- "      Navy warns as BBC flies near China islands\r\n"
- "  \r\n"
- "  \r\n"
- "    \r\n"
- "      Unnamed page\r\n"
- "  \r\n"
- "  \r\n"
- "    \r\n"
- "      Unnamed page\r\n"
- "  \r\n"
- "Most popular now, in detail \r\n"
- "\r\n"
- "\r\n"
- "\r\n"
- "\r\n"
- "\r\n"
- "\tliveStatsTabs('livestats200','livestats100');\r\n"
- "\tliveStatsTabs('livestats200','livestats300');\r\n"
- |2+

- "                 \r\n"
- "\r\n"
- "      \r\n"
- "    \r\n"
- "\r\n"
- "  \r\n"
- "      \r\n"
- "    \r\n"
- "        \r\n"
- "        \r\n"
- "\t\r\n"
- "            \r\n"
- "            \r\n"
- "\t\t\r\n"
- "            \r\n"
- "            \r\n"
- "\t\r\n"
- "\t\t\r\n"
- "\t\t\t\r\n"
- "\t\t\tFEATURES, VIEWS, ANALYSIS\r\n"
- "\t\t\r\n"
- "\t\r\n"
- "\r\n"
- "            \r\n"
- "                \r\n"
- "                    \r\n"
- "                \r\n"
- "            \r\n"
- "\t\r\n"
- "\t\r\n"
- "    \r\n"
- "\r\n"
- "  \r\n"
- "    \r\n"
- "        \r\n"
- "        \r\n"
- "\t\r\n"
- "            \r\n"
- "            \r\n"
- "\t\t\r\n"
- "            \r\n"
- "            \r\n"
- "\t\r\n"
- "\t\t\r\n"
- "\t\t\r\n"
- "\t\t\r\n"
- "\t\t\r\n"
- "\t\r\n"
- "\t\tGhost town\r\n"
- "\t\t\r\n"
- "\t\t\t\r\n"
- "\t\r\n"
- "\t\r\n"
- "\t\r\n"
- "\t\t\r\n"
- "\t\t\t\r\n"
- "\t\t\tHas China's housing bubble burst?\r\n"
- "\t\t\t\r\n"
- "\t\t\r\n"
- "\t\t\t\r\n"
- "\r\n"
- "\r\n"
- "\t\r\n"
- "\t\r\n"
- "\t\r\n"
- "\r\n"
- "\r\n"
- "\r\n"
- "            \r\n"
- "                \r\n"
- "                    \r\n"
- "                \r\n"
- "            \r\n"
- "\t\r\n"
- "\t\r\n"
- "    \r\n"
- "\r\n"
- "    \r\n"
- "        \r\n"
- "        \r\n"
- "\t\r\n"
- "            \r\n"
- "            \r\n"
- "\t\t\r\n"
- "            \r\n"
- "            \r\n"
- "\t\r\n"
- "\t\t\r\n"
- "\t\t\r\n"
- "\t\t\r\n"
- "\t\t\r\n"
- "\t\r\n"
- "\t\tThe guerilla plant \r\n"
- "\t\t\r\n"
- "\t\t\t\r\n"
- "\t\r\n"
- "\t\r\n"
- "\t\r\n"
- "\t\t\r\n"
- "\t\t\t\r\n"
- "\t\t\tHow the world's oldest clove tree defied an empire\r\n"
- "\t\t\t\r\n"
- "\t\t\r\n"
- "\t\t\t\r\n"
- "\r\n"
- "\r\n"
- "\t\r\n"
- "\t\r\n"
- "\t\r\n"
- "\r\n"
- "\r\n"
- "\r\n"
- "            \r\n"
- "                \r\n"
- "                    \r\n"
- "                \r\n"
- "            \r\n"
- "\t\r\n"
- "\t\r\n"
- "    \r\n"
- "\r\n"
- "    \r\n"
- "        \r\n"
- "        \r\n"
- "\t\r\n"
- "            \r\n"
- "            \r\n"
- "\t\t\r\n"
- "            \r\n"
- "            \r\n"
- "\t\r\n"
- "\t\t\r\n"
- "\t\t\r\n"
- "\t\t\r\n"
- "\t\t\r\n"
- "\t\r\n"
- "\t\tWalking away\r\n"
- "\t\t\r\n"
- "\t\t\t\r\n"
- "\t\r\n"
- "\t\r\n"
- "\t\r\n"
- "\t\t\r\n"
- "\t\t\t\r\n"
- "\t\t\tWhy Royal Ballet principal Sergei Polunin quit\r\n"
- "\t\t\t\r\n"
- "\t\t\r\n"
- "\t\t\t\r\n"
- "\r\n"
- "\r\n"
- "\t\r\n"
- "\t\r\n"
- "\t\r\n"
- "\r\n"
- "\r\n"
- "\r\n"
- "            \r\n"
- "                \r\n"
- "                    \r\n"
- "                \r\n"
- "            \r\n"
- "\t\r\n"
- "\t\r\n"
- "    \r\n"
- "\r\n"
- "    \r\n"
- "    \r\n"
- "<!--\r\n"
- "\r\n"
- "function randomLiveStats(){\r\n"
- "var liveStatsFacts=new Array();\r\n"
- "\r\n"
- "liveStatsFacts[0]=\"The most read story in the UK is: <a href=http://news.bbc.co.uk/1/hi/politics/10617724.stm>Government
  wins Commons VAT votes\";\r\n"
- "liveStatsFacts[1]=\"The most read story in Africa is: <a href=http://news.bbc.co.uk/2/hi/middle_east/8600398.stm>Saudi
  'reprieve' in sorcery case\";\r\n"
- "liveStatsFacts[2]=\"The most read story in Europe is: <a href=http://news.bbc.co.uk/1/hi/world/europe/8444202.stm>Mona
  Lisa 'had high cholesterol'\";\r\n"
- "liveStatsFacts[3]=\"The most read story in North America is: <a href=http://news.bbc.co.uk/1/hi/england/cornwall/6498249.stm>Town
  lines 'make road dangerous'\";\r\n"
- "liveStatsFacts[4]=\"The most read story in Australasia is: <a href=http://news.bbc.co.uk/1/hi/in_pictures/8508817.stm>In
  pictures: New 9/11 photos released\";\r\n"
- "liveStatsFacts[5]=\"The most shared story right now is: <a href=http://news.bbc.co.uk/2/hi/europe/country_profiles/1113655.stm>BBC
  News\";\r\n"
- "liveStatsFacts[6]=\"<a href=/1/shared/bsp/hi/live_stats/html/map.stm>Traffic to
  this site is currently 13% below normal\";\r\n"
- "liveStatsFacts[7]=\"<a href=/1/shared/bsp/hi/live_stats/html/map.stm?lsf>5,371
  pages were read in the last minute.\";\r\n"
- "liveStatsFacts[8]=\"<a href=/1/shared/bsp/hi/live_stats/html/map.stm?lsf>4,743
  people are reading stories on the site right now.\";\r\n"
- "\r\n"
- "//document.write('<li class=\"footermostpop\" style=\"-webkit-text-size-adjust:
  none\">' + liveStatsFacts[Math.floor(Math.random()*liveStatsFacts.length)] + '');\r\n"
- "document.write('<div class=\"mostpopular\"><span class=\"now\"><a href=\"/1/shared/bsp/hi/live_stats/html/map.stm?lsf2\">Most
  Popular Now<p class=\"section\">' + liveStatsFacts[Math.floor(Math.random()*liveStatsFacts.length)]
  + '<div class=\"clear\">');\r\n"
- "}\r\n"
- "randomLiveStats();\r\n"
- "//-->\r\n"
- "\r\n"
- "\r\n"
- "\r\n"
- "Most Popular NowMost Popular Now | 4,743 people are reading stories on the site
  right now.\";\r\n"
- "\r\n"
- "\r\n"
- "\r\n"
- "\r\n"
- "\r\n"
- "\r\n"
- "\r\n"
- "\r\n"
- "            \r\n"
- "                \r\n"
- "                    \r\n"
- "                \r\n"
- "            \r\n"
- "\t\r\n"
- "\t\r\n"
- "    \r\n"
- |2+

- "    \n"
- |2+

- "\t\n"
- "        \n"
- |2+

- "\t\n"
- |2+

- |2+

- |
  Skip to top
- |2+

- "\tPRODUCTS & SERVICES\n"
- "\tE-mail news\n"
- "\t\tMobiles\n"
- "\t\tWidgets & Alerts\n"
- "\t\tNews feeds\t\t\n"
- "\t\tPodcasts\n"
- "\t\n"
- |2+

- |2+

- "        \n"
- "        \n"
- "\t\n"
- |2+

- |2+

- |2+

- |2+

- |2+

- "\t\n"
- "\t\n"
- "\t\t\n"
- "\t\n"
- "\t\t\n"
- "\t\t\n"
- "\t\n"
- "\t\n"
- "\t\n"
- "\t\n"
- |2+

- "\t\n"
- "\t\t\n"
- |2+

- "        \n"
- |
  BBC iDSign in
- |2+

- |2+

- |2+

- |2+

- |2+

- |2+

- |2+

- |2+

- |2+

- |2+

- |2+

- |2+

- |2+

- |2+

- |2+

- |2+

- |2+

- |2+

- |2+

- |2+

- |2+

- |2+

- "      Search term:     BBC navigation News  Sport Weather   Capital   TV  Radio
  More…        CBBC CBeebies Make It Digital Food iWonder Bitesize Music Earth Local
  Northern Ireland Scotland Wales          BBC links  Mobile site      Terms of Use
  \      About the BBC    Advertise With Us        Privacy       Accessibility Help
  \   Ad Choices        Cookies        Contact the BBC     Parental Guidance        Copyright
  © 2015 BBC. The BBC is not responsible for the content of external sites. Read more.
  This page is best viewed in an up-to-date web browser with style sheets (CSS) enabled.
  While you will be able to view the content of this page in your current browser,
  you will not be able to get the full visual experience. Please consider upgrading
  your browser software or enabling style sheets (CSS) if you are able to do so.   \r\n"
- "\r\n"
- "\r\n"
- "            \r\n"
- "\r\n"
- "\r\n"
- "\r\n"
- "\r\n"
- "    /*<![CDATA[*/\r\n"
- "    if (BBC.adverts.isActive('analytics')) {\r\n"
- "        if (bbcdotcom && bbcdotcom.analytics) {\r\n"
- "\t\t\tbbcdotcom.analytics.init();\r\n"
- "            bbcdotcom.analytics.page();\r\n"
- "        }\r\n"
- "    }\r\n"
- "    /*]]>*/\r\n"
- "\r\n"
- "    /*<![CDATA[*/\r\n"
- "    if (BBC.adverts.isActive('analytics')) {\r\n"
- "        document.write(unescape(\"%3Cscript src='\" + (document.location.protocol
  == \"https:\" ? \"https://sb\" : \"http://b\") + \".scorecardresearch.com/beacon.js'
  %3E%3C/script%3E\"));\r\n"
- "    }\r\n"
- "    /*]]>*/\r\n"
- "\r\n"
- "    /*<![CDATA[*/\r\n"
- "    if (BBC.adverts.isActive('analytics')) {\r\n"
- "        COMSCORE.beacon({\r\n"
- "            c1:2,\r\n"
- "            c2:\"6035051\",\r\n"
- "            c3:\"\",\r\n"
- "            c4:\"news.bbc.co.uk/2/hi/technology/8492762.stm\",\r\n"
- "            c5:\"\",\r\n"
- "            c6:\"\",\r\n"
- "            c15:\"\"\r\n"
- "        });\r\n"
- "    }\r\n"
- "    /*]]>*/\r\n"
- "\r\n"
- "    /*<![CDATA[*/\r\n"
- "    if (BBC.adverts.isActive('nielsen-au')) {\r\n"
- "        <!-- COPYRIGHT 2009 Nielsen Online -->\r\n"
- "        document.write(unescape('%3Cscript type=\"text/javascript\" src=\"' + ('https:'
  == document.location.protocol ? 'https:' : 'http:') + '//secure-au.imrworldwide.com/v60.js\"%3E%3C/script%3E'));\r\n"
- "    }\r\n"
- "    /*]]>*/\r\n"
- "\r\n"
- "    /*<![CDATA[*/\r\n"
- "    if (BBC.adverts.isActive('nielsen-au')) {\r\n"
- "        <!-- Start Nielsen Online SiteCensus V6.0 Part 2 -->\r\n"
- "        nol_t({cid:\"au-bbc\",content:\"0\",server:\"secure-au\"}).record().post();\r\n"
- "        <!-- End Nielsen Online SiteCensus V6.0 Part 2 -->\r\n"
- "    }\r\n"
- "    /*]]>*/\r\n"
- "\r\n"
- "    /*<![CDATA[*/\r\n"
- "    if (BBC.adverts.isActive('nielsen-nz')) {\r\n"
- "        <!-- COPYRIGHT 2009 Nielsen Online -->\r\n"
- "        document.write(unescape('%3Cscript type=\"text/javascript\" src=\"' + ('https:'
  == document.location.protocol ? 'https:' : 'http:') + '//secure-nz.imrworldwide.com/v60.js\"%3E%3C/script%3E'));\r\n"
- "    }\r\n"
- "    /*]]>*/\r\n"
- "\r\n"
- "    /*<![CDATA[*/\r\n"
- "    if (BBC.adverts.isActive('nielsen-nz')) {\r\n"
- "        nol_t({cid:\"nz-bbc\",content:\"0\",server:\"secure-nz\"}).record().post();\r\n"
- "    }\r\n"
- "    /*]]>*/\r\n"
- "\r\n"
- "    /*<![CDATA[*/\r\n"
- "    if (BBC.adverts.isActive('nielsen-us')) {\r\n"
- "        <!-- COPYRIGHT 2010 Nielsen Online -->\r\n"
- "       (function () {\r\n"
- "           var d = new Image(1, 1);\r\n"
- "           d.onerror = d.onload = function () {\r\n"
- "               d.onerror = d.onload = null;\r\n"
- "           };\r\n"
- "           d.src = [('https:' == document.location.protocol ? 'https:' : 'http:')
  + \"//secure-us.imrworldwide.com/cgi-bin/m?ci=us-804789h&amp;cg=0&amp;cc=1&amp;si=\",
  escape(window.location.href), \"&amp;rp=\",\r\n"
- "           escape(document.referrer), \"&amp;ts=compact&amp;rnd=\", (new Date()).getTime()].join('');\r\n"
- "        })();\r\n"
- "    }\r\n"
- "    /*]]>*/\r\n"
- "\r\n"
- "    /*<![CDATA[*/\r\n"
- "    if (BBC.adverts.isActive('analytics')) {\r\n"
- "        (function() {\r\n"
- "            var em = document.createElement('script'); em.type = 'text/javascript';
  em.async = true;\r\n"
- "            em.src = ('https:' == document.location.protocol ? 'https://me-ssl'
  : 'http://me-cdn') + '.effectivemeasure.net/em.js';\r\n"
- "            var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(em,
  s);\r\n"
- "        })();\r\n"
- "    }\r\n"
- "    /*]]>*/\r\n"
- "\r\n"
- "        \r\n"
- "            /*<![CDATA[*/\r\n"
- "            if (BBC.adverts.isActive('ads') && BBC.adverts.isActive('analytics'))
  {\r\n"
- "                document.write(unescape('%3Cscript src=\"http://widgets.outbrain.com/outbrain.js\"
  type=\"text/javascript\"%3E%3C/script%3E'));\r\n"
- "            }\r\n"
- "            /*]]>*/\r\n"
- "           if (typeof require !== 'undefined') { require(['istats-1'], function(istats){
  istats.track('external', { region: document.getElementById('blq-main') }); istats.track('download',
  { region: document.getElementById('blq-main') }); }); } \n"
- "\t\t\tblq.setLabel('searchSuggestion', 'Search BBC News');\n"
- "\t  British Broadcasting CorporationHome  Accessibility linksPlease turn on JavaScript.
  Media requires JavaScript to play. Retired British spy catcher Tony Sale rebuilt
  Colossus, the world's first programmable electronic computer.The world's first large-scale,
  electronic programmable computer was created to do one job - crack Hitler's codes.
  Engineers and code-crackers describe life working on Colossus as part of a BBC News
  series on British computer pioneers.In June 1944, the Allies were debating when
  to go ahead with the invasion of Europe - D Day. Eisenhower's decision was directly
  influenced by information revealed by code-cracking machine Colossus. In messages
  it decoded, it was discovered that the trick the Allies sought to play on the Germans
  had worked. Hitler was convinced that the Allies would land near Calais and had
  kept two divisions in Holland and Belgium to counter this phantom attack. It meant
  the Allies would have time to muster their troops on the beach following the landings
  and dig in before reinforcements could arrive. Human errorColossus - the world's
  first large-scale, electronic programmable computer - was created to crack the codes
  used to conceal the messages that Hitler's generals were sending to each other.
  It was developed at Bletchley Park, the site of the Government Codes and Cipher
  School. \"We were in no doubt about how important it was,\" said Captain Jerry Roberts,
  the sole surviving member of the unit, called the Testery, that used Colossus to
  crack codes. \"We saw a number of messages signed by Adolf Hitler himself.\" The
  code breakers at Bletchley had been seeing messages sent by German generals since
  the early days of the war.Please turn on JavaScript. Media requires JavaScript to
  play. Jerry Roberts used Colossus computer during World War 2 to decipher messages
  sent to Hitler's generals.\"I suspect sometimes we genuinely saw the messages before
  the blessed Germans,\" said Captain Roberts. To scramble, or encipher, the messages
  the Germans used the Lorenz SZ 40/42 coding machine - known as Tunny to the Allies.
  This was a more advanced machine than the well-known Enigma and the Allies had no
  captured examples on which to try out code-cracking techniques. But they were able
  to break this code thanks to human error. On 30 August 1941, a German operator sent
  a 4,000 character message twice, made the cardinal sin of using the same settings
  and made small changes to the re-sent text. In what Captain Roberts described as
  the \"outstanding mental feat of the 20th Century\" mathematician Bill Tutte used
  the two messages to work out how Lorenz enciphered text. Said Captain Roberts: \"I
  used to see him twiddling his pencil staring into space and I wondered a few times
  if he was earning his corn, but he clearly was.\" Tutte's crack of the system helped
  the Allies decode the messages but soon too many messages were being intercepted
  for the human code crackers to handle. Following the success of the machines produced
  to crack Enigma, Bletchley decided to build another to crack Lorenz. Broken upOverseeing
  it was post office engineer Tommy Flowers and much of the early design work was
  done at the post office's Dollis Hill research lab. \"He worked with a select band
  of brothers. There was about five of us initially,\" said Harry Fensom, who helped
  Flowers build the machine and oversaw its installation and operation at Bletchley.\"We
  didn't think of it as a computer,\" he said. \"Because in those days a computer
  was simply a device for manipulating arithmetic.\" Flowers wanted to use huge numbers
  of valves to power Colossus. The wisdom of the decision was doubted because valves
  were prone to breaking. But Flowers knew, from his work on telephone exchanges,
  that they can have a long life if they are kept running. It is switching them on
  and off that renders them friable. Colossus Mark I had 1,500 valves and was delivered
  to Bletchley in late January 1944 and was cracking codes within a fortnight. Flowers'
  belief in the longevity of valves was proved because some of the valves dating from
  the Second World War are in the re-built Colossus now installed back at Bletchley.
  The oldest valve in the re-built Colossus dates from 1943, said Tony Sale, who oversaw
  the 14 year rebuild project. In total, he estimates, about 40 of its valves date
  from the 1940s. About 5 to 8 break every year, he said \"It can break the codes
  in a remarkably short time, six hours, that by other means was impossible to break,\"
  said Mr Sale. The rhythm of the machine is dictated by the paper tape bearing the
  message it is working on. That feeds data into the machine at a rate of 5000 characters
  a second. To reading the dots on the tape it uses parts from anti-aircraft shells.Please
  turn on JavaScript. Media requires JavaScript to play. Jerry Roberts shows how he
  deciphered German messages while a World War 2 code cracker for Britain.The machine
  had to be produced quickly and Flowers and his team managed it in 10 months. Harry
  Fensom remembers it as a frenetic time, when they stayed all hours to get it finished.
  \"That was just the way we worked,\" he said. In total 10 Colossi were produced
  including several Colossus II machines which went twice as fast. By the end of the
  war it is estimated that all the Colossi had decrypted more than 63 million characters.
  The success of the machine spelled its doom. \"Nobody has any recognition because
  Winston Churchill wanted it expunged from peoples' minds,\" said Mr Fensom. \"He
  didn't want any of it to be released.\" This led many to claim that the American
  Eniac was the first programmable, electronic, digital computer. Those who worked
  on Colossus claim their creation has that honour. Captains Roberts is keen to ensure
  that proper credit is given to that achievement. \"I didn't realise that this was
  the beginning of a new world but it was,\" he told BBC News. \"After all, the inventor
  of the computer which has transformed our world is a person of some importance and
  we should be proud of those people.\" \"I would have thought that a statue was the
  least to expect,\" he said.\r\n"
- 'What are these?Print SponsorMost Popular Now | 4,743 people are reading stories
  on the site right now.";  Search term: Copyright © 2015 BBC. The BBC is not responsible
  for the content of external sites. Read more.This page is best viewed in an up-to-date
  web browser with style sheets (CSS) enabled. While you will be able to view the
  content of this page in your current browser, you will not be able to get the full
  visual experience. Please consider upgrading your browser software or enabling style
  sheets (CSS) if you are able to do so.'
index:
  if: !ruby/object:Word
    word: if
    stem: if
    docFrequency: 37.0
    docPositions:
    - 7
    - 28
    - 37
    - 45
    - 49
    - 71
    - 74
    - 698
    - 754
    - 1100
    - 1106
    - 1464
    - 1473
    - 1474
    - 1482
    - 1488
    - 1502
    - 1509
    - 1517
    - 1524
    - 1530
    - 1544
    - 1555
    - 1559
    - 1561
    - 1562
  typeof: !ruby/object:Word
    word: typeof
    stem: typeof
    docFrequency: 6.0
    docPositions:
    - 7
    - 71
    - 1559
  bbc: !ruby/object:Word
    word: bbc
    stem: bbc
    docFrequency: 70.0
    docPositions:
    - 7
    - 8
    - 74
    - 87
    - 425
    - 426
    - 521
    - 526
    - 638
    - 639
    - 657
    - 679
    - 680
    - 776
    - 777
    - 787
    - 825
    - 827
    - 829
    - 841
    - 842
    - 1053
    - 1130
    - 1136
    - 1139
    - 1148
    - 1151
    - 1168
    - 1172
    - 1363
    - 1364
    - 1365
    - 1366
    - 1367
    - 1368
    - 1441
    - 1464
    - 1473
    - 1482
    - 1488
    - 1493
    - 1502
    - 1509
    - 1511
    - 1517
    - 1524
    - 1525
    - 1530
    - 1544
    - 1555
    - 1560
    - 1561
    - 1562
  adverts: !ruby/object:Word
    word: adverts
    stem: advert
    docFrequency: 22.0
    docPositions:
    - 7
    - 8
    - 425
    - 426
    - 825
    - 827
    - 829
    - 841
    - 842
    - 1473
    - 1482
    - 1488
    - 1502
    - 1509
    - 1517
    - 1524
    - 1530
    - 1544
    - 1555
  undefined: !ruby/object:Word
    word: undefined
    stem: undefin
    docFrequency: 6.0
    docPositions:
    - 7
    - 71
    - 1559
  setpageversion: !ruby/object:Word
    word: setpageversion
    stem: setpagevers
    docFrequency: 3.0
    docPositions:
    - 7
    - 8
  '': !ruby/object:Word
    word: ''
    stem: ''
    docFrequency: 28.0
    docPositions:
    - 11
    - 71
    - 74
    - 635
    - 676
    - 698
    - 754
    - 773
    - 1085
    - 1373
    - 1472
    - 1481
    - 1487
    - 1501
    - 1503
    - 1508
    - 1510
    - 1512
    - 1516
    - 1518
    - 1523
    - 1529
    - 1531
    - 1532
    - 1543
    - 1545
    - 1554
  cdata: !ruby/object:Word
    word: cdata
    stem: cdata
    docFrequency: 20.0
    docPositions:
    - 11
    - 71
    - 74
    - 635
    - 676
    - 773
    - 1472
    - 1481
    - 1487
    - 1501
    - 1508
    - 1516
    - 1523
    - 1529
    - 1543
    - 1554
  require: !ruby/object:Word
    word: require
    stem: requir
    docFrequency: 6.0
    docPositions:
    - 12
    - 71
    - 1559
  istats: !ruby/object:Word
    word: istats
    stem: istat
    docFrequency: 15.0
    docPositions:
    - 12
    - 71
    - 1559
  function: !ruby/object:Word
    word: function
    stem: function
    docFrequency: 15.0
    docPositions:
    - 12
    - 13
    - 71
    - 74
    - 1098
    - 1360
    - 1532
    - 1534
    - 1545
    - 1559
  countername: !ruby/object:Word
    word: countername
    stem: counternam
    docFrequency: 9.0
    docPositions:
    - 13
    - 14
    - 42
    - 46
    - 49
    - 50
    - 51
    - 53
  u: !ruby/object:Word
    word: u
    stem: u
    docFrequency: 24.0
    docPositions:
    - 13
    - 15
    - 16
    - 17
    - 18
    - 19
    - 20
    - 21
    - 22
    - 23
    - 24
    - 25
    - 37
  replace: !ruby/object:Word
    word: replace
    stem: replac
    docFrequency: 13.0
    docPositions:
    - 15
    - 16
    - 17
    - 18
    - 19
    - 20
    - 21
    - 22
    - 23
    - 24
    - 74
  newsid_: !ruby/object:Word
    word: newsid_
    stem: newsid_
    docFrequency: 2.0
    docPositions:
    - 18
  d: !ruby/object:Word
    word: d
    stem: d
    docFrequency: 11.0
    docPositions:
    - 18
    - 26
    - 657
    - 1533
    - 1534
    - 1535
    - 1537
    - 1561
  g: !ruby/object:Word
    word: g
    stem: g
    docFrequency: 10.0
    docPositions:
    - 18
    - 71
    - 74
  reviews: !ruby/object:Word
    word: reviews
    stem: review
    docFrequency: 2.0
    docPositions:
    - 20
  sport: !ruby/object:Word
    word: sport
    stem: sport
    docFrequency: 8.0
    docPositions:
    - 21
    - 22
    - 33
    - 522
    - 1464
  bbc_sport: !ruby/object:Word
    word: bbc_sport
    stem: bbc_sport
    docFrequency: 2.0
    docPositions:
    - 22
  hi: !ruby/object:Word
    word: hi
    stem: hi
    docFrequency: 14.0
    docPositions:
    - 23
    - 811
    - 1363
    - 1364
    - 1365
    - 1366
    - 1367
    - 1368
    - 1369
    - 1370
    - 1371
    - 1374
    - 1493
  mobile: !ruby/object:Word
    word: mobile
    stem: mobil
    docFrequency: 3.0
    docPositions:
    - 23
    - 1464
  uk: !ruby/object:Word
    word: uk
    stem: uk
    docFrequency: 15.0
    docPositions:
    - 24
    - 74
    - 293
    - 912
    - 942
    - 1363
    - 1364
    - 1365
    - 1366
    - 1367
    - 1368
    - 1493
  i: !ruby/object:Word
    word: i
    stem: i
    docFrequency: 27.0
    docPositions:
    - 24
    - 43
    - 44
    - 74
    - 698
    - 714
    - 754
    - 787
    - 1561
  fs: !ruby/object:Word
    word: fs
    stem: fs
    docFrequency: 2.0
    docPositions:
    - 24
  path: !ruby/object:Word
    word: path
    stem: path
    docFrequency: 7.0
    docPositions:
    - 25
    - 28
    - 43
    - 44
    - 71
  split: !ruby/object:Word
    word: split
    stem: split
    docFrequency: 3.0
    docPositions:
    - 25
    - 71
  slice: !ruby/object:Word
    word: slice
    stem: slice
    docFrequency: 2.0
    docPositions:
    - 25
  asset_id_re: !ruby/object:Word
    word: asset_id_re
    stem: asset_id_r
    docFrequency: 3.0
    docPositions:
    - 26
    - 28
  asset_id: !ruby/object:Word
    word: asset_id
    stem: asset_id
    docFrequency: 6.0
    docPositions:
    - 27
    - 29
    - 45
    - 49
  matches: !ruby/object:Word
    word: matches
    stem: match
    docFrequency: 3.0
    docPositions:
    - 28
    - 29
  exec: !ruby/object:Word
    word: exec
    stem: exec
    docFrequency: 2.0
    docPositions:
    - 28
  length: !ruby/object:Word
    word: length
    stem: length
    docFrequency: 6.0
    docPositions:
    - 28
    - 43
    - 71
    - 1373
    - 1374
  prod_name: !ruby/object:Word
    word: prod_name
    stem: prod_nam
    docFrequency: 5.0
    docPositions:
    - 31
    - 38
    - 42
    - 45
  news: !ruby/object:Word
    word: news
    stem: new
    docFrequency: 30.0
    docPositions:
    - 31
    - 87
    - 116
    - 173
    - 397
    - 657
    - 787
    - 811
    - 1130
    - 1136
    - 1139
    - 1148
    - 1151
    - 1164
    - 1168
    - 1363
    - 1364
    - 1365
    - 1366
    - 1367
    - 1368
    - 1410
    - 1413
    - 1464
    - 1493
    - 1560
    - 1561
  prod: !ruby/object:Word
    word: prod
    stem: prod
    docFrequency: 7.0
    docPositions:
    - 32
    - 33
    - 34
    - 35
    - 36
    - 37
  new: !ruby/object:Word
    word: new
    stem: new
    docFrequency: 11.0
    docPositions:
    - 32
    - 71
    - 787
    - 811
    - 1361
    - 1367
    - 1533
    - 1538
    - 1561
  array: !ruby/object:Word
    word: array
    stem: arrai
    docFrequency: 3.0
    docPositions:
    - 32
    - 1361
  weather: !ruby/object:Word
    word: weather
    stem: weather
    docFrequency: 5.0
    docPositions:
    - 34
    - 523
    - 1464
  cbbc: !ruby/object:Word
    word: cbbc
    stem: cbbc
    docFrequency: 4.0
    docPositions:
    - 35
    - 1464
  name: !ruby/object:Word
    word: name
    stem: name
    docFrequency: 4.0
    docPositions:
    - 36
    - 37
    - 38
  match: !ruby/object:Word
    word: match
    stem: match
    docFrequency: 2.0
    docPositions:
    - 37
  break: !ruby/object:Word
    word: break
    stem: break
    docFrequency: 10.0
    docPositions:
    - 39
    - 698
    - 754
    - 1561
  push: !ruby/object:Word
    word: push
    stem: push
    docFrequency: 5.0
    docPositions:
    - 42
    - 46
    - 49
    - 50
  part: !ruby/object:Word
    word: part
    stem: part
    docFrequency: 11.0
    docPositions:
    - 44
    - 45
    - 46
    - 657
    - 1510
    - 1512
    - 1561
  default: !ruby/object:Word
    word: default
    stem: default
    docFrequency: 2.0
    docPositions:
    - 45
  page: !ruby/object:Word
    word: page
    stem: page
    docFrequency: 12.0
    docPositions:
    - 50
    - 74
    - 173
    - 583
    - 1176
    - 1180
    - 1464
    - 1476
    - 1562
  return: !ruby/object:Word
    word: return
    stem: return
    docFrequency: 6.0
    docPositions:
    - 51
    - 74
    - 1104
    - 1110
    - 1113
  join: !ruby/object:Word
    word: join
    stem: join
    docFrequency: 3.0
    docPositions:
    - 51
    - 1538
  istats_countername: !ruby/object:Word
    word: istats_countername
    stem: istats_counternam
    docFrequency: 2.0
    docPositions:
    - 53
  location: !ruby/object:Word
    word: location
    stem: locat
    docFrequency: 9.0
    docPositions:
    - 53
    - 71
    - 1483
    - 1504
    - 1519
    - 1537
    - 1547
  href: !ruby/object:Word
    word: href
    stem: href
    docFrequency: 15.0
    docPositions:
    - 53
    - 74
    - 1363
    - 1364
    - 1365
    - 1366
    - 1367
    - 1368
    - 1369
    - 1370
    - 1371
    - 1374
    - 1537
  bbccookies: !ruby/object:Word
    word: bbccookies
    stem: bbccooki
    docFrequency: 16.0
    docPositions:
    - 71
    - 74
  isallowed: !ruby/object:Word
    word: isallowed
    stem: isallow
    docFrequency: 3.0
    docPositions:
    - 71
  invoke: !ruby/object:Word
    word: invoke
    stem: invok
    docFrequency: 2.0
    docPositions:
    - 71
  istatstrackingurl: !ruby/object:Word
    word: istatstrackingurl
    stem: istatstrackingurl
    docFrequency: 4.0
    docPositions:
    - 71
  getdefaulturl: !ruby/object:Word
    word: getdefaulturl
    stem: getdefaulturl
    docFrequency: 2.0
    docPositions:
    - 71
  isenabled: !ruby/object:Word
    word: isenabled
    stem: isen
    docFrequency: 2.0
    docPositions:
    - 71
  bbcflagpoles_istats: !ruby/object:Word
    word: bbcflagpoles_istats
    stem: bbcflagpoles_istat
    docFrequency: 2.0
    docPositions:
    - 71
  sitestat: !ruby/object:Word
    word: sitestat
    stem: sitestat
    docFrequency: 3.0
    docPositions:
    - 71
  else: !ruby/object:Word
    word: else
    stem: els
    docFrequency: 6.0
    docPositions:
    - 71
    - 74
    - 1106
    - 1112
  window: !ruby/object:Word
    word: window
    stem: window
    docFrequency: 5.0
    docPositions:
    - 71
    - 1537
  ns_pixelurl: !ruby/object:Word
    word: ns_pixelurl
    stem: ns_pixelurl
    docFrequency: 3.0
    docPositions:
    - 71
  used: !ruby/object:Word
    word: used
    stem: us
    docFrequency: 14.0
    docPositions:
    - 71
    - 657
    - 692
    - 698
    - 1561
  flash: !ruby/object:Word
    word: flash
    stem: flash
    docFrequency: 2.0
    docPositions:
    - 71
  library: !ruby/object:Word
    word: library
    stem: librari
    docFrequency: 2.0
    docPositions:
    - 71
  track: !ruby/object:Word
    word: track
    stem: track
    docFrequency: 5.0
    docPositions:
    - 71
    - 74
    - 1559
  n: !ruby/object:Word
    word: n
    stem: n
    docFrequency: 3.0
    docPositions:
    - 71
  j: !ruby/object:Word
    word: j
    stem: j
    docFrequency: 5.0
    docPositions:
    - 71
  document: !ruby/object:Word
    word: document
    stem: document
    docFrequency: 26.0
    docPositions:
    - 71
    - 74
    - 1100
    - 1102
    - 1103
    - 1106
    - 1108
    - 1109
    - 1373
    - 1374
    - 1483
    - 1504
    - 1519
    - 1537
    - 1538
    - 1546
    - 1547
    - 1548
    - 1556
    - 1559
  f: !ruby/object:Word
    word: f
    stem: f
    docFrequency: 7.0
    docPositions:
    - 71
    - 74
  b: !ruby/object:Word
    word: b
    stem: b
    docFrequency: 8.0
    docPositions:
    - 71
    - 74
    - 1483
  cookie: !ruby/object:Word
    word: cookie
    stem: cooki
    docFrequency: 6.0
    docPositions:
    - 71
    - 74
  indexof: !ruby/object:Word
    word: indexof
    stem: indexof
    docFrequency: 3.0
    docPositions:
    - 71
  st_ux: !ruby/object:Word
    word: st_ux
    stem: st_ux
    docFrequency: 4.0
    docPositions:
    - 71
  k: !ruby/object:Word
    word: k
    stem: k
    docFrequency: 5.0
    docPositions:
    - 71
  e: !ruby/object:Word
    word: e
    stem: e
    docFrequency: 13.0
    docPositions:
    - 71
    - 74
    - 592
    - 815
    - 1410
  h: !ruby/object:Word
    word: h
    stem: h
    docFrequency: 7.0
    docPositions:
    - 71
    - 74
  domain: !ruby/object:Word
    word: domain
    stem: domain
    docFrequency: 3.0
    docPositions:
    - 71
  ns_: !ruby/object:Word
    word: ns_
    stem: ns_
    docFrequency: 6.0
    docPositions:
    - 71
  ux: !ruby/object:Word
    word: ux
    stem: ux
    docFrequency: 5.0
    docPositions:
    - 71
  cname: !ruby/object:Word
    word: cname
    stem: cname
    docFrequency: 2.0
    docPositions:
    - 71
  cdomain: !ruby/object:Word
    word: cdomain
    stem: cdomain
    docFrequency: 2.0
    docPositions:
    - 71
  cpath: !ruby/object:Word
    word: cpath
    stem: cpath
    docFrequency: 2.0
    docPositions:
    - 71
  m: !ruby/object:Word
    word: m
    stem: m
    docFrequency: 5.0
    docPositions:
    - 71
    - 1537
  decodeuri: !ruby/object:Word
    word: decodeuri
    stem: decodeuri
    docFrequency: 2.0
    docPositions:
    - 71
  substring: !ruby/object:Word
    word: substring
    stem: substr
    docFrequency: 2.0
    docPositions:
    - 71
  set: !ruby/object:Word
    word: set
    stem: set
    docFrequency: 2.0
    docPositions:
    - 71
  expires: !ruby/object:Word
    word: expires
    stem: expir
    docFrequency: 2.0
    docPositions:
    - 71
  date: !ruby/object:Word
    word: date
    stem: date
    docFrequency: 8.0
    docPositions:
    - 71
    - 754
    - 1464
    - 1538
    - 1561
    - 1562
  gettime: !ruby/object:Word
    word: gettime
    stem: gettim
    docFrequency: 3.0
    docPositions:
    - 71
    - 1538
  togmtstring: !ruby/object:Word
    word: togmtstring
    stem: togmtstr
    docFrequency: 2.0
    docPositions:
    - 71
  enabled: !ruby/object:Word
    word: enabled
    stem: enabl
    docFrequency: 4.0
    docPositions:
    - 71
    - 1464
    - 1562
  'false': !ruby/object:Word
    word: 'false'
    stem: fals
    docFrequency: 5.0
    docPositions:
    - 71
    - 74
    - 1104
    - 1110
  div: !ruby/object:Word
    word: div
    stem: div
    docFrequency: 5.0
    docPositions:
    - 74
    - 1374
  id: !ruby/object:Word
    word: id
    stem: id
    docFrequency: 6.0
    docPositions:
    - 74
  prompt: !ruby/object:Word
    word: prompt
    stem: prompt
    docFrequency: 2.0
    docPositions:
    - 74
  class: !ruby/object:Word
    word: class
    stem: class
    docFrequency: 8.0
    docPositions:
    - 74
    - 1373
    - 1374
  w: !ruby/object:Word
    word: w
    stem: w
    docFrequency: 2.0
    docPositions:
    - 74
  cookies: !ruby/object:Word
    word: cookies
    stem: cooki
    docFrequency: 10.0
    docPositions:
    - 74
    - 1464
  website: !ruby/object:Word
    word: website
    stem: websit
    docFrequency: 5.0
    docPositions:
    - 74
  p: !ruby/object:Word
    word: p
    stem: p
    docFrequency: 3.0
    docPositions:
    - 74
    - 1374
  has: !ruby/object:Word
    word: has
    stem: ha
    docFrequency: 9.0
    docPositions:
    - 74
    - 787
    - 1247
    - 1561
  updated: !ruby/object:Word
    word: updated
    stem: updat
    docFrequency: 4.0
    docPositions:
    - 74
    - 87
    - 583
  its: !ruby/object:Word
    word: its
    stem: it
    docFrequency: 9.0
    docPositions:
    - 74
    - 698
    - 754
    - 787
    - 957
    - 1561
  policy: !ruby/object:Word
    word: policy
    stem: polici
    docFrequency: 2.0
    docPositions:
    - 74
  we: !ruby/object:Word
    word: we
    stem: we
    docFrequency: 18.0
    docPositions:
    - 74
    - 657
    - 698
    - 754
    - 787
    - 1561
  use: !ruby/object:Word
    word: use
    stem: us
    docFrequency: 7.0
    docPositions:
    - 74
    - 754
    - 1464
    - 1561
  ensure: !ruby/object:Word
    word: ensure
    stem: ensur
    docFrequency: 5.0
    docPositions:
    - 74
    - 787
    - 1561
  give: !ruby/object:Word
    word: give
    stem: give
    docFrequency: 2.0
    docPositions:
    - 74
  you: !ruby/object:Word
    word: you
    stem: you
    docFrequency: 14.0
    docPositions:
    - 74
    - 1464
    - 1562
  best: !ruby/object:Word
    word: best
    stem: best
    docFrequency: 4.0
    docPositions:
    - 74
    - 1464
    - 1562
  experience: !ruby/object:Word
    word: experience
    stem: experi
    docFrequency: 4.0
    docPositions:
    - 74
    - 1464
    - 1562
  our: !ruby/object:Word
    word: our
    stem: our
    docFrequency: 5.0
    docPositions:
    - 74
    - 787
    - 1561
  includes: !ruby/object:Word
    word: includes
    stem: includ
    docFrequency: 2.0
    docPositions:
    - 74
  third: !ruby/object:Word
    word: third
    stem: third
    docFrequency: 3.0
    docPositions:
    - 74
  party: !ruby/object:Word
    word: party
    stem: parti
    docFrequency: 3.0
    docPositions:
    - 74
  social: !ruby/object:Word
    word: social
    stem: social
    docFrequency: 3.0
    docPositions:
    - 74
  media: !ruby/object:Word
    word: media
    stem: media
    docFrequency: 9.0
    docPositions:
    - 74
    - 627
    - 668
    - 765
    - 1561
  websites: !ruby/object:Word
    word: websites
    stem: websit
    docFrequency: 2.0
    docPositions:
    - 74
  visit: !ruby/object:Word
    word: visit
    stem: visit
    docFrequency: 2.0
    docPositions:
    - 74
  which: !ruby/object:Word
    word: which
    stem: which
    docFrequency: 8.0
    docPositions:
    - 74
    - 698
    - 787
    - 1561
  contains: !ruby/object:Word
    word: contains
    stem: contain
    docFrequency: 2.0
    docPositions:
    - 74
  embedded: !ruby/object:Word
    word: embedded
    stem: embed
    docFrequency: 2.0
    docPositions:
    - 74
  content: !ruby/object:Word
    word: content
    stem: content
    docFrequency: 10.0
    docPositions:
    - 74
    - 1053
    - 1464
    - 1511
    - 1525
    - 1562
  such: !ruby/object:Word
    word: such
    stem: such
    docFrequency: 2.0
    docPositions:
    - 74
  may: !ruby/object:Word
    word: may
    stem: mai
    docFrequency: 2.0
    docPositions:
    - 74
  your: !ruby/object:Word
    word: your
    stem: your
    docFrequency: 9.0
    docPositions:
    - 74
    - 444
    - 1464
    - 1562
  span: !ruby/object:Word
    word: span
    stem: span
    docFrequency: 3.0
    docPositions:
    - 74
    - 1374
  international: !ruby/object:Word
    word: international
    stem: intern
    docFrequency: 3.0
    docPositions:
    - 74
    - 811
  message: !ruby/object:Word
    word: message
    stem: messag
    docFrequency: 6.0
    docPositions:
    - 74
    - 698
    - 754
    - 1561
  and: !ruby/object:Word
    word: and
    stem: and
    docFrequency: 39.0
    docPositions:
    - 74
    - 414
    - 657
    - 698
    - 754
    - 787
    - 867
    - 897
    - 1561
  partners: !ruby/object:Word
    word: partners
    stem: partner
    docFrequency: 2.0
    docPositions:
    - 74
  also: !ruby/object:Word
    word: also
    stem: also
    docFrequency: 4.0
    docPositions:
    - 74
    - 397
    - 843
  show: !ruby/object:Word
    word: show
    stem: show
    docFrequency: 6.0
    docPositions:
    - 74
    - 426
    - 827
    - 829
    - 842
  advertising: !ruby/object:Word
    word: advertising
    stem: advertis
    docFrequency: 2.0
    docPositions:
    - 74
  relevant: !ruby/object:Word
    word: relevant
    stem: relev
    docFrequency: 2.0
    docPositions:
    - 74
  continue: !ruby/object:Word
    word: continue
    stem: continu
    docFrequency: 6.0
    docPositions:
    - 74
  without: !ruby/object:Word
    word: without
    stem: without
    docFrequency: 2.0
    docPositions:
    - 74
  changing: !ruby/object:Word
    word: changing
    stem: chang
    docFrequency: 2.0
    docPositions:
    - 74
  settings: !ruby/object:Word
    word: settings
    stem: set
    docFrequency: 15.0
    docPositions:
    - 74
    - 637
    - 638
    - 639
    - 678
    - 679
    - 680
    - 698
    - 775
    - 776
    - 777
    - 1561
  ll: !ruby/object:Word
    word: ll
    stem: ll
    docFrequency: 2.0
    docPositions:
    - 74
  assume: !ruby/object:Word
    word: assume
    stem: assum
    docFrequency: 2.0
    docPositions:
    - 74
  happy: !ruby/object:Word
    word: happy
    stem: happi
    docFrequency: 2.0
    docPositions:
    - 74
  receive: !ruby/object:Word
    word: receive
    stem: receiv
    docFrequency: 2.0
    docPositions:
    - 74
  all: !ruby/object:Word
    word: all
    stem: all
    docFrequency: 11.0
    docPositions:
    - 74
    - 787
    - 1106
    - 1108
    - 1109
    - 1561
  however: !ruby/object:Word
    word: however
    stem: howev
    docFrequency: 2.0
    docPositions:
    - 74
  can: !ruby/object:Word
    word: can
    stem: can
    docFrequency: 6.0
    docPositions:
    - 74
    - 754
    - 1561
  privacy: !ruby/object:Word
    word: privacy
    stem: privaci
    docFrequency: 4.0
    docPositions:
    - 74
    - 1464
  managing: !ruby/object:Word
    word: managing
    stem: manag
    docFrequency: 2.0
    docPositions:
    - 74
  html: !ruby/object:Word
    word: html
    stem: html
    docFrequency: 6.0
    docPositions:
    - 74
    - 1369
    - 1370
    - 1371
    - 1374
  change: !ruby/object:Word
    word: change
    stem: chang
    docFrequency: 2.0
    docPositions:
    - 74
  any: !ruby/object:Word
    word: any
    stem: ani
    docFrequency: 6.0
    docPositions:
    - 74
    - 787
    - 1561
  time: !ruby/object:Word
    word: time
    stem: time
    docFrequency: 8.0
    docPositions:
    - 74
    - 657
    - 754
    - 787
    - 1561
  ul: !ruby/object:Word
    word: ul
    stem: ul
    docFrequency: 2.0
    docPositions:
    - 74
  li: !ruby/object:Word
    word: li
    stem: li
    docFrequency: 4.0
    docPositions:
    - 74
    - 1373
  button: !ruby/object:Word
    word: button
    stem: button
    docFrequency: 7.0
    docPositions:
    - 74
    - 425
    - 426
  type: !ruby/object:Word
    word: type
    stem: type
    docFrequency: 6.0
    docPositions:
    - 74
    - 1504
    - 1519
    - 1546
    - 1556
  more: !ruby/object:Word
    word: more
    stem: more
    docFrequency: 10.0
    docPositions:
    - 74
    - 698
    - 787
    - 1464
    - 1561
    - 1562
  find: !ruby/object:Word
    word: find
    stem: find
    docFrequency: 2.0
    docPositions:
    - 74
  out: !ruby/object:Word
    word: out
    stem: out
    docFrequency: 6.0
    docPositions:
    - 74
    - 698
    - 1561
  _showprompt: !ruby/object:Word
    word: _showprompt
    stem: _showprompt
    docFrequency: 2.0
    docPositions:
    - 74
  getelementbyid: !ruby/object:Word
    word: getelementbyid
    stem: getelementbyid
    docFrequency: 11.0
    docPositions:
    - 74
    - 1100
    - 1102
    - 1103
    - 1559
  blq: !ruby/object:Word
    word: blq
    stem: blq
    docFrequency: 8.0
    docPositions:
    - 74
    - 1559
    - 1560
  pre: !ruby/object:Word
    word: pre
    stem: pre
    docFrequency: 2.0
    docPositions:
    - 74
  mast: !ruby/object:Word
    word: mast
    stem: mast
    docFrequency: 2.0
    docPositions:
    - 74
  global: !ruby/object:Word
    word: global
    stem: global
    docFrequency: 2.0
    docPositions:
    - 74
  container: !ruby/object:Word
    word: container
    stem: contain
    docFrequency: 2.0
    docPositions:
    - 74
  c: !ruby/object:Word
    word: c
    stem: c
    docFrequency: 3.0
    docPositions:
    - 74
  tmpl: !ruby/object:Word
    word: tmpl
    stem: tmpl
    docFrequency: 2.0
    docPositions:
    - 74
  createelement: !ruby/object:Word
    word: createelement
    stem: createel
    docFrequency: 4.0
    docPositions:
    - 74
    - 1546
  innerhtml: !ruby/object:Word
    word: innerhtml
    stem: innerhtml
    docFrequency: 3.0
    docPositions:
    - 74
  insertbefore: !ruby/object:Word
    word: insertbefore
    stem: insertbefor
    docFrequency: 4.0
    docPositions:
    - 74
    - 1548
  onclick: !ruby/object:Word
    word: onclick
    stem: onclick
    docFrequency: 2.0
    docPositions:
    - 74
  parentnode: !ruby/object:Word
    word: parentnode
    stem: parentnod
    docFrequency: 3.0
    docPositions:
    - 74
    - 1548
  removechild: !ruby/object:Word
    word: removechild
    stem: removechild
    docFrequency: 2.0
    docPositions:
    - 74
  _setpolicy: !ruby/object:Word
    word: _setpolicy
    stem: _setpolici
    docFrequency: 2.0
    docPositions:
    - 74
  readpolicy: !ruby/object:Word
    word: readpolicy
    stem: readpolici
    docFrequency: 2.0
    docPositions:
    - 74
  british: !ruby/object:Word
    word: british
    stem: british
    docFrequency: 8.0
    docPositions:
    - 74
    - 651
    - 657
    - 1030
    - 1561
  broadcasting: !ruby/object:Word
    word: broadcasting
    stem: broadcast
    docFrequency: 3.0
    docPositions:
    - 74
    - 1561
  corporationhome: !ruby/object:Word
    word: corporationhome
    stem: corporationhom
    docFrequency: 3.0
    docPositions:
    - 74
    - 1561
  accessibility: !ruby/object:Word
    word: accessibility
    stem: access
    docFrequency: 5.0
    docPositions:
    - 74
    - 1464
    - 1561
  links: !ruby/object:Word
    word: links
    stem: link
    docFrequency: 4.0
    docPositions:
    - 74
    - 1008
    - 1464
  skip: !ruby/object:Word
    word: skip
    stem: skip
    docFrequency: 6.0
    docPositions:
    - 74
    - 1407
  local: !ruby/object:Word
    word: local
    stem: local
    docFrequency: 3.0
    docPositions:
    - 74
    - 1464
  navigation: !ruby/object:Word
    word: navigation
    stem: navig
    docFrequency: 4.0
    docPositions:
    - 74
    - 1464
  co: !ruby/object:Word
    word: co
    stem: co
    docFrequency: 10.0
    docPositions:
    - 74
    - 1363
    - 1364
    - 1365
    - 1366
    - 1367
    - 1368
    - 1493
  search: !ruby/object:Word
    word: search
    stem: search
    docFrequency: 6.0
    docPositions:
    - 74
    - 1078
    - 1464
    - 1560
    - 1562
  help: !ruby/object:Word
    word: help
    stem: help
    docFrequency: 3.0
    docPositions:
    - 74
    - 1464
  every: !ruby/object:Word
    word: every
    stem: everi
    docFrequency: 5.0
    docPositions:
    - 87
    - 754
    - 1561
  minute: !ruby/object:Word
    word: minute
    stem: minut
    docFrequency: 5.0
    docPositions:
    - 87
    - 116
    - 1164
    - 1370
  day: !ruby/object:Word
    word: day
    stem: dai
    docFrequency: 5.0
    docPositions:
    - 87
    - 524
    - 657
    - 1561
  one: !ruby/object:Word
    word: one
    stem: 'on'
    docFrequency: 6.0
    docPositions:
    - 116
    - 657
    - 957
    - 1164
    - 1561
  world: !ruby/object:Word
    word: world
    stem: world
    docFrequency: 22.0
    docPositions:
    - 116
    - 526
    - 651
    - 657
    - 692
    - 754
    - 781
    - 787
    - 1164
    - 1291
    - 1365
    - 1561
  front: !ruby/object:Word
    word: front
    stem: front
    docFrequency: 2.0
    docPositions:
    - 173
  africa: !ruby/object:Word
    word: africa
    stem: africa
    docFrequency: 3.0
    docPositions:
    - 191
    - 1364
  americas: !ruby/object:Word
    word: americas
    stem: america
    docFrequency: 2.0
    docPositions:
    - 208
  asia: !ruby/object:Word
    word: asia
    stem: asia
    docFrequency: 3.0
    docPositions:
    - 225
    - 276
  pacific: !ruby/object:Word
    word: pacific
    stem: pacif
    docFrequency: 2.0
    docPositions:
    - 225
  europe: !ruby/object:Word
    word: europe
    stem: europ
    docFrequency: 7.0
    docPositions:
    - 242
    - 657
    - 1365
    - 1368
    - 1561
  middle: !ruby/object:Word
    word: middle
    stem: middl
    docFrequency: 2.0
    docPositions:
    - 259
  east: !ruby/object:Word
    word: east
    stem: east
    docFrequency: 2.0
    docPositions:
    - 259
  south: !ruby/object:Word
    word: south
    stem: south
    docFrequency: 2.0
    docPositions:
    - 276
  business: !ruby/object:Word
    word: business
    stem: busi
    docFrequency: 2.0
    docPositions:
    - 310
  health: !ruby/object:Word
    word: health
    stem: health
    docFrequency: 2.0
    docPositions:
    - 327
  science: !ruby/object:Word
    word: science
    stem: scienc
    docFrequency: 2.0
    docPositions:
    - 344
  environment: !ruby/object:Word
    word: environment
    stem: environ
    docFrequency: 2.0
    docPositions:
    - 344
  technology: !ruby/object:Word
    word: technology
    stem: technolog
    docFrequency: 16.0
    docPositions:
    - 360
    - 811
    - 856
    - 871
    - 886
    - 901
    - 916
    - 931
    - 946
    - 961
    - 976
    - 991
    - 1064
    - 1090
    - 1493
  entertainment: !ruby/object:Word
    word: entertainment
    stem: entertain
    docFrequency: 2.0
    docPositions:
    - 380
  video: !ruby/object:Word
    word: video
    stem: video
    docFrequency: 2.0
    docPositions:
    - 414
  audio: !ruby/object:Word
    word: audio
    stem: audio
    docFrequency: 2.0
    docPositions:
    - 414
  write: !ruby/object:Word
    word: write
    stem: write
    docFrequency: 10.0
    docPositions:
    - 425
    - 825
    - 841
    - 1373
    - 1374
    - 1483
    - 1504
    - 1519
    - 1556
  programmes: !ruby/object:Word
    word: programmes
    stem: programm
    docFrequency: 2.0
    docPositions:
    - 427
  have: !ruby/object:Word
    word: have
    stem: have
    docFrequency: 8.0
    docPositions:
    - 444
    - 657
    - 754
    - 787
    - 1561
  say: !ruby/object:Word
    word: say
    stem: sai
    docFrequency: 2.0
    docPositions:
    - 444
  pictures: !ruby/object:Word
    word: pictures
    stem: pictur
    docFrequency: 3.0
    docPositions:
    - 461
    - 1367
  country: !ruby/object:Word
    word: country
    stem: countri
    docFrequency: 2.0
    docPositions:
    - 478
  profiles: !ruby/object:Word
    word: profiles
    stem: profil
    docFrequency: 2.0
    docPositions:
    - 478
  special: !ruby/object:Word
    word: special
    stem: special
    docFrequency: 2.0
    docPositions:
    - 495
  reports: !ruby/object:Word
    word: reports
    stem: report
    docFrequency: 2.0
    docPositions:
    - 495
  related: !ruby/object:Word
    word: related
    stem: relat
    docFrequency: 3.0
    docPositions:
    - 521
    - 1008
  sites: !ruby/object:Word
    word: sites
    stem: site
    docFrequency: 5.0
    docPositions:
    - 521
    - 1053
    - 1464
    - 1562
  editors: !ruby/object:Word
    word: editors
    stem: editor
    docFrequency: 2.0
    docPositions:
    - 525
  blog: !ruby/object:Word
    word: blog
    stem: blog
    docFrequency: 2.0
    docPositions:
    - 525
  service: !ruby/object:Word
    word: service
    stem: servic
    docFrequency: 3.0
    docPositions:
    - 526
    - 972
  last: !ruby/object:Word
    word: last
    stem: last
    docFrequency: 3.0
    docPositions:
    - 583
    - 1370
  gmt: !ruby/object:Word
    word: gmt
    stem: gmt
    docFrequency: 2.0
    docPositions:
    - 583
  tuesday: !ruby/object:Word
    word: tuesday
    stem: tuesdai
    docFrequency: 2.0
    docPositions:
    - 583
  february: !ruby/object:Word
    word: february
    stem: februari
    docFrequency: 3.0
    docPositions:
    - 583
    - 720
  mail: !ruby/object:Word
    word: mail
    stem: mail
    docFrequency: 4.0
    docPositions:
    - 592
    - 815
    - 1410
  friend: !ruby/object:Word
    word: friend
    stem: friend
    docFrequency: 3.0
    docPositions:
    - 592
    - 815
  printable: !ruby/object:Word
    word: printable
    stem: printabl
    docFrequency: 3.0
    docPositions:
    - 596
    - 819
  version: !ruby/object:Word
    word: version
    stem: version
    docFrequency: 3.0
    docPositions:
    - 596
    - 819
  bletchley: !ruby/object:Word
    word: bletchley
    stem: bletchlei
    docFrequency: 16.0
    docPositions:
    - 611
    - 657
    - 698
    - 754
    - 987
    - 1016
    - 1561
  s: !ruby/object:Word
    word: s
    stem: s
    docFrequency: 27.0
    docPositions:
    - 611
    - 651
    - 657
    - 692
    - 698
    - 912
    - 942
    - 1247
    - 1291
    - 1548
    - 1561
  code: !ruby/object:Word
    word: code
    stem: code
    docFrequency: 17.0
    docPositions:
    - 611
    - 657
    - 698
    - 781
    - 897
    - 1561
  cracking: !ruby/object:Word
    word: cracking
    stem: crack
    docFrequency: 9.0
    docPositions:
    - 611
    - 657
    - 698
    - 754
    - 897
    - 1561
  colossus: !ruby/object:Word
    word: colossus
    stem: colossu
    docFrequency: 27.0
    docPositions:
    - 611
    - 651
    - 657
    - 692
    - 708
    - 714
    - 754
    - 787
    - 1044
    - 1561
  please: !ruby/object:Word
    word: please
    stem: pleas
    docFrequency: 8.0
    docPositions:
    - 627
    - 668
    - 765
    - 1464
    - 1561
    - 1562
  turn: !ruby/object:Word
    word: turn
    stem: turn
    docFrequency: 7.0
    docPositions:
    - 627
    - 668
    - 765
    - 1561
  requires: !ruby/object:Word
    word: requires
    stem: requir
    docFrequency: 7.0
    docPositions:
    - 627
    - 668
    - 765
    - 1561
  play: !ruby/object:Word
    word: play
    stem: plai
    docFrequency: 9.0
    docPositions:
    - 627
    - 657
    - 668
    - 765
    - 1561
  empid: !ruby/object:Word
    word: empid
    stem: empid
    docFrequency: 10.0
    docPositions:
    - 636
    - 638
    - 639
    - 677
    - 679
    - 680
    - 774
    - 776
    - 777
  fmtj: !ruby/object:Word
    word: fmtj
    stem: fmtj
    docFrequency: 7.0
    docPositions:
    - 638
    - 639
    - 679
    - 680
    - 776
    - 777
  av: !ruby/object:Word
    word: av
    stem: av
    docFrequency: 7.0
    docPositions:
    - 638
    - 639
    - 679
    - 680
    - 776
    - 777
  emp: !ruby/object:Word
    word: emp
    stem: emp
    docFrequency: 7.0
    docPositions:
    - 638
    - 639
    - 679
    - 680
    - 776
    - 777
  getplayersettings: !ruby/object:Word
    word: getplayersettings
    stem: getplayerset
    docFrequency: 4.0
    docPositions:
    - 638
    - 679
    - 776
  registerplayer: !ruby/object:Word
    word: registerplayer
    stem: registerplay
    docFrequency: 4.0
    docPositions:
    - 639
    - 680
    - 777
  advertisement: !ruby/object:Word
    word: advertisement
    stem: advertis
    docFrequency: 3.0
    docPositions:
    - 646
    - 687
  retired: !ruby/object:Word
    word: retired
    stem: retir
    docFrequency: 3.0
    docPositions:
    - 651
    - 1561
  spy: !ruby/object:Word
    word: spy
    stem: spy
    docFrequency: 3.0
    docPositions:
    - 651
    - 1561
  catcher: !ruby/object:Word
    word: catcher
    stem: catcher
    docFrequency: 3.0
    docPositions:
    - 651
    - 1561
  tony: !ruby/object:Word
    word: tony
    stem: toni
    docFrequency: 6.0
    docPositions:
    - 651
    - 754
    - 1037
    - 1561
  sale: !ruby/object:Word
    word: sale
    stem: sale
    docFrequency: 8.0
    docPositions:
    - 651
    - 754
    - 1037
    - 1561
  rebuilt: !ruby/object:Word
    word: rebuilt
    stem: rebuilt
    docFrequency: 3.0
    docPositions:
    - 651
    - 1561
  first: !ruby/object:Word
    word: first
    stem: first
    docFrequency: 10.0
    docPositions:
    - 651
    - 657
    - 720
    - 787
    - 1561
  programmable: !ruby/object:Word
    word: programmable
    stem: programm
    docFrequency: 9.0
    docPositions:
    - 651
    - 657
    - 787
    - 1561
  electronic: !ruby/object:Word
    word: electronic
    stem: electron
    docFrequency: 9.0
    docPositions:
    - 651
    - 657
    - 787
    - 1561
  computer: !ruby/object:Word
    word: computer
    stem: comput
    docFrequency: 23.0
    docPositions:
    - 651
    - 657
    - 692
    - 740
    - 754
    - 787
    - 852
    - 912
    - 942
    - 1561
  large: !ruby/object:Word
    word: large
    stem: larg
    docFrequency: 5.0
    docPositions:
    - 657
    - 1561
  scale: !ruby/object:Word
    word: scale
    stem: scale
    docFrequency: 5.0
    docPositions:
    - 657
    - 1561
  created: !ruby/object:Word
    word: created
    stem: creat
    docFrequency: 5.0
    docPositions:
    - 657
    - 1561
  do: !ruby/object:Word
    word: do
    stem: do
    docFrequency: 5.0
    docPositions:
    - 657
    - 1464
    - 1561
    - 1562
  job: !ruby/object:Word
    word: job
    stem: job
    docFrequency: 3.0
    docPositions:
    - 657
    - 1561
  crack: !ruby/object:Word
    word: crack
    stem: crack
    docFrequency: 13.0
    docPositions:
    - 657
    - 698
    - 1561
  hitler: !ruby/object:Word
    word: hitler
    stem: hitler
    docFrequency: 11.0
    docPositions:
    - 657
    - 692
    - 1561
  codes: !ruby/object:Word
    word: codes
    stem: code
    docFrequency: 13.0
    docPositions:
    - 657
    - 754
    - 1561
  engineers: !ruby/object:Word
    word: engineers
    stem: engin
    docFrequency: 3.0
    docPositions:
    - 657
    - 1561
  crackers: !ruby/object:Word
    word: crackers
    stem: cracker
    docFrequency: 5.0
    docPositions:
    - 657
    - 698
    - 1561
  describe: !ruby/object:Word
    word: describe
    stem: describ
    docFrequency: 3.0
    docPositions:
    - 657
    - 1561
  life: !ruby/object:Word
    word: life
    stem: life
    docFrequency: 5.0
    docPositions:
    - 657
    - 754
    - 1561
  working: !ruby/object:Word
    word: working
    stem: work
    docFrequency: 5.0
    docPositions:
    - 657
    - 754
    - 1561
  series: !ruby/object:Word
    word: series
    stem: seri
    docFrequency: 3.0
    docPositions:
    - 657
    - 1561
  pioneers: !ruby/object:Word
    word: pioneers
    stem: pioneer
    docFrequency: 4.0
    docPositions:
    - 657
    - 912
    - 1561
  june: !ruby/object:Word
    word: june
    stem: june
    docFrequency: 3.0
    docPositions:
    - 657
    - 1561
  allies: !ruby/object:Word
    word: allies
    stem: alli
    docFrequency: 15.0
    docPositions:
    - 657
    - 698
    - 1561
  were: !ruby/object:Word
    word: were
    stem: were
    docFrequency: 16.0
    docPositions:
    - 657
    - 698
    - 754
    - 787
    - 1370
    - 1561
  debating: !ruby/object:Word
    word: debating
    stem: debat
    docFrequency: 3.0
    docPositions:
    - 657
    - 1561
  go: !ruby/object:Word
    word: go
    stem: go
    docFrequency: 3.0
    docPositions:
    - 657
    - 1561
  ahead: !ruby/object:Word
    word: ahead
    stem: ahead
    docFrequency: 3.0
    docPositions:
    - 657
    - 1561
  invasion: !ruby/object:Word
    word: invasion
    stem: invas
    docFrequency: 3.0
    docPositions:
    - 657
    - 1561
  eisenhower: !ruby/object:Word
    word: eisenhower
    stem: eisenhow
    docFrequency: 3.0
    docPositions:
    - 657
    - 1561
  decision: !ruby/object:Word
    word: decision
    stem: decis
    docFrequency: 5.0
    docPositions:
    - 657
    - 754
    - 1561
  directly: !ruby/object:Word
    word: directly
    stem: directli
    docFrequency: 3.0
    docPositions:
    - 657
    - 1561
  influenced: !ruby/object:Word
    word: influenced
    stem: influenc
    docFrequency: 3.0
    docPositions:
    - 657
    - 1561
  information: !ruby/object:Word
    word: information
    stem: inform
    docFrequency: 3.0
    docPositions:
    - 657
    - 1561
  revealed: !ruby/object:Word
    word: revealed
    stem: reveal
    docFrequency: 3.0
    docPositions:
    - 657
    - 1561
  machine: !ruby/object:Word
    word: machine
    stem: machin
    docFrequency: 18.0
    docPositions:
    - 657
    - 698
    - 754
    - 787
    - 1133
    - 1561
  messages: !ruby/object:Word
    word: messages
    stem: messag
    docFrequency: 23.0
    docPositions:
    - 657
    - 692
    - 698
    - 781
    - 1561
  decoded: !ruby/object:Word
    word: decoded
    stem: decod
    docFrequency: 3.0
    docPositions:
    - 657
    - 1561
  discovered: !ruby/object:Word
    word: discovered
    stem: discov
    docFrequency: 3.0
    docPositions:
    - 657
    - 1561
  trick: !ruby/object:Word
    word: trick
    stem: trick
    docFrequency: 3.0
    docPositions:
    - 657
    - 1561
  sought: !ruby/object:Word
    word: sought
    stem: sought
    docFrequency: 3.0
    docPositions:
    - 657
    - 1561
  germans: !ruby/object:Word
    word: germans
    stem: german
    docFrequency: 7.0
    docPositions:
    - 657
    - 698
    - 1561
  had: !ruby/object:Word
    word: had
    stem: had
    docFrequency: 16.0
    docPositions:
    - 657
    - 698
    - 754
    - 787
    - 1365
    - 1561
  worked: !ruby/object:Word
    word: worked
    stem: work
    docFrequency: 9.0
    docPositions:
    - 657
    - 698
    - 787
    - 1561
  convinced: !ruby/object:Word
    word: convinced
    stem: convinc
    docFrequency: 3.0
    docPositions:
    - 657
    - 1561
  would: !ruby/object:Word
    word: would
    stem: would
    docFrequency: 7.0
    docPositions:
    - 657
    - 787
    - 1561
  land: !ruby/object:Word
    word: land
    stem: land
    docFrequency: 3.0
    docPositions:
    - 657
    - 1561
  near: !ruby/object:Word
    word: near
    stem: near
    docFrequency: 4.0
    docPositions:
    - 657
    - 1172
    - 1561
  calais: !ruby/object:Word
    word: calais
    stem: calai
    docFrequency: 3.0
    docPositions:
    - 657
    - 1561
  kept: !ruby/object:Word
    word: kept
    stem: kept
    docFrequency: 5.0
    docPositions:
    - 657
    - 754
    - 1561
  two: !ruby/object:Word
    word: two
    stem: two
    docFrequency: 5.0
    docPositions:
    - 657
    - 698
    - 1561
  divisions: !ruby/object:Word
    word: divisions
    stem: divis
    docFrequency: 3.0
    docPositions:
    - 657
    - 1561
  holland: !ruby/object:Word
    word: holland
    stem: holland
    docFrequency: 3.0
    docPositions:
    - 657
    - 1561
  belgium: !ruby/object:Word
    word: belgium
    stem: belgium
    docFrequency: 3.0
    docPositions:
    - 657
    - 1561
  counter: !ruby/object:Word
    word: counter
    stem: counter
    docFrequency: 3.0
    docPositions:
    - 657
    - 1561
  phantom: !ruby/object:Word
    word: phantom
    stem: phantom
    docFrequency: 3.0
    docPositions:
    - 657
    - 1561
  attack: !ruby/object:Word
    word: attack
    stem: attack
    docFrequency: 4.0
    docPositions:
    - 657
    - 1127
    - 1561
  meant: !ruby/object:Word
    word: meant
    stem: meant
    docFrequency: 3.0
    docPositions:
    - 657
    - 1561
  muster: !ruby/object:Word
    word: muster
    stem: muster
    docFrequency: 3.0
    docPositions:
    - 657
    - 1561
  their: !ruby/object:Word
    word: their
    stem: their
    docFrequency: 5.0
    docPositions:
    - 657
    - 787
    - 1561
  troops: !ruby/object:Word
    word: troops
    stem: troop
    docFrequency: 3.0
    docPositions:
    - 657
    - 1561
  beach: !ruby/object:Word
    word: beach
    stem: beach
    docFrequency: 3.0
    docPositions:
    - 657
    - 1561
  following: !ruby/object:Word
    word: following
    stem: follow
    docFrequency: 5.0
    docPositions:
    - 657
    - 698
    - 1561
  landings: !ruby/object:Word
    word: landings
    stem: land
    docFrequency: 3.0
    docPositions:
    - 657
    - 1561
  dig: !ruby/object:Word
    word: dig
    stem: dig
    docFrequency: 3.0
    docPositions:
    - 657
    - 1561
  before: !ruby/object:Word
    word: before
    stem: befor
    docFrequency: 5.0
    docPositions:
    - 657
    - 698
    - 1561
  reinforcements: !ruby/object:Word
    word: reinforcements
    stem: reinforc
    docFrequency: 3.0
    docPositions:
    - 657
    - 1561
  could: !ruby/object:Word
    word: could
    stem: could
    docFrequency: 3.0
    docPositions:
    - 657
    - 1561
  arrive: !ruby/object:Word
    word: arrive
    stem: arriv
    docFrequency: 3.0
    docPositions:
    - 657
    - 1561
  human: !ruby/object:Word
    word: human
    stem: human
    docFrequency: 8.0
    docPositions:
    - 657
    - 698
    - 1085
    - 1561
  errorcolossus: !ruby/object:Word
    word: errorcolossus
    stem: errorcolossu
    docFrequency: 3.0
    docPositions:
    - 657
    - 1561
  conceal: !ruby/object:Word
    word: conceal
    stem: conceal
    docFrequency: 3.0
    docPositions:
    - 657
    - 1561
  generals: !ruby/object:Word
    word: generals
    stem: gener
    docFrequency: 7.0
    docPositions:
    - 657
    - 692
    - 1561
  sending: !ruby/object:Word
    word: sending
    stem: send
    docFrequency: 3.0
    docPositions:
    - 657
    - 1561
  each: !ruby/object:Word
    word: each
    stem: each
    docFrequency: 3.0
    docPositions:
    - 657
    - 1561
  other: !ruby/object:Word
    word: other
    stem: other
    docFrequency: 5.0
    docPositions:
    - 657
    - 754
    - 1561
  developed: !ruby/object:Word
    word: developed
    stem: develop
    docFrequency: 3.0
    docPositions:
    - 657
    - 1561
  park: !ruby/object:Word
    word: park
    stem: park
    docFrequency: 5.0
    docPositions:
    - 657
    - 987
    - 1016
    - 1561
  site: !ruby/object:Word
    word: site
    stem: site
    docFrequency: 9.0
    docPositions:
    - 657
    - 811
    - 1369
    - 1371
    - 1381
    - 1464
    - 1561
    - 1562
  government: !ruby/object:Word
    word: government
    stem: govern
    docFrequency: 4.0
    docPositions:
    - 657
    - 1363
    - 1561
  cipher: !ruby/object:Word
    word: cipher
    stem: cipher
    docFrequency: 3.0
    docPositions:
    - 657
    - 1561
  school: !ruby/object:Word
    word: school
    stem: school
    docFrequency: 4.0
    docPositions:
    - 657
    - 1127
    - 1561
  'no': !ruby/object:Word
    word: 'no'
    stem: 'no'
    docFrequency: 5.0
    docPositions:
    - 657
    - 698
    - 1561
  doubt: !ruby/object:Word
    word: doubt
    stem: doubt
    docFrequency: 3.0
    docPositions:
    - 657
    - 1561
  important: !ruby/object:Word
    word: important
    stem: import
    docFrequency: 3.0
    docPositions:
    - 657
    - 1561
  said: !ruby/object:Word
    word: said
    stem: said
    docFrequency: 23.0
    docPositions:
    - 657
    - 698
    - 754
    - 787
    - 1561
  captain: !ruby/object:Word
    word: captain
    stem: captain
    docFrequency: 9.0
    docPositions:
    - 657
    - 698
    - 1561
  jerry: !ruby/object:Word
    word: jerry
    stem: jerri
    docFrequency: 7.0
    docPositions:
    - 657
    - 692
    - 781
    - 1561
  roberts: !ruby/object:Word
    word: roberts
    stem: robert
    docFrequency: 15.0
    docPositions:
    - 657
    - 692
    - 698
    - 781
    - 787
    - 1561
  sole: !ruby/object:Word
    word: sole
    stem: sole
    docFrequency: 3.0
    docPositions:
    - 657
    - 1561
  surviving: !ruby/object:Word
    word: surviving
    stem: surviv
    docFrequency: 3.0
    docPositions:
    - 657
    - 1561
  member: !ruby/object:Word
    word: member
    stem: member
    docFrequency: 3.0
    docPositions:
    - 657
    - 1561
  unit: !ruby/object:Word
    word: unit
    stem: unit
    docFrequency: 3.0
    docPositions:
    - 657
    - 1561
  called: !ruby/object:Word
    word: called
    stem: call
    docFrequency: 3.0
    docPositions:
    - 657
    - 1561
  testery: !ruby/object:Word
    word: testery
    stem: testeri
    docFrequency: 3.0
    docPositions:
    - 657
    - 1561
  saw: !ruby/object:Word
    word: saw
    stem: saw
    docFrequency: 5.0
    docPositions:
    - 657
    - 698
    - 1561
  number: !ruby/object:Word
    word: number
    stem: number
    docFrequency: 3.0
    docPositions:
    - 657
    - 1561
  signed: !ruby/object:Word
    word: signed
    stem: sign
    docFrequency: 3.0
    docPositions:
    - 657
    - 1561
  adolf: !ruby/object:Word
    word: adolf
    stem: adolf
    docFrequency: 3.0
    docPositions:
    - 657
    - 1561
  himself: !ruby/object:Word
    word: himself
    stem: himself
    docFrequency: 3.0
    docPositions:
    - 657
    - 1561
  breakers: !ruby/object:Word
    word: breakers
    stem: breaker
    docFrequency: 3.0
    docPositions:
    - 657
    - 1561
  been: !ruby/object:Word
    word: been
    stem: been
    docFrequency: 3.0
    docPositions:
    - 657
    - 1561
  seeing: !ruby/object:Word
    word: seeing
    stem: see
    docFrequency: 3.0
    docPositions:
    - 657
    - 1561
  sent: !ruby/object:Word
    word: sent
    stem: sent
    docFrequency: 9.0
    docPositions:
    - 657
    - 692
    - 698
    - 1561
  german: !ruby/object:Word
    word: german
    stem: german
    docFrequency: 7.0
    docPositions:
    - 657
    - 698
    - 781
    - 1561
  since: !ruby/object:Word
    word: since
    stem: sinc
    docFrequency: 3.0
    docPositions:
    - 657
    - 1561
  early: !ruby/object:Word
    word: early
    stem: earli
    docFrequency: 6.0
    docPositions:
    - 657
    - 698
    - 1030
    - 1561
  days: !ruby/object:Word
    word: days
    stem: dai
    docFrequency: 5.0
    docPositions:
    - 657
    - 754
    - 1561
  war: !ruby/object:Word
    word: war
    stem: war
    docFrequency: 11.0
    docPositions:
    - 657
    - 692
    - 754
    - 781
    - 787
    - 1561
  during: !ruby/object:Word
    word: during
    stem: dure
    docFrequency: 3.0
    docPositions:
    - 692
    - 1561
  decipher: !ruby/object:Word
    word: decipher
    stem: deciph
    docFrequency: 3.0
    docPositions:
    - 692
    - 1561
  suspect: !ruby/object:Word
    word: suspect
    stem: suspect
    docFrequency: 3.0
    docPositions:
    - 698
    - 1561
  sometimes: !ruby/object:Word
    word: sometimes
    stem: sometim
    docFrequency: 3.0
    docPositions:
    - 698
    - 1561
  genuinely: !ruby/object:Word
    word: genuinely
    stem: genuin
    docFrequency: 3.0
    docPositions:
    - 698
    - 1561
  blessed: !ruby/object:Word
    word: blessed
    stem: bless
    docFrequency: 3.0
    docPositions:
    - 698
    - 1561
  scramble: !ruby/object:Word
    word: scramble
    stem: scrambl
    docFrequency: 3.0
    docPositions:
    - 698
    - 1561
  encipher: !ruby/object:Word
    word: encipher
    stem: enciph
    docFrequency: 3.0
    docPositions:
    - 698
    - 1561
  lorenz: !ruby/object:Word
    word: lorenz
    stem: lorenz
    docFrequency: 7.0
    docPositions:
    - 698
    - 1561
  sz: !ruby/object:Word
    word: sz
    stem: sz
    docFrequency: 3.0
    docPositions:
    - 698
    - 1561
  coding: !ruby/object:Word
    word: coding
    stem: code
    docFrequency: 3.0
    docPositions:
    - 698
    - 1561
  known: !ruby/object:Word
    word: known
    stem: known
    docFrequency: 5.0
    docPositions:
    - 698
    - 1561
  tunny: !ruby/object:Word
    word: tunny
    stem: tunni
    docFrequency: 3.0
    docPositions:
    - 698
    - 1561
  advanced: !ruby/object:Word
    word: advanced
    stem: advanc
    docFrequency: 3.0
    docPositions:
    - 698
    - 1561
  than: !ruby/object:Word
    word: than
    stem: than
    docFrequency: 5.0
    docPositions:
    - 698
    - 787
    - 1561
  well: !ruby/object:Word
    word: well
    stem: well
    docFrequency: 3.0
    docPositions:
    - 698
    - 1561
  enigma: !ruby/object:Word
    word: enigma
    stem: enigma
    docFrequency: 5.0
    docPositions:
    - 698
    - 1561
  captured: !ruby/object:Word
    word: captured
    stem: captur
    docFrequency: 3.0
    docPositions:
    - 698
    - 1561
  examples: !ruby/object:Word
    word: examples
    stem: exampl
    docFrequency: 3.0
    docPositions:
    - 698
    - 1561
  try: !ruby/object:Word
    word: try
    stem: try
    docFrequency: 3.0
    docPositions:
    - 698
    - 1561
  techniques: !ruby/object:Word
    word: techniques
    stem: techniqu
    docFrequency: 3.0
    docPositions:
    - 698
    - 1561
  but: !ruby/object:Word
    word: but
    stem: but
    docFrequency: 11.0
    docPositions:
    - 698
    - 754
    - 787
    - 1561
  they: !ruby/object:Word
    word: they
    stem: thei
    docFrequency: 9.0
    docPositions:
    - 698
    - 754
    - 787
    - 1561
  able: !ruby/object:Word
    word: able
    stem: abl
    docFrequency: 9.0
    docPositions:
    - 698
    - 1464
    - 1561
    - 1562
  thanks: !ruby/object:Word
    word: thanks
    stem: thank
    docFrequency: 3.0
    docPositions:
    - 698
    - 1561
  error: !ruby/object:Word
    word: error
    stem: error
    docFrequency: 3.0
    docPositions:
    - 698
    - 1561
  august: !ruby/object:Word
    word: august
    stem: august
    docFrequency: 3.0
    docPositions:
    - 698
    - 1561
  operator: !ruby/object:Word
    word: operator
    stem: oper
    docFrequency: 3.0
    docPositions:
    - 698
    - 1561
  character: !ruby/object:Word
    word: character
    stem: charact
    docFrequency: 3.0
    docPositions:
    - 698
    - 1561
  twice: !ruby/object:Word
    word: twice
    stem: twice
    docFrequency: 5.0
    docPositions:
    - 698
    - 787
    - 1561
  made: !ruby/object:Word
    word: made
    stem: made
    docFrequency: 5.0
    docPositions:
    - 698
    - 1561
  cardinal: !ruby/object:Word
    word: cardinal
    stem: cardin
    docFrequency: 3.0
    docPositions:
    - 698
    - 1561
  sin: !ruby/object:Word
    word: sin
    stem: sin
    docFrequency: 3.0
    docPositions:
    - 698
    - 1561
  using: !ruby/object:Word
    word: using
    stem: us
    docFrequency: 3.0
    docPositions:
    - 698
    - 1561
  same: !ruby/object:Word
    word: same
    stem: same
    docFrequency: 3.0
    docPositions:
    - 698
    - 1561
  small: !ruby/object:Word
    word: small
    stem: small
    docFrequency: 3.0
    docPositions:
    - 698
    - 1561
  changes: !ruby/object:Word
    word: changes
    stem: chang
    docFrequency: 3.0
    docPositions:
    - 698
    - 1561
  re: !ruby/object:Word
    word: re
    stem: re
    docFrequency: 7.0
    docPositions:
    - 698
    - 754
    - 1561
  text: !ruby/object:Word
    word: text
    stem: text
    docFrequency: 10.0
    docPositions:
    - 698
    - 1373
    - 1504
    - 1519
    - 1546
    - 1556
    - 1561
  described: !ruby/object:Word
    word: described
    stem: describ
    docFrequency: 3.0
    docPositions:
    - 698
    - 1561
  outstanding: !ruby/object:Word
    word: outstanding
    stem: outstand
    docFrequency: 3.0
    docPositions:
    - 698
    - 1561
  mental: !ruby/object:Word
    word: mental
    stem: mental
    docFrequency: 3.0
    docPositions:
    - 698
    - 1561
  feat: !ruby/object:Word
    word: feat
    stem: feat
    docFrequency: 3.0
    docPositions:
    - 698
    - 1561
  century: !ruby/object:Word
    word: century
    stem: centuri
    docFrequency: 3.0
    docPositions:
    - 698
    - 1561
  mathematician: !ruby/object:Word
    word: mathematician
    stem: mathematician
    docFrequency: 3.0
    docPositions:
    - 698
    - 1561
  bill: !ruby/object:Word
    word: bill
    stem: bill
    docFrequency: 4.0
    docPositions:
    - 698
    - 723
    - 1561
  tutte: !ruby/object:Word
    word: tutte
    stem: tutt
    docFrequency: 5.0
    docPositions:
    - 698
    - 1561
  work: !ruby/object:Word
    word: work
    stem: work
    docFrequency: 7.0
    docPositions:
    - 698
    - 754
    - 1561
  enciphered: !ruby/object:Word
    word: enciphered
    stem: enciph
    docFrequency: 3.0
    docPositions:
    - 698
    - 1561
  see: !ruby/object:Word
    word: see
    stem: see
    docFrequency: 4.0
    docPositions:
    - 698
    - 843
    - 1561
  him: !ruby/object:Word
    word: him
    stem: him
    docFrequency: 3.0
    docPositions:
    - 698
    - 1561
  twiddling: !ruby/object:Word
    word: twiddling
    stem: twiddl
    docFrequency: 3.0
    docPositions:
    - 698
    - 1561
  his: !ruby/object:Word
    word: his
    stem: hi
    docFrequency: 9.0
    docPositions:
    - 698
    - 754
    - 787
    - 1561
  pencil: !ruby/object:Word
    word: pencil
    stem: pencil
    docFrequency: 3.0
    docPositions:
    - 698
    - 1561
  staring: !ruby/object:Word
    word: staring
    stem: stare
    docFrequency: 3.0
    docPositions:
    - 698
    - 1561
  into: !ruby/object:Word
    word: into
    stem: into
    docFrequency: 5.0
    docPositions:
    - 698
    - 754
    - 1561
  space: !ruby/object:Word
    word: space
    stem: space
    docFrequency: 3.0
    docPositions:
    - 698
    - 1561
  wondered: !ruby/object:Word
    word: wondered
    stem: wonder
    docFrequency: 3.0
    docPositions:
    - 698
    - 1561
  few: !ruby/object:Word
    word: few
    stem: few
    docFrequency: 3.0
    docPositions:
    - 698
    - 1561
  times: !ruby/object:Word
    word: times
    stem: time
    docFrequency: 3.0
    docPositions:
    - 698
    - 1561
  he: !ruby/object:Word
    word: he
    stem: he
    docFrequency: 23.0
    docPositions:
    - 698
    - 754
    - 781
    - 787
    - 1561
  earning: !ruby/object:Word
    word: earning
    stem: earn
    docFrequency: 3.0
    docPositions:
    - 698
    - 1561
  corn: !ruby/object:Word
    word: corn
    stem: corn
    docFrequency: 3.0
    docPositions:
    - 698
    - 1561
  clearly: !ruby/object:Word
    word: clearly
    stem: clearli
    docFrequency: 3.0
    docPositions:
    - 698
    - 1561
  system: !ruby/object:Word
    word: system
    stem: system
    docFrequency: 3.0
    docPositions:
    - 698
    - 1561
  helped: !ruby/object:Word
    word: helped
    stem: help
    docFrequency: 5.0
    docPositions:
    - 698
    - 1561
  decode: !ruby/object:Word
    word: decode
    stem: decod
    docFrequency: 3.0
    docPositions:
    - 698
    - 1561
  soon: !ruby/object:Word
    word: soon
    stem: soon
    docFrequency: 3.0
    docPositions:
    - 698
    - 1561
  too: !ruby/object:Word
    word: too
    stem: too
    docFrequency: 3.0
    docPositions:
    - 698
    - 1561
  many: !ruby/object:Word
    word: many
    stem: mani
    docFrequency: 5.0
    docPositions:
    - 698
    - 787
    - 1561
  being: !ruby/object:Word
    word: being
    stem: be
    docFrequency: 3.0
    docPositions:
    - 698
    - 1561
  intercepted: !ruby/object:Word
    word: intercepted
    stem: intercept
    docFrequency: 3.0
    docPositions:
    - 698
    - 1561
  handle: !ruby/object:Word
    word: handle
    stem: handl
    docFrequency: 3.0
    docPositions:
    - 698
    - 1561
  success: !ruby/object:Word
    word: success
    stem: success
    docFrequency: 5.0
    docPositions:
    - 698
    - 787
    - 1561
  machines: !ruby/object:Word
    word: machines
    stem: machin
    docFrequency: 5.0
    docPositions:
    - 698
    - 787
    - 1561
  produced: !ruby/object:Word
    word: produced
    stem: produc
    docFrequency: 7.0
    docPositions:
    - 698
    - 787
    - 1561
  decided: !ruby/object:Word
    word: decided
    stem: decid
    docFrequency: 3.0
    docPositions:
    - 698
    - 1561
  build: !ruby/object:Word
    word: build
    stem: build
    docFrequency: 5.0
    docPositions:
    - 698
    - 1561
  another: !ruby/object:Word
    word: another
    stem: anoth
    docFrequency: 3.0
    docPositions:
    - 698
    - 1561
  broken: !ruby/object:Word
    word: broken
    stem: broken
    docFrequency: 3.0
    docPositions:
    - 698
    - 1561
  upoverseeing: !ruby/object:Word
    word: upoverseeing
    stem: upoverse
    docFrequency: 3.0
    docPositions:
    - 698
    - 1561
  post: !ruby/object:Word
    word: post
    stem: post
    docFrequency: 7.0
    docPositions:
    - 698
    - 1511
    - 1525
    - 1561
  office: !ruby/object:Word
    word: office
    stem: offic
    docFrequency: 5.0
    docPositions:
    - 698
    - 1561
  engineer: !ruby/object:Word
    word: engineer
    stem: engin
    docFrequency: 3.0
    docPositions:
    - 698
    - 1561
  tommy: !ruby/object:Word
    word: tommy
    stem: tommi
    docFrequency: 4.0
    docPositions:
    - 698
    - 723
    - 1561
  flowers: !ruby/object:Word
    word: flowers
    stem: flower
    docFrequency: 14.0
    docPositions:
    - 698
    - 723
    - 754
    - 787
    - 1561
  much: !ruby/object:Word
    word: much
    stem: much
    docFrequency: 3.0
    docPositions:
    - 698
    - 1561
  design: !ruby/object:Word
    word: design
    stem: design
    docFrequency: 4.0
    docPositions:
    - 698
    - 1044
    - 1561
  done: !ruby/object:Word
    word: done
    stem: done
    docFrequency: 3.0
    docPositions:
    - 698
    - 1561
  dollis: !ruby/object:Word
    word: dollis
    stem: dolli
    docFrequency: 3.0
    docPositions:
    - 698
    - 1561
  hill: !ruby/object:Word
    word: hill
    stem: hill
    docFrequency: 3.0
    docPositions:
    - 698
    - 1561
  research: !ruby/object:Word
    word: research
    stem: research
    docFrequency: 3.0
    docPositions:
    - 698
    - 1561
  lab: !ruby/object:Word
    word: lab
    stem: lab
    docFrequency: 3.0
    docPositions:
    - 698
    - 1561
  select: !ruby/object:Word
    word: select
    stem: select
    docFrequency: 3.0
    docPositions:
    - 698
    - 1561
  band: !ruby/object:Word
    word: band
    stem: band
    docFrequency: 3.0
    docPositions:
    - 698
    - 1561
  brothers: !ruby/object:Word
    word: brothers
    stem: brother
    docFrequency: 3.0
    docPositions:
    - 698
    - 1561
  there: !ruby/object:Word
    word: there
    stem: there
    docFrequency: 3.0
    docPositions:
    - 698
    - 1561
  five: !ruby/object:Word
    word: five
    stem: five
    docFrequency: 3.0
    docPositions:
    - 698
    - 1561
  us: !ruby/object:Word
    word: us
    stem: us
    docFrequency: 11.0
    docPositions:
    - 698
    - 828
    - 1071
    - 1464
    - 1530
    - 1537
    - 1561
  initially: !ruby/object:Word
    word: initially
    stem: initi
    docFrequency: 3.0
    docPositions:
    - 698
    - 1561
  harry: !ruby/object:Word
    word: harry
    stem: harri
    docFrequency: 6.0
    docPositions:
    - 698
    - 723
    - 787
    - 1561
  fensom: !ruby/object:Word
    word: fensom
    stem: fensom
    docFrequency: 8.0
    docPositions:
    - 698
    - 723
    - 787
    - 1561
  oversaw: !ruby/object:Word
    word: oversaw
    stem: oversaw
    docFrequency: 5.0
    docPositions:
    - 698
    - 754
    - 1561
  installation: !ruby/object:Word
    word: installation
    stem: instal
    docFrequency: 3.0
    docPositions:
    - 698
    - 1561
  operation: !ruby/object:Word
    word: operation
    stem: oper
    docFrequency: 4.0
    docPositions:
    - 698
    - 720
    - 1561
  mark: !ruby/object:Word
    word: mark
    stem: mark
    docFrequency: 4.0
    docPositions:
    - 714
    - 754
    - 1561
  tech: !ruby/object:Word
    word: tech
    stem: tech
    docFrequency: 2.0
    docPositions:
    - 717
  specs: !ruby/object:Word
    word: specs
    stem: spec
    docFrequency: 2.0
    docPositions:
    - 717
  valves: !ruby/object:Word
    word: valves
    stem: valv
    docFrequency: 14.0
    docPositions:
    - 717
    - 754
    - 1561
  characters: !ruby/object:Word
    word: characters
    stem: charact
    docFrequency: 6.0
    docPositions:
    - 717
    - 754
    - 787
    - 1561
  per: !ruby/object:Word
    word: per
    stem: per
    docFrequency: 2.0
    docPositions:
    - 717
  second: !ruby/object:Word
    word: second
    stem: second
    docFrequency: 6.0
    docPositions:
    - 717
    - 754
    - 1561
  creators: !ruby/object:Word
    word: creators
    stem: creator
    docFrequency: 2.0
    docPositions:
    - 723
  allen: !ruby/object:Word
    word: allen
    stem: allen
    docFrequency: 2.0
    docPositions:
    - 723
  coombs: !ruby/object:Word
    word: coombs
    stem: coomb
    docFrequency: 2.0
    docPositions:
    - 723
  sid: !ruby/object:Word
    word: sid
    stem: sid
    docFrequency: 2.0
    docPositions:
    - 723
  broadhurst: !ruby/object:Word
    word: broadhurst
    stem: broadhurst
    docFrequency: 2.0
    docPositions:
    - 723
  chandler: !ruby/object:Word
    word: chandler
    stem: chandler
    docFrequency: 2.0
    docPositions:
    - 723
  pioneer: !ruby/object:Word
    word: pioneer
    stem: pioneer
    docFrequency: 3.0
    docPositions:
    - 740
    - 852
  family: !ruby/object:Word
    word: family
    stem: famili
    docFrequency: 3.0
    docPositions:
    - 740
    - 852
  tree: !ruby/object:Word
    word: tree
    stem: tree
    docFrequency: 4.0
    docPositions:
    - 740
    - 852
    - 1291
  didn: !ruby/object:Word
    word: didn
    stem: didn
    docFrequency: 7.0
    docPositions:
    - 754
    - 787
    - 1561
  t: !ruby/object:Word
    word: t
    stem: t
    docFrequency: 7.0
    docPositions:
    - 754
    - 787
    - 1561
  think: !ruby/object:Word
    word: think
    stem: think
    docFrequency: 3.0
    docPositions:
    - 754
    - 1561
  because: !ruby/object:Word
    word: because
    stem: becaus
    docFrequency: 9.0
    docPositions:
    - 754
    - 787
    - 1561
  those: !ruby/object:Word
    word: those
    stem: those
    docFrequency: 7.0
    docPositions:
    - 754
    - 787
    - 1561
  simply: !ruby/object:Word
    word: simply
    stem: simpli
    docFrequency: 3.0
    docPositions:
    - 754
    - 1561
  device: !ruby/object:Word
    word: device
    stem: devic
    docFrequency: 3.0
    docPositions:
    - 754
    - 1561
  manipulating: !ruby/object:Word
    word: manipulating
    stem: manipul
    docFrequency: 3.0
    docPositions:
    - 754
    - 1561
  arithmetic: !ruby/object:Word
    word: arithmetic
    stem: arithmet
    docFrequency: 3.0
    docPositions:
    - 754
    - 1561
  wanted: !ruby/object:Word
    word: wanted
    stem: want
    docFrequency: 5.0
    docPositions:
    - 754
    - 787
    - 1561
  huge: !ruby/object:Word
    word: huge
    stem: huge
    docFrequency: 3.0
    docPositions:
    - 754
    - 1561
  numbers: !ruby/object:Word
    word: numbers
    stem: number
    docFrequency: 3.0
    docPositions:
    - 754
    - 1561
  power: !ruby/object:Word
    word: power
    stem: power
    docFrequency: 3.0
    docPositions:
    - 754
    - 1561
  wisdom: !ruby/object:Word
    word: wisdom
    stem: wisdom
    docFrequency: 3.0
    docPositions:
    - 754
    - 1561
  doubted: !ruby/object:Word
    word: doubted
    stem: doubt
    docFrequency: 3.0
    docPositions:
    - 754
    - 1561
  prone: !ruby/object:Word
    word: prone
    stem: prone
    docFrequency: 3.0
    docPositions:
    - 754
    - 1561
  breaking: !ruby/object:Word
    word: breaking
    stem: break
    docFrequency: 3.0
    docPositions:
    - 754
    - 1561
  knew: !ruby/object:Word
    word: knew
    stem: knew
    docFrequency: 3.0
    docPositions:
    - 754
    - 1561
  telephone: !ruby/object:Word
    word: telephone
    stem: telephon
    docFrequency: 3.0
    docPositions:
    - 754
    - 1561
  exchanges: !ruby/object:Word
    word: exchanges
    stem: exchang
    docFrequency: 3.0
    docPositions:
    - 754
    - 1561
  long: !ruby/object:Word
    word: long
    stem: long
    docFrequency: 3.0
    docPositions:
    - 754
    - 1561
  running: !ruby/object:Word
    word: running
    stem: run
    docFrequency: 3.0
    docPositions:
    - 754
    - 1561
  switching: !ruby/object:Word
    word: switching
    stem: switch
    docFrequency: 3.0
    docPositions:
    - 754
    - 1561
  them: !ruby/object:Word
    word: them
    stem: them
    docFrequency: 5.0
    docPositions:
    - 754
    - 1561
  'off': !ruby/object:Word
    word: 'off'
    stem: 'off'
    docFrequency: 3.0
    docPositions:
    - 754
    - 1561
  renders: !ruby/object:Word
    word: renders
    stem: render
    docFrequency: 3.0
    docPositions:
    - 754
    - 1561
  friable: !ruby/object:Word
    word: friable
    stem: friabl
    docFrequency: 3.0
    docPositions:
    - 754
    - 1561
  delivered: !ruby/object:Word
    word: delivered
    stem: deliv
    docFrequency: 3.0
    docPositions:
    - 754
    - 1561
  late: !ruby/object:Word
    word: late
    stem: late
    docFrequency: 3.0
    docPositions:
    - 754
    - 1561
  january: !ruby/object:Word
    word: january
    stem: januari
    docFrequency: 3.0
    docPositions:
    - 754
    - 1561
  within: !ruby/object:Word
    word: within
    stem: within
    docFrequency: 3.0
    docPositions:
    - 754
    - 1561
  fortnight: !ruby/object:Word
    word: fortnight
    stem: fortnight
    docFrequency: 3.0
    docPositions:
    - 754
    - 1561
  belief: !ruby/object:Word
    word: belief
    stem: belief
    docFrequency: 3.0
    docPositions:
    - 754
    - 1561
  longevity: !ruby/object:Word
    word: longevity
    stem: longev
    docFrequency: 3.0
    docPositions:
    - 754
    - 1561
  proved: !ruby/object:Word
    word: proved
    stem: prove
    docFrequency: 3.0
    docPositions:
    - 754
    - 1561
  some: !ruby/object:Word
    word: some
    stem: some
    docFrequency: 5.0
    docPositions:
    - 754
    - 787
    - 1561
  dating: !ruby/object:Word
    word: dating
    stem: date
    docFrequency: 3.0
    docPositions:
    - 754
    - 1561
  built: !ruby/object:Word
    word: built
    stem: built
    docFrequency: 5.0
    docPositions:
    - 754
    - 1561
  now: !ruby/object:Word
    word: now
    stem: now
    docFrequency: 15.0
    docPositions:
    - 754
    - 1092
    - 1120
    - 1156
    - 1182
    - 1368
    - 1371
    - 1374
    - 1381
    - 1561
    - 1562
  installed: !ruby/object:Word
    word: installed
    stem: instal
    docFrequency: 3.0
    docPositions:
    - 754
    - 1561
  back: !ruby/object:Word
    word: back
    stem: back
    docFrequency: 3.0
    docPositions:
    - 754
    - 1561
  oldest: !ruby/object:Word
    word: oldest
    stem: oldest
    docFrequency: 5.0
    docPositions:
    - 754
    - 942
    - 1291
    - 1561
  valve: !ruby/object:Word
    word: valve
    stem: valv
    docFrequency: 3.0
    docPositions:
    - 754
    - 1561
  dates: !ruby/object:Word
    word: dates
    stem: date
    docFrequency: 3.0
    docPositions:
    - 754
    - 1561
  year: !ruby/object:Word
    word: year
    stem: year
    docFrequency: 5.0
    docPositions:
    - 754
    - 1561
  rebuild: !ruby/object:Word
    word: rebuild
    stem: rebuild
    docFrequency: 3.0
    docPositions:
    - 754
    - 1561
  project: !ruby/object:Word
    word: project
    stem: project
    docFrequency: 3.0
    docPositions:
    - 754
    - 1561
  total: !ruby/object:Word
    word: total
    stem: total
    docFrequency: 5.0
    docPositions:
    - 754
    - 787
    - 1561
  estimates: !ruby/object:Word
    word: estimates
    stem: estim
    docFrequency: 3.0
    docPositions:
    - 754
    - 1561
  remarkably: !ruby/object:Word
    word: remarkably
    stem: remark
    docFrequency: 3.0
    docPositions:
    - 754
    - 1561
  short: !ruby/object:Word
    word: short
    stem: short
    docFrequency: 3.0
    docPositions:
    - 754
    - 1561
  six: !ruby/object:Word
    word: six
    stem: six
    docFrequency: 3.0
    docPositions:
    - 754
    - 1561
  hours: !ruby/object:Word
    word: hours
    stem: hour
    docFrequency: 5.0
    docPositions:
    - 754
    - 787
    - 1561
  means: !ruby/object:Word
    word: means
    stem: mean
    docFrequency: 3.0
    docPositions:
    - 754
    - 1561
  impossible: !ruby/object:Word
    word: impossible
    stem: imposs
    docFrequency: 3.0
    docPositions:
    - 754
    - 1561
  mr: !ruby/object:Word
    word: mr
    stem: mr
    docFrequency: 5.0
    docPositions:
    - 754
    - 787
    - 1561
  rhythm: !ruby/object:Word
    word: rhythm
    stem: rhythm
    docFrequency: 3.0
    docPositions:
    - 754
    - 1561
  dictated: !ruby/object:Word
    word: dictated
    stem: dictat
    docFrequency: 3.0
    docPositions:
    - 754
    - 1561
  paper: !ruby/object:Word
    word: paper
    stem: paper
    docFrequency: 3.0
    docPositions:
    - 754
    - 1561
  tape: !ruby/object:Word
    word: tape
    stem: tape
    docFrequency: 5.0
    docPositions:
    - 754
    - 1561
  bearing: !ruby/object:Word
    word: bearing
    stem: bear
    docFrequency: 3.0
    docPositions:
    - 754
    - 1561
  feeds: !ruby/object:Word
    word: feeds
    stem: feed
    docFrequency: 4.0
    docPositions:
    - 754
    - 1413
    - 1561
  data: !ruby/object:Word
    word: data
    stem: data
    docFrequency: 3.0
    docPositions:
    - 754
    - 1561
  rate: !ruby/object:Word
    word: rate
    stem: rate
    docFrequency: 3.0
    docPositions:
    - 754
    - 1561
  reading: !ruby/object:Word
    word: reading
    stem: read
    docFrequency: 6.0
    docPositions:
    - 754
    - 1371
    - 1381
    - 1561
    - 1562
  dots: !ruby/object:Word
    word: dots
    stem: dot
    docFrequency: 3.0
    docPositions:
    - 754
    - 1561
  uses: !ruby/object:Word
    word: uses
    stem: us
    docFrequency: 3.0
    docPositions:
    - 754
    - 1561
  parts: !ruby/object:Word
    word: parts
    stem: part
    docFrequency: 3.0
    docPositions:
    - 754
    - 1561
  anti: !ruby/object:Word
    word: anti
    stem: anti
    docFrequency: 3.0
    docPositions:
    - 754
    - 1561
  aircraft: !ruby/object:Word
    word: aircraft
    stem: aircraft
    docFrequency: 3.0
    docPositions:
    - 754
    - 1561
  shells: !ruby/object:Word
    word: shells
    stem: shell
    docFrequency: 3.0
    docPositions:
    - 754
    - 1561
  shows: !ruby/object:Word
    word: shows
    stem: show
    docFrequency: 3.0
    docPositions:
    - 781
    - 1561
  deciphered: !ruby/object:Word
    word: deciphered
    stem: deciph
    docFrequency: 3.0
    docPositions:
    - 781
    - 1561
  while: !ruby/object:Word
    word: while
    stem: while
    docFrequency: 5.0
    docPositions:
    - 781
    - 1464
    - 1561
    - 1562
  cracker: !ruby/object:Word
    word: cracker
    stem: cracker
    docFrequency: 3.0
    docPositions:
    - 781
    - 1561
  britain: !ruby/object:Word
    word: britain
    stem: britain
    docFrequency: 3.0
    docPositions:
    - 781
    - 1561
  quickly: !ruby/object:Word
    word: quickly
    stem: quickli
    docFrequency: 3.0
    docPositions:
    - 787
    - 1561
  team: !ruby/object:Word
    word: team
    stem: team
    docFrequency: 3.0
    docPositions:
    - 787
    - 1561
  managed: !ruby/object:Word
    word: managed
    stem: manag
    docFrequency: 3.0
    docPositions:
    - 787
    - 1561
  months: !ruby/object:Word
    word: months
    stem: month
    docFrequency: 3.0
    docPositions:
    - 787
    - 1561
  remembers: !ruby/object:Word
    word: remembers
    stem: rememb
    docFrequency: 3.0
    docPositions:
    - 787
    - 1561
  frenetic: !ruby/object:Word
    word: frenetic
    stem: frenet
    docFrequency: 3.0
    docPositions:
    - 787
    - 1561
  stayed: !ruby/object:Word
    word: stayed
    stem: stai
    docFrequency: 3.0
    docPositions:
    - 787
    - 1561
  get: !ruby/object:Word
    word: get
    stem: get
    docFrequency: 5.0
    docPositions:
    - 787
    - 1464
    - 1561
    - 1562
  finished: !ruby/object:Word
    word: finished
    stem: finish
    docFrequency: 3.0
    docPositions:
    - 787
    - 1561
  just: !ruby/object:Word
    word: just
    stem: just
    docFrequency: 3.0
    docPositions:
    - 787
    - 1561
  way: !ruby/object:Word
    word: way
    stem: wai
    docFrequency: 3.0
    docPositions:
    - 787
    - 1561
  colossi: !ruby/object:Word
    word: colossi
    stem: colossi
    docFrequency: 5.0
    docPositions:
    - 787
    - 1561
  including: !ruby/object:Word
    word: including
    stem: includ
    docFrequency: 3.0
    docPositions:
    - 787
    - 1561
  several: !ruby/object:Word
    word: several
    stem: sever
    docFrequency: 3.0
    docPositions:
    - 787
    - 1561
  ii: !ruby/object:Word
    word: ii
    stem: ii
    docFrequency: 3.0
    docPositions:
    - 787
    - 1561
  went: !ruby/object:Word
    word: went
    stem: went
    docFrequency: 3.0
    docPositions:
    - 787
    - 1561
  fast: !ruby/object:Word
    word: fast
    stem: fast
    docFrequency: 3.0
    docPositions:
    - 787
    - 1561
  end: !ruby/object:Word
    word: end
    stem: end
    docFrequency: 4.0
    docPositions:
    - 787
    - 1512
    - 1561
  estimated: !ruby/object:Word
    word: estimated
    stem: estim
    docFrequency: 3.0
    docPositions:
    - 787
    - 1561
  decrypted: !ruby/object:Word
    word: decrypted
    stem: decrypt
    docFrequency: 3.0
    docPositions:
    - 787
    - 1561
  million: !ruby/object:Word
    word: million
    stem: million
    docFrequency: 3.0
    docPositions:
    - 787
    - 1561
  spelled: !ruby/object:Word
    word: spelled
    stem: spell
    docFrequency: 3.0
    docPositions:
    - 787
    - 1561
  doom: !ruby/object:Word
    word: doom
    stem: doom
    docFrequency: 3.0
    docPositions:
    - 787
    - 1561
  nobody: !ruby/object:Word
    word: nobody
    stem: nobodi
    docFrequency: 3.0
    docPositions:
    - 787
    - 1561
  recognition: !ruby/object:Word
    word: recognition
    stem: recognit
    docFrequency: 3.0
    docPositions:
    - 787
    - 1561
  winston: !ruby/object:Word
    word: winston
    stem: winston
    docFrequency: 3.0
    docPositions:
    - 787
    - 1561
  churchill: !ruby/object:Word
    word: churchill
    stem: churchil
    docFrequency: 3.0
    docPositions:
    - 787
    - 1561
  expunged: !ruby/object:Word
    word: expunged
    stem: expung
    docFrequency: 3.0
    docPositions:
    - 787
    - 1561
  peoples: !ruby/object:Word
    word: peoples
    stem: peopl
    docFrequency: 3.0
    docPositions:
    - 787
    - 1561
  minds: !ruby/object:Word
    word: minds
    stem: mind
    docFrequency: 3.0
    docPositions:
    - 787
    - 1561
  want: !ruby/object:Word
    word: want
    stem: want
    docFrequency: 3.0
    docPositions:
    - 787
    - 1561
  released: !ruby/object:Word
    word: released
    stem: releas
    docFrequency: 4.0
    docPositions:
    - 787
    - 1367
    - 1561
  led: !ruby/object:Word
    word: led
    stem: led
    docFrequency: 3.0
    docPositions:
    - 787
    - 1561
  claim: !ruby/object:Word
    word: claim
    stem: claim
    docFrequency: 5.0
    docPositions:
    - 787
    - 1561
  american: !ruby/object:Word
    word: american
    stem: american
    docFrequency: 3.0
    docPositions:
    - 787
    - 1561
  eniac: !ruby/object:Word
    word: eniac
    stem: eniac
    docFrequency: 3.0
    docPositions:
    - 787
    - 1561
  digital: !ruby/object:Word
    word: digital
    stem: digit
    docFrequency: 4.0
    docPositions:
    - 787
    - 1464
    - 1561
  creation: !ruby/object:Word
    word: creation
    stem: creation
    docFrequency: 3.0
    docPositions:
    - 787
    - 1561
  honour: !ruby/object:Word
    word: honour
    stem: honour
    docFrequency: 3.0
    docPositions:
    - 787
    - 1561
  captains: !ruby/object:Word
    word: captains
    stem: captain
    docFrequency: 3.0
    docPositions:
    - 787
    - 1561
  keen: !ruby/object:Word
    word: keen
    stem: keen
    docFrequency: 3.0
    docPositions:
    - 787
    - 1561
  proper: !ruby/object:Word
    word: proper
    stem: proper
    docFrequency: 3.0
    docPositions:
    - 787
    - 1561
  credit: !ruby/object:Word
    word: credit
    stem: credit
    docFrequency: 3.0
    docPositions:
    - 787
    - 1561
  given: !ruby/object:Word
    word: given
    stem: given
    docFrequency: 3.0
    docPositions:
    - 787
    - 1561
  achievement: !ruby/object:Word
    word: achievement
    stem: achiev
    docFrequency: 3.0
    docPositions:
    - 787
    - 1561
  realise: !ruby/object:Word
    word: realise
    stem: realis
    docFrequency: 3.0
    docPositions:
    - 787
    - 1561
  beginning: !ruby/object:Word
    word: beginning
    stem: begin
    docFrequency: 3.0
    docPositions:
    - 787
    - 1561
  told: !ruby/object:Word
    word: told
    stem: told
    docFrequency: 3.0
    docPositions:
    - 787
    - 1561
  after: !ruby/object:Word
    word: after
    stem: after
    docFrequency: 4.0
    docPositions:
    - 787
    - 927
    - 1561
  inventor: !ruby/object:Word
    word: inventor
    stem: inventor
    docFrequency: 3.0
    docPositions:
    - 787
    - 1561
  transformed: !ruby/object:Word
    word: transformed
    stem: transform
    docFrequency: 3.0
    docPositions:
    - 787
    - 1561
  person: !ruby/object:Word
    word: person
    stem: person
    docFrequency: 3.0
    docPositions:
    - 787
    - 1561
  importance: !ruby/object:Word
    word: importance
    stem: import
    docFrequency: 3.0
    docPositions:
    - 787
    - 1561
  should: !ruby/object:Word
    word: should
    stem: should
    docFrequency: 3.0
    docPositions:
    - 787
    - 1561
  proud: !ruby/object:Word
    word: proud
    stem: proud
    docFrequency: 3.0
    docPositions:
    - 787
    - 1561
  people: !ruby/object:Word
    word: people
    stem: peopl
    docFrequency: 6.0
    docPositions:
    - 787
    - 1371
    - 1381
    - 1561
    - 1562
  thought: !ruby/object:Word
    word: thought
    stem: thought
    docFrequency: 3.0
    docPositions:
    - 787
    - 1561
  statue: !ruby/object:Word
    word: statue
    stem: statu
    docFrequency: 3.0
    docPositions:
    - 787
    - 1561
  least: !ruby/object:Word
    word: least
    stem: least
    docFrequency: 3.0
    docPositions:
    - 787
    - 1561
  expect: !ruby/object:Word
    word: expect
    stem: expect
    docFrequency: 3.0
    docPositions:
    - 787
    - 1561
  bookmark: !ruby/object:Word
    word: bookmark
    stem: bookmark
    docFrequency: 3.0
    docPositions:
    - 790
    - 811
  delicious: !ruby/object:Word
    word: delicious
    stem: delici
    docFrequency: 2.0
    docPositions:
    - 792
  digg: !ruby/object:Word
    word: digg
    stem: digg
    docFrequency: 2.0
    docPositions:
    - 795
  reddit: !ruby/object:Word
    word: reddit
    stem: reddit
    docFrequency: 2.0
    docPositions:
    - 798
  facebook: !ruby/object:Word
    word: facebook
    stem: facebook
    docFrequency: 2.0
    docPositions:
    - 801
  stumbleupon: !ruby/object:Word
    word: stumbleupon
    stem: stumbleupon
    docFrequency: 2.0
    docPositions:
    - 804
  these: !ruby/object:Word
    word: these
    stem: these
    docFrequency: 3.0
    docPositions:
    - 806
    - 1562
  bm: !ruby/object:Word
    word: bm
    stem: bm
    docFrequency: 2.0
    docPositions:
    - 811
  storyid: !ruby/object:Word
    word: storyid
    stem: storyid
    docFrequency: 2.0
    docPositions:
    - 811
  sectionid: !ruby/object:Word
    word: sectionid
    stem: sectionid
    docFrequency: 2.0
    docPositions:
    - 811
  url: !ruby/object:Word
    word: url
    stem: url
    docFrequency: 2.0
    docPositions:
    - 811
  stm: !ruby/object:Word
    word: stm
    stem: stm
    docFrequency: 13.0
    docPositions:
    - 811
    - 1363
    - 1364
    - 1365
    - 1366
    - 1367
    - 1368
    - 1369
    - 1370
    - 1371
    - 1374
    - 1493
  edition: !ruby/object:Word
    word: edition
    stem: edit
    docFrequency: 2.0
    docPositions:
    - 811
  print: !ruby/object:Word
    word: print
    stem: print
    docFrequency: 3.0
    docPositions:
    - 824
    - 1562
  sponsor: !ruby/object:Word
    word: sponsor
    stem: sponsor
    docFrequency: 2.0
    docPositions:
    - 824
  storyprintsponsorship: !ruby/object:Word
    word: storyprintsponsorship
    stem: storyprintsponsorship
    docFrequency: 3.0
    docPositions:
    - 825
    - 827
  bbc_adsense_slot: !ruby/object:Word
    word: bbc_adsense_slot
    stem: bbc_adsense_slot
    docFrequency: 2.0
    docPositions:
    - 828
  adsense_middle: !ruby/object:Word
    word: adsense_middle
    stem: adsense_middl
    docFrequency: 3.0
    docPositions:
    - 828
    - 829
  bbc_adsense_country: !ruby/object:Word
    word: bbc_adsense_country
    stem: bbc_adsense_countri
    docFrequency: 3.0
    docPositions:
    - 828
  rest: !ruby/object:Word
    word: rest
    stem: rest
    docFrequency: 2.0
    docPositions:
    - 828
  mpu: !ruby/object:Word
    word: mpu
    stem: mpu
    docFrequency: 3.0
    docPositions:
    - 841
    - 842
  interactive: !ruby/object:Word
    word: interactive
    stem: interact
    docFrequency: 2.0
    docPositions:
    - 852
  feb: !ruby/object:Word
    word: feb
    stem: feb
    docFrequency: 3.0
    docPositions:
    - 855
    - 870
  secrets: !ruby/object:Word
    word: secrets
    stem: secret
    docFrequency: 2.0
    docPositions:
    - 867
  spies: !ruby/object:Word
    word: spies
    stem: spi
    docFrequency: 2.0
    docPositions:
    - 867
  supercomputers: !ruby/object:Word
    word: supercomputers
    stem: supercomput
    docFrequency: 2.0
    docPositions:
    - 867
  celebrating: !ruby/object:Word
    word: celebrating
    stem: celebr
    docFrequency: 3.0
    docPositions:
    - 882
    - 912
  years: !ruby/object:Word
    word: years
    stem: year
    docFrequency: 2.0
    docPositions:
    - 882
  net: !ruby/object:Word
    word: net
    stem: net
    docFrequency: 3.0
    docPositions:
    - 882
    - 1547
  oct: !ruby/object:Word
    word: oct
    stem: oct
    docFrequency: 3.0
    docPositions:
    - 885
    - 975
  computers: !ruby/object:Word
    word: computers
    stem: comput
    docFrequency: 3.0
    docPositions:
    - 897
    - 1030
  nov: !ruby/object:Word
    word: nov
    stem: nov
    docFrequency: 2.0
    docPositions:
    - 900
  jul: !ruby/object:Word
    word: jul
    stem: jul
    docFrequency: 3.0
    docPositions:
    - 915
    - 990
  pm: !ruby/object:Word
    word: pm
    stem: pm
    docFrequency: 2.0
    docPositions:
    - 927
  apology: !ruby/object:Word
    word: apology
    stem: apolog
    docFrequency: 2.0
    docPositions:
    - 927
  turing: !ruby/object:Word
    word: turing
    stem: ture
    docFrequency: 2.0
    docPositions:
    - 927
  petition: !ruby/object:Word
    word: petition
    stem: petit
    docFrequency: 2.0
    docPositions:
    - 927
  sep: !ruby/object:Word
    word: sep
    stem: sep
    docFrequency: 3.0
    docPositions:
    - 930
    - 945
  reboot: !ruby/object:Word
    word: reboot
    stem: reboot
    docFrequency: 2.0
    docPositions:
    - 942
  tonne: !ruby/object:Word
    word: tonne
    stem: tonn
    docFrequency: 2.0
    docPositions:
    - 957
  baby: !ruby/object:Word
    word: baby
    stem: babi
    docFrequency: 2.0
    docPositions:
    - 957
  marks: !ruby/object:Word
    word: marks
    stem: mark
    docFrequency: 2.0
    docPositions:
    - 957
  birth: !ruby/object:Word
    word: birth
    stem: birth
    docFrequency: 2.0
    docPositions:
    - 957
  jun: !ruby/object:Word
    word: jun
    stem: jun
    docFrequency: 2.0
    docPositions:
    - 960
  security: !ruby/object:Word
    word: security
    stem: secur
    docFrequency: 2.0
    docPositions:
    - 972
  targets: !ruby/object:Word
    word: targets
    stem: target
    docFrequency: 2.0
    docPositions:
    - 972
  gamers: !ruby/object:Word
    word: gamers
    stem: gamer
    docFrequency: 2.0
    docPositions:
    - 972
  past: !ruby/object:Word
    word: past
    stem: past
    docFrequency: 2.0
    docPositions:
    - 987
  future: !ruby/object:Word
    word: future
    stem: futur
    docFrequency: 2.0
    docPositions:
    - 987
  internet: !ruby/object:Word
    word: internet
    stem: internet
    docFrequency: 3.0
    docPositions:
    - 1008
    - 1053
  national: !ruby/object:Word
    word: national
    stem: nation
    docFrequency: 2.0
    docPositions:
    - 1023
  museum: !ruby/object:Word
    word: museum
    stem: museum
    docFrequency: 2.0
    docPositions:
    - 1023
  computing: !ruby/object:Word
    word: computing
    stem: comput
    docFrequency: 2.0
    docPositions:
    - 1023
  not: !ruby/object:Word
    word: not
    stem: not
    docFrequency: 6.0
    docPositions:
    - 1053
    - 1464
    - 1562
  responsible: !ruby/object:Word
    word: responsible
    stem: respons
    docFrequency: 4.0
    docPositions:
    - 1053
    - 1464
    - 1562
  external: !ruby/object:Word
    word: external
    stem: extern
    docFrequency: 5.0
    docPositions:
    - 1053
    - 1464
    - 1559
    - 1562
  top: !ruby/object:Word
    word: top
    stem: top
    docFrequency: 3.0
    docPositions:
    - 1064
    - 1407
  stories: !ruby/object:Word
    word: stories
    stem: stori
    docFrequency: 6.0
    docPositions:
    - 1064
    - 1092
    - 1371
    - 1381
    - 1562
  lifts: !ruby/object:Word
    word: lifts
    stem: lift
    docFrequency: 2.0
    docPositions:
    - 1071
  lid: !ruby/object:Word
    word: lid
    stem: lid
    docFrequency: 2.0
    docPositions:
    - 1071
  wikileaks: !ruby/object:Word
    word: wikileaks
    stem: wikileak
    docFrequency: 2.0
    docPositions:
    - 1071
  probe: !ruby/object:Word
    word: probe
    stem: probe
    docFrequency: 2.0
    docPositions:
    - 1071
  bing: !ruby/object:Word
    word: bing
    stem: bing
    docFrequency: 2.0
    docPositions:
    - 1078
  gains: !ruby/object:Word
    word: gains
    stem: gain
    docFrequency: 2.0
    docPositions:
    - 1078
  market: !ruby/object:Word
    word: market
    stem: market
    docFrequency: 2.0
    docPositions:
    - 1078
  share: !ruby/object:Word
    word: share
    stem: share
    docFrequency: 2.0
    docPositions:
    - 1078
  virtual: !ruby/object:Word
    word: virtual
    stem: virtual
    docFrequency: 2.0
    docPositions:
    - 1085
  makes: !ruby/object:Word
    word: makes
    stem: make
    docFrequency: 2.0
    docPositions:
    - 1085
  xbox: !ruby/object:Word
    word: xbox
    stem: xbox
    docFrequency: 2.0
    docPositions:
    - 1085
  debut: !ruby/object:Word
    word: debut
    stem: debut
    docFrequency: 2.0
    docPositions:
    - 1085
  getrssurlstory: !ruby/object:Word
    word: getrssurlstory
    stem: getrssurlstori
    docFrequency: 2.0
    docPositions:
    - 1090
  rss: !ruby/object:Word
    word: rss
    stem: rss
    docFrequency: 3.0
    docPositions:
    - 1090
  newsonline_world_edition: !ruby/object:Word
    word: newsonline_world_edition
    stem: newsonline_world_edit
    docFrequency: 2.0
    docPositions:
    - 1090
  xml: !ruby/object:Word
    word: xml
    stem: xml
    docFrequency: 2.0
    docPositions:
    - 1090
  most: !ruby/object:Word
    word: most
    stem: most
    docFrequency: 13.0
    docPositions:
    - 1092
    - 1120
    - 1156
    - 1182
    - 1363
    - 1364
    - 1365
    - 1366
    - 1367
    - 1368
    - 1374
    - 1381
  popular: !ruby/object:Word
    word: popular
    stem: popular
    docFrequency: 9.0
    docPositions:
    - 1092
    - 1120
    - 1156
    - 1182
    - 1374
    - 1381
    - 1562
  livestatstabs: !ruby/object:Word
    word: livestatstabs
    stem: livestatstab
    docFrequency: 4.0
    docPositions:
    - 1098
    - 1188
    - 1189
  newtab: !ruby/object:Word
    word: newtab
    stem: newtab
    docFrequency: 4.0
    docPositions:
    - 1098
    - 1102
    - 1109
  oldtab: !ruby/object:Word
    word: oldtab
    stem: oldtab
    docFrequency: 4.0
    docPositions:
    - 1098
    - 1103
    - 1108
  style: !ruby/object:Word
    word: style
    stem: style
    docFrequency: 10.0
    docPositions:
    - 1102
    - 1103
    - 1108
    - 1109
    - 1373
    - 1464
    - 1562
  display: !ruby/object:Word
    word: display
    stem: displai
    docFrequency: 5.0
    docPositions:
    - 1102
    - 1103
    - 1108
    - 1109
  inline: !ruby/object:Word
    word: inline
    stem: inlin
    docFrequency: 3.0
    docPositions:
    - 1102
    - 1109
  none: !ruby/object:Word
    word: none
    stem: none
    docFrequency: 4.0
    docPositions:
    - 1103
    - 1108
    - 1373
  'true': !ruby/object:Word
    word: 'true'
    stem: 'true'
    docFrequency: 3.0
    docPositions:
    - 1113
    - 1546
  shared: !ruby/object:Word
    word: shared
    stem: share
    docFrequency: 9.0
    docPositions:
    - 1117
    - 1123
    - 1159
    - 1368
    - 1369
    - 1370
    - 1371
    - 1374
  read: !ruby/object:Word
    word: read
    stem: read
    docFrequency: 12.0
    docPositions:
    - 1118
    - 1124
    - 1160
    - 1363
    - 1364
    - 1365
    - 1366
    - 1367
    - 1370
    - 1464
    - 1562
  watched: !ruby/object:Word
    word: watched
    stem: watch
    docFrequency: 4.0
    docPositions:
    - 1119
    - 1125
    - 1161
  listened: !ruby/object:Word
    word: listened
    stem: listen
    docFrequency: 4.0
    docPositions:
    - 1119
    - 1125
    - 1161
  detail: !ruby/object:Word
    word: detail
    stem: detail
    docFrequency: 4.0
    docPositions:
    - 1120
    - 1156
    - 1182
  french: !ruby/object:Word
    word: french
    stem: french
    docFrequency: 2.0
    docPositions:
    - 1127
  teacher: !ruby/object:Word
    word: teacher
    stem: teacher
    docFrequency: 2.0
    docPositions:
    - 1127
  invented: !ruby/object:Word
    word: invented
    stem: invent
    docFrequency: 2.0
    docPositions:
    - 1127
  rage: !ruby/object:Word
    word: rage
    stem: rage
    docFrequency: 2.0
    docPositions:
    - 1133
  against: !ruby/object:Word
    word: against
    stem: against
    docFrequency: 2.0
    docPositions:
    - 1133
  beat: !ruby/object:Word
    word: beat
    stem: beat
    docFrequency: 2.0
    docPositions:
    - 1133
  x: !ruby/object:Word
    word: x
    stem: x
    docFrequency: 2.0
    docPositions:
    - 1133
  factor: !ruby/object:Word
    word: factor
    stem: factor
    docFrequency: 2.0
    docPositions:
    - 1133
  winner: !ruby/object:Word
    word: winner
    stem: winner
    docFrequency: 2.0
    docPositions:
    - 1133
  charts: !ruby/object:Word
    word: charts
    stem: chart
    docFrequency: 2.0
    docPositions:
    - 1133
  man: !ruby/object:Word
    word: man
    stem: man
    docFrequency: 2.0
    docPositions:
    - 1142
  jailed: !ruby/object:Word
    word: jailed
    stem: jail
    docFrequency: 2.0
    docPositions:
    - 1142
  web: !ruby/object:Word
    word: web
    stem: web
    docFrequency: 4.0
    docPositions:
    - 1142
    - 1464
    - 1562
  grooming: !ruby/object:Word
    word: grooming
    stem: groom
    docFrequency: 2.0
    docPositions:
    - 1142
  boys: !ruby/object:Word
    word: boys
    stem: boi
    docFrequency: 2.0
    docPositions:
    - 1142
  cosby: !ruby/object:Word
    word: cosby
    stem: cosbi
    docFrequency: 2.0
    docPositions:
    - 1145
  accusers: !ruby/object:Word
    word: accusers
    stem: accus
    docFrequency: 2.0
    docPositions:
    - 1145
  interviews: !ruby/object:Word
    word: interviews
    stem: interview
    docFrequency: 2.0
    docPositions:
    - 1145
  published: !ruby/object:Word
    word: published
    stem: publish
    docFrequency: 2.0
    docPositions:
    - 1145
  why: !ruby/object:Word
    word: why
    stem: why
    docFrequency: 3.0
    docPositions:
    - 1154
    - 1335
  did: !ruby/object:Word
    word: did
    stem: did
    docFrequency: 2.0
    docPositions:
    - 1154
  copenhagen: !ruby/object:Word
    word: copenhagen
    stem: copenhagen
    docFrequency: 2.0
    docPositions:
    - 1154
  fail: !ruby/object:Word
    word: fail
    stem: fail
    docFrequency: 2.0
    docPositions:
    - 1154
  deliver: !ruby/object:Word
    word: deliver
    stem: deliv
    docFrequency: 2.0
    docPositions:
    - 1154
  climate: !ruby/object:Word
    word: climate
    stem: climat
    docFrequency: 2.0
    docPositions:
    - 1154
  deal: !ruby/object:Word
    word: deal
    stem: deal
    docFrequency: 2.0
    docPositions:
    - 1154
  navy: !ruby/object:Word
    word: navy
    stem: navi
    docFrequency: 2.0
    docPositions:
    - 1172
  warns: !ruby/object:Word
    word: warns
    stem: warn
    docFrequency: 2.0
    docPositions:
    - 1172
  flies: !ruby/object:Word
    word: flies
    stem: fli
    docFrequency: 2.0
    docPositions:
    - 1172
  china: !ruby/object:Word
    word: china
    stem: china
    docFrequency: 3.0
    docPositions:
    - 1172
    - 1247
  islands: !ruby/object:Word
    word: islands
    stem: island
    docFrequency: 2.0
    docPositions:
    - 1172
  unnamed: !ruby/object:Word
    word: unnamed
    stem: unnam
    docFrequency: 3.0
    docPositions:
    - 1176
    - 1180
  features: !ruby/object:Word
    word: features
    stem: featur
    docFrequency: 2.0
    docPositions:
    - 1210
  views: !ruby/object:Word
    word: views
    stem: view
    docFrequency: 2.0
    docPositions:
    - 1210
  analysis: !ruby/object:Word
    word: analysis
    stem: analysi
    docFrequency: 2.0
    docPositions:
    - 1210
  ghost: !ruby/object:Word
    word: ghost
    stem: ghost
    docFrequency: 2.0
    docPositions:
    - 1239
  town: !ruby/object:Word
    word: town
    stem: town
    docFrequency: 3.0
    docPositions:
    - 1239
    - 1366
  housing: !ruby/object:Word
    word: housing
    stem: hous
    docFrequency: 2.0
    docPositions:
    - 1247
  bubble: !ruby/object:Word
    word: bubble
    stem: bubbl
    docFrequency: 2.0
    docPositions:
    - 1247
  burst: !ruby/object:Word
    word: burst
    stem: burst
    docFrequency: 2.0
    docPositions:
    - 1247
  guerilla: !ruby/object:Word
    word: guerilla
    stem: guerilla
    docFrequency: 2.0
    docPositions:
    - 1283
  plant: !ruby/object:Word
    word: plant
    stem: plant
    docFrequency: 2.0
    docPositions:
    - 1283
  clove: !ruby/object:Word
    word: clove
    stem: clove
    docFrequency: 2.0
    docPositions:
    - 1291
  defied: !ruby/object:Word
    word: defied
    stem: defi
    docFrequency: 2.0
    docPositions:
    - 1291
  empire: !ruby/object:Word
    word: empire
    stem: empir
    docFrequency: 2.0
    docPositions:
    - 1291
  walking: !ruby/object:Word
    word: walking
    stem: walk
    docFrequency: 2.0
    docPositions:
    - 1327
  away: !ruby/object:Word
    word: away
    stem: awai
    docFrequency: 2.0
    docPositions:
    - 1327
  royal: !ruby/object:Word
    word: royal
    stem: royal
    docFrequency: 2.0
    docPositions:
    - 1335
  ballet: !ruby/object:Word
    word: ballet
    stem: ballet
    docFrequency: 2.0
    docPositions:
    - 1335
  principal: !ruby/object:Word
    word: principal
    stem: princip
    docFrequency: 2.0
    docPositions:
    - 1335
  sergei: !ruby/object:Word
    word: sergei
    stem: sergei
    docFrequency: 2.0
    docPositions:
    - 1335
  polunin: !ruby/object:Word
    word: polunin
    stem: polunin
    docFrequency: 2.0
    docPositions:
    - 1335
  quit: !ruby/object:Word
    word: quit
    stem: quit
    docFrequency: 2.0
    docPositions:
    - 1335
  randomlivestats: !ruby/object:Word
    word: randomlivestats
    stem: randomlivestat
    docFrequency: 3.0
    docPositions:
    - 1360
    - 1376
  livestatsfacts: !ruby/object:Word
    word: livestatsfacts
    stem: livestatsfact
    docFrequency: 15.0
    docPositions:
    - 1361
    - 1363
    - 1364
    - 1365
    - 1366
    - 1367
    - 1368
    - 1369
    - 1370
    - 1371
    - 1373
    - 1374
  story: !ruby/object:Word
    word: story
    stem: stori
    docFrequency: 7.0
    docPositions:
    - 1363
    - 1364
    - 1365
    - 1366
    - 1367
    - 1368
  politics: !ruby/object:Word
    word: politics
    stem: polit
    docFrequency: 2.0
    docPositions:
    - 1363
  wins: !ruby/object:Word
    word: wins
    stem: win
    docFrequency: 2.0
    docPositions:
    - 1363
  commons: !ruby/object:Word
    word: commons
    stem: common
    docFrequency: 2.0
    docPositions:
    - 1363
  vat: !ruby/object:Word
    word: vat
    stem: vat
    docFrequency: 2.0
    docPositions:
    - 1363
  votes: !ruby/object:Word
    word: votes
    stem: vote
    docFrequency: 2.0
    docPositions:
    - 1363
  middle_east: !ruby/object:Word
    word: middle_east
    stem: middle_east
    docFrequency: 2.0
    docPositions:
    - 1364
  saudi: !ruby/object:Word
    word: saudi
    stem: saudi
    docFrequency: 2.0
    docPositions:
    - 1364
  reprieve: !ruby/object:Word
    word: reprieve
    stem: repriev
    docFrequency: 2.0
    docPositions:
    - 1364
  sorcery: !ruby/object:Word
    word: sorcery
    stem: sorceri
    docFrequency: 2.0
    docPositions:
    - 1364
  case: !ruby/object:Word
    word: case
    stem: case
    docFrequency: 2.0
    docPositions:
    - 1364
  mona: !ruby/object:Word
    word: mona
    stem: mona
    docFrequency: 2.0
    docPositions:
    - 1365
  lisa: !ruby/object:Word
    word: lisa
    stem: lisa
    docFrequency: 2.0
    docPositions:
    - 1365
  high: !ruby/object:Word
    word: high
    stem: high
    docFrequency: 2.0
    docPositions:
    - 1365
  cholesterol: !ruby/object:Word
    word: cholesterol
    stem: cholesterol
    docFrequency: 2.0
    docPositions:
    - 1365
  north: !ruby/object:Word
    word: north
    stem: north
    docFrequency: 2.0
    docPositions:
    - 1366
  america: !ruby/object:Word
    word: america
    stem: america
    docFrequency: 2.0
    docPositions:
    - 1366
  england: !ruby/object:Word
    word: england
    stem: england
    docFrequency: 2.0
    docPositions:
    - 1366
  cornwall: !ruby/object:Word
    word: cornwall
    stem: cornwal
    docFrequency: 2.0
    docPositions:
    - 1366
  lines: !ruby/object:Word
    word: lines
    stem: line
    docFrequency: 2.0
    docPositions:
    - 1366
  make: !ruby/object:Word
    word: make
    stem: make
    docFrequency: 3.0
    docPositions:
    - 1366
    - 1464
  road: !ruby/object:Word
    word: road
    stem: road
    docFrequency: 2.0
    docPositions:
    - 1366
  dangerous: !ruby/object:Word
    word: dangerous
    stem: danger
    docFrequency: 2.0
    docPositions:
    - 1366
  australasia: !ruby/object:Word
    word: australasia
    stem: australasia
    docFrequency: 2.0
    docPositions:
    - 1367
  in_pictures: !ruby/object:Word
    word: in_pictures
    stem: in_pictur
    docFrequency: 2.0
    docPositions:
    - 1367
  photos: !ruby/object:Word
    word: photos
    stem: photo
    docFrequency: 2.0
    docPositions:
    - 1367
  right: !ruby/object:Word
    word: right
    stem: right
    docFrequency: 5.0
    docPositions:
    - 1368
    - 1371
    - 1381
    - 1562
  country_profiles: !ruby/object:Word
    word: country_profiles
    stem: country_profil
    docFrequency: 2.0
    docPositions:
    - 1368
  bsp: !ruby/object:Word
    word: bsp
    stem: bsp
    docFrequency: 5.0
    docPositions:
    - 1369
    - 1370
    - 1371
    - 1374
  live_stats: !ruby/object:Word
    word: live_stats
    stem: live_stat
    docFrequency: 5.0
    docPositions:
    - 1369
    - 1370
    - 1371
    - 1374
  map: !ruby/object:Word
    word: map
    stem: map
    docFrequency: 5.0
    docPositions:
    - 1369
    - 1370
    - 1371
    - 1374
  traffic: !ruby/object:Word
    word: traffic
    stem: traffic
    docFrequency: 2.0
    docPositions:
    - 1369
  currently: !ruby/object:Word
    word: currently
    stem: current
    docFrequency: 2.0
    docPositions:
    - 1369
  below: !ruby/object:Word
    word: below
    stem: below
    docFrequency: 2.0
    docPositions:
    - 1369
  normal: !ruby/object:Word
    word: normal
    stem: normal
    docFrequency: 2.0
    docPositions:
    - 1369
  lsf: !ruby/object:Word
    word: lsf
    stem: lsf
    docFrequency: 3.0
    docPositions:
    - 1370
    - 1371
  pages: !ruby/object:Word
    word: pages
    stem: page
    docFrequency: 2.0
    docPositions:
    - 1370
  footermostpop: !ruby/object:Word
    word: footermostpop
    stem: footermostpop
    docFrequency: 2.0
    docPositions:
    - 1373
  webkit: !ruby/object:Word
    word: webkit
    stem: webkit
    docFrequency: 2.0
    docPositions:
    - 1373
  size: !ruby/object:Word
    word: size
    stem: size
    docFrequency: 2.0
    docPositions:
    - 1373
  adjust: !ruby/object:Word
    word: adjust
    stem: adjust
    docFrequency: 2.0
    docPositions:
    - 1373
  math: !ruby/object:Word
    word: math
    stem: math
    docFrequency: 5.0
    docPositions:
    - 1373
    - 1374
  floor: !ruby/object:Word
    word: floor
    stem: floor
    docFrequency: 3.0
    docPositions:
    - 1373
    - 1374
  random: !ruby/object:Word
    word: random
    stem: random
    docFrequency: 3.0
    docPositions:
    - 1373
    - 1374
  mostpopular: !ruby/object:Word
    word: mostpopular
    stem: mostpopular
    docFrequency: 2.0
    docPositions:
    - 1374
  section: !ruby/object:Word
    word: section
    stem: section
    docFrequency: 2.0
    docPositions:
    - 1374
  clear: !ruby/object:Word
    word: clear
    stem: clear
    docFrequency: 2.0
    docPositions:
    - 1374
  nowmost: !ruby/object:Word
    word: nowmost
    stem: nowmost
    docFrequency: 2.0
    docPositions:
    - 1381
  products: !ruby/object:Word
    word: products
    stem: product
    docFrequency: 2.0
    docPositions:
    - 1409
  services: !ruby/object:Word
    word: services
    stem: servic
    docFrequency: 2.0
    docPositions:
    - 1409
  mobiles: !ruby/object:Word
    word: mobiles
    stem: mobil
    docFrequency: 2.0
    docPositions:
    - 1411
  widgets: !ruby/object:Word
    word: widgets
    stem: widget
    docFrequency: 3.0
    docPositions:
    - 1412
    - 1556
  alerts: !ruby/object:Word
    word: alerts
    stem: alert
    docFrequency: 2.0
    docPositions:
    - 1412
  podcasts: !ruby/object:Word
    word: podcasts
    stem: podcast
    docFrequency: 2.0
    docPositions:
    - 1414
  idsign: !ruby/object:Word
    word: idsign
    stem: idsign
    docFrequency: 2.0
    docPositions:
    - 1441
  term: !ruby/object:Word
    word: term
    stem: term
    docFrequency: 3.0
    docPositions:
    - 1464
    - 1562
  capital: !ruby/object:Word
    word: capital
    stem: capit
    docFrequency: 2.0
    docPositions:
    - 1464
  tv: !ruby/object:Word
    word: tv
    stem: tv
    docFrequency: 2.0
    docPositions:
    - 1464
  radio: !ruby/object:Word
    word: radio
    stem: radio
    docFrequency: 2.0
    docPositions:
    - 1464
  cbeebies: !ruby/object:Word
    word: cbeebies
    stem: cbeebi
    docFrequency: 2.0
    docPositions:
    - 1464
  food: !ruby/object:Word
    word: food
    stem: food
    docFrequency: 2.0
    docPositions:
    - 1464
  iwonder: !ruby/object:Word
    word: iwonder
    stem: iwond
    docFrequency: 2.0
    docPositions:
    - 1464
  bitesize: !ruby/object:Word
    word: bitesize
    stem: bites
    docFrequency: 2.0
    docPositions:
    - 1464
  music: !ruby/object:Word
    word: music
    stem: music
    docFrequency: 2.0
    docPositions:
    - 1464
  earth: !ruby/object:Word
    word: earth
    stem: earth
    docFrequency: 2.0
    docPositions:
    - 1464
  northern: !ruby/object:Word
    word: northern
    stem: northern
    docFrequency: 2.0
    docPositions:
    - 1464
  ireland: !ruby/object:Word
    word: ireland
    stem: ireland
    docFrequency: 2.0
    docPositions:
    - 1464
  scotland: !ruby/object:Word
    word: scotland
    stem: scotland
    docFrequency: 2.0
    docPositions:
    - 1464
  wales: !ruby/object:Word
    word: wales
    stem: wale
    docFrequency: 2.0
    docPositions:
    - 1464
  terms: !ruby/object:Word
    word: terms
    stem: term
    docFrequency: 2.0
    docPositions:
    - 1464
  advertise: !ruby/object:Word
    word: advertise
    stem: advertis
    docFrequency: 2.0
    docPositions:
    - 1464
  ad: !ruby/object:Word
    word: ad
    stem: ad
    docFrequency: 2.0
    docPositions:
    - 1464
  choices: !ruby/object:Word
    word: choices
    stem: choic
    docFrequency: 2.0
    docPositions:
    - 1464
  contact: !ruby/object:Word
    word: contact
    stem: contact
    docFrequency: 2.0
    docPositions:
    - 1464
  parental: !ruby/object:Word
    word: parental
    stem: parent
    docFrequency: 2.0
    docPositions:
    - 1464
  guidance: !ruby/object:Word
    word: guidance
    stem: guidanc
    docFrequency: 2.0
    docPositions:
    - 1464
  copyright: !ruby/object:Word
    word: copyright
    stem: copyright
    docFrequency: 6.0
    docPositions:
    - 1464
    - 1503
    - 1518
    - 1531
    - 1562
  viewed: !ruby/object:Word
    word: viewed
    stem: view
    docFrequency: 3.0
    docPositions:
    - 1464
    - 1562
  up: !ruby/object:Word
    word: up
    stem: up
    docFrequency: 3.0
    docPositions:
    - 1464
    - 1562
  browser: !ruby/object:Word
    word: browser
    stem: browser
    docFrequency: 7.0
    docPositions:
    - 1464
    - 1562
  sheets: !ruby/object:Word
    word: sheets
    stem: sheet
    docFrequency: 5.0
    docPositions:
    - 1464
    - 1562
  css: !ruby/object:Word
    word: css
    stem: css
    docFrequency: 5.0
    docPositions:
    - 1464
    - 1562
  view: !ruby/object:Word
    word: view
    stem: view
    docFrequency: 3.0
    docPositions:
    - 1464
    - 1562
  current: !ruby/object:Word
    word: current
    stem: current
    docFrequency: 3.0
    docPositions:
    - 1464
    - 1562
  full: !ruby/object:Word
    word: full
    stem: full
    docFrequency: 3.0
    docPositions:
    - 1464
    - 1562
  visual: !ruby/object:Word
    word: visual
    stem: visual
    docFrequency: 3.0
    docPositions:
    - 1464
    - 1562
  consider: !ruby/object:Word
    word: consider
    stem: consid
    docFrequency: 3.0
    docPositions:
    - 1464
    - 1562
  upgrading: !ruby/object:Word
    word: upgrading
    stem: upgrad
    docFrequency: 3.0
    docPositions:
    - 1464
    - 1562
  software: !ruby/object:Word
    word: software
    stem: softwar
    docFrequency: 3.0
    docPositions:
    - 1464
    - 1562
  enabling: !ruby/object:Word
    word: enabling
    stem: enabl
    docFrequency: 3.0
    docPositions:
    - 1464
    - 1562
  so: !ruby/object:Word
    word: so
    stem: so
    docFrequency: 3.0
    docPositions:
    - 1464
    - 1562
  isactive: !ruby/object:Word
    word: isactive
    stem: isact
    docFrequency: 12.0
    docPositions:
    - 1473
    - 1482
    - 1488
    - 1502
    - 1509
    - 1517
    - 1524
    - 1530
    - 1544
    - 1555
  analytics: !ruby/object:Word
    word: analytics
    stem: analyt
    docFrequency: 9.0
    docPositions:
    - 1473
    - 1474
    - 1475
    - 1476
    - 1482
    - 1488
    - 1544
    - 1555
  bbcdotcom: !ruby/object:Word
    word: bbcdotcom
    stem: bbcdotcom
    docFrequency: 5.0
    docPositions:
    - 1474
    - 1475
    - 1476
  init: !ruby/object:Word
    word: init
    stem: init
    docFrequency: 2.0
    docPositions:
    - 1475
  unescape: !ruby/object:Word
    word: unescape
    stem: unescap
    docFrequency: 5.0
    docPositions:
    - 1483
    - 1504
    - 1519
    - 1556
  protocol: !ruby/object:Word
    word: protocol
    stem: protocol
    docFrequency: 6.0
    docPositions:
    - 1483
    - 1504
    - 1519
    - 1537
    - 1547
  https: !ruby/object:Word
    word: https
    stem: http
    docFrequency: 11.0
    docPositions:
    - 1483
    - 1504
    - 1519
    - 1537
    - 1547
  sb: !ruby/object:Word
    word: sb
    stem: sb
    docFrequency: 2.0
    docPositions:
    - 1483
  scorecardresearch: !ruby/object:Word
    word: scorecardresearch
    stem: scorecardresearch
    docFrequency: 2.0
    docPositions:
    - 1483
  beacon: !ruby/object:Word
    word: beacon
    stem: beacon
    docFrequency: 3.0
    docPositions:
    - 1483
    - 1489
  script: !ruby/object:Word
    word: script
    stem: script
    docFrequency: 7.0
    docPositions:
    - 1483
    - 1504
    - 1519
    - 1546
    - 1548
    - 1556
  comscore: !ruby/object:Word
    word: comscore
    stem: comscor
    docFrequency: 2.0
    docPositions:
    - 1489
  nielsen: !ruby/object:Word
    word: nielsen
    stem: nielsen
    docFrequency: 11.0
    docPositions:
    - 1502
    - 1503
    - 1509
    - 1510
    - 1512
    - 1517
    - 1518
    - 1524
    - 1530
    - 1531
  au: !ruby/object:Word
    word: au
    stem: au
    docFrequency: 6.0
    docPositions:
    - 1502
    - 1504
    - 1509
    - 1511
  online: !ruby/object:Word
    word: online
    stem: onlin
    docFrequency: 6.0
    docPositions:
    - 1503
    - 1510
    - 1512
    - 1518
    - 1531
  secure: !ruby/object:Word
    word: secure
    stem: secur
    docFrequency: 6.0
    docPositions:
    - 1504
    - 1511
    - 1519
    - 1525
    - 1537
  imrworldwide: !ruby/object:Word
    word: imrworldwide
    stem: imrworldwid
    docFrequency: 4.0
    docPositions:
    - 1504
    - 1519
    - 1537
  start: !ruby/object:Word
    word: start
    stem: start
    docFrequency: 2.0
    docPositions:
    - 1510
  sitecensus: !ruby/object:Word
    word: sitecensus
    stem: sitecensu
    docFrequency: 3.0
    docPositions:
    - 1510
    - 1512
  nol_t: !ruby/object:Word
    word: nol_t
    stem: nol_t
    docFrequency: 3.0
    docPositions:
    - 1511
    - 1525
  cid: !ruby/object:Word
    word: cid
    stem: cid
    docFrequency: 3.0
    docPositions:
    - 1511
    - 1525
  server: !ruby/object:Word
    word: server
    stem: server
    docFrequency: 3.0
    docPositions:
    - 1511
    - 1525
  record: !ruby/object:Word
    word: record
    stem: record
    docFrequency: 3.0
    docPositions:
    - 1511
    - 1525
  nz: !ruby/object:Word
    word: nz
    stem: nz
    docFrequency: 6.0
    docPositions:
    - 1517
    - 1519
    - 1524
    - 1525
  image: !ruby/object:Word
    word: image
    stem: imag
    docFrequency: 2.0
    docPositions:
    - 1533
  onerror: !ruby/object:Word
    word: onerror
    stem: onerror
    docFrequency: 3.0
    docPositions:
    - 1534
    - 1535
  onload: !ruby/object:Word
    word: onload
    stem: onload
    docFrequency: 3.0
    docPositions:
    - 1534
    - 1535
  'null': !ruby/object:Word
    word: 'null'
    stem: 'null'
    docFrequency: 2.0
    docPositions:
    - 1535
  cgi: !ruby/object:Word
    word: cgi
    stem: cgi
    docFrequency: 2.0
    docPositions:
    - 1537
  bin: !ruby/object:Word
    word: bin
    stem: bin
    docFrequency: 2.0
    docPositions:
    - 1537
  ci: !ruby/object:Word
    word: ci
    stem: ci
    docFrequency: 2.0
    docPositions:
    - 1537
  amp: !ruby/object:Word
    word: amp
    stem: amp
    docFrequency: 7.0
    docPositions:
    - 1537
    - 1538
  cg: !ruby/object:Word
    word: cg
    stem: cg
    docFrequency: 2.0
    docPositions:
    - 1537
  cc: !ruby/object:Word
    word: cc
    stem: cc
    docFrequency: 2.0
    docPositions:
    - 1537
  si: !ruby/object:Word
    word: si
    stem: si
    docFrequency: 2.0
    docPositions:
    - 1537
  escape: !ruby/object:Word
    word: escape
    stem: escap
    docFrequency: 3.0
    docPositions:
    - 1537
    - 1538
  rp: !ruby/object:Word
    word: rp
    stem: rp
    docFrequency: 2.0
    docPositions:
    - 1537
  referrer: !ruby/object:Word
    word: referrer
    stem: referr
    docFrequency: 2.0
    docPositions:
    - 1538
  ts: !ruby/object:Word
    word: ts
    stem: ts
    docFrequency: 2.0
    docPositions:
    - 1538
  compact: !ruby/object:Word
    word: compact
    stem: compact
    docFrequency: 2.0
    docPositions:
    - 1538
  rnd: !ruby/object:Word
    word: rnd
    stem: rnd
    docFrequency: 2.0
    docPositions:
    - 1538
  em: !ruby/object:Word
    word: em
    stem: em
    docFrequency: 7.0
    docPositions:
    - 1546
    - 1547
    - 1548
  async: !ruby/object:Word
    word: async
    stem: async
    docFrequency: 2.0
    docPositions:
    - 1546
  me: !ruby/object:Word
    word: me
    stem: me
    docFrequency: 3.0
    docPositions:
    - 1547
  ssl: !ruby/object:Word
    word: ssl
    stem: ssl
    docFrequency: 2.0
    docPositions:
    - 1547
  cdn: !ruby/object:Word
    word: cdn
    stem: cdn
    docFrequency: 2.0
    docPositions:
    - 1547
  effectivemeasure: !ruby/object:Word
    word: effectivemeasure
    stem: effectivemeasur
    docFrequency: 2.0
    docPositions:
    - 1547
  getelementsbytagname: !ruby/object:Word
    word: getelementsbytagname
    stem: getelementsbytagnam
    docFrequency: 2.0
    docPositions:
    - 1548
  ads: !ruby/object:Word
    word: ads
    stem: ad
    docFrequency: 2.0
    docPositions:
    - 1555
  outbrain: !ruby/object:Word
    word: outbrain
    stem: outbrain
    docFrequency: 3.0
    docPositions:
    - 1556
  region: !ruby/object:Word
    word: region
    stem: region
    docFrequency: 3.0
    docPositions:
    - 1559
  main: !ruby/object:Word
    word: main
    stem: main
    docFrequency: 3.0
    docPositions:
    - 1559
  download: !ruby/object:Word
    word: download
    stem: download
    docFrequency: 2.0
    docPositions:
    - 1559
  setlabel: !ruby/object:Word
    word: setlabel
    stem: setlabel
    docFrequency: 2.0
    docPositions:
    - 1560
  searchsuggestion: !ruby/object:Word
    word: searchsuggestion
    stem: searchsuggest
    docFrequency: 2.0
    docPositions:
    - 1560
  linksplease: !ruby/object:Word
    word: linksplease
    stem: linkspleas
    docFrequency: 2.0
    docPositions:
    - 1561
  sponsormost: !ruby/object:Word
    word: sponsormost
    stem: sponsormost
    docFrequency: 2.0
    docPositions:
    - 1562
lineCount: 1563
wordCount: 4200
rank: 0.2540983606557377
title: BBC News - Bletchley's code-cracking Colossus
links:
- http://www.bbc.co.uk/
- http://www.bbc.co.uk/accessibility/
- http://news.bbc.co.uk
- http://news.bbc.co.uk/sport1/hi/default.stm
- http://www.bbc.co.uk/weather/
- http://www.bbc.co.uk/onthisday
- http://www.bbc.co.uk/blogs/theeditors/
- http://www.bbc.co.uk/worldservice/
- http://newsvote.bbc.co.uk/mpapps/pagetools/email/news.bbc.co.uk/2/hi/technology/8492762.stm
- http://newsvote.bbc.co.uk/mpapps/pagetools/print/news.bbc.co.uk/2/hi/technology/8492762.stm?ad=1
- http://del.icio.us/post?url=http://news.bbc.co.uk/2/hi/technology/8492762.stm&title=Bletchley's
  code-cracking Colossus
- http://digg.com/submit?url=http://news.bbc.co.uk/2/hi/technology/8492762.stm&title=Bletchley's
  code-cracking Colossus
- http://reddit.com/submit?url=http://news.bbc.co.uk/2/hi/technology/8492762.stm&title=Bletchley's
  code-cracking Colossus
- http://www.facebook.com/sharer.php?u=http://news.bbc.co.uk/2/hi/technology/8492762.stm
- http://www.stumbleupon.com/submit?url=http://news.bbc.co.uk/2/hi/technology/8492762.stm&title=Bletchley's
  code-cracking Colossus
- http://news.bbc.co.uk/1/hi/help/6915817.stm
- http://newsvote.bbc.co.uk/mpapps/pagetools/email/news.bbc.co.uk/2/hi/technology/8492762.stm
- http://newsvote.bbc.co.uk/mpapps/pagetools/print/news.bbc.co.uk/2/hi/technology/8492762.stm?ad=1
- http://www.bletchleypark.org.uk/
- http://www.tnmoc.org/
- http://ed-thelen.org/comp-hist/EarlyBritish.html
- http://www.codesandciphers.org.uk/
- http://www.ivorcatt.com/47c.htm
- http://www.bbc.co.uk/news/world-europe-35093799
- http://www.bbc.co.uk/news/world-us-canada-35098368
- http://www.bbc.co.uk/2/hi/8423340.stm
- http://www.bbc.co.uk/news/world-us-canada-35097279
- http://www.bbc.co.uk/news/world-middle-east-35097609
- http://www.bbc.co.uk/news/uk-scotland-glasgow-west-21759534
- http://www.bbc.co.uk/news/entertainment-arts-33673593
- http://www.bbc.co.uk/news/in-pictures-35070104
- http://www.bbc.co.uk/news/business-35090519
- http://www.bbc.co.uk/2/hi/8426835.stm
- http://www.bbc.co.uk/news/10462520
- http://www.bbc.co.uk/news/world-us-canada-35055867
- http://www.bbc.co.uk/news/world-asia-35097054
- http%3A%2F%2Fwww.bbc.com%2Frussian%2Finternational%2F2015%2F12%2F151214_jihadi_mother
- http%3A%2F%2Fwww.bbc.com%2Fpersian%2Fworld%2F2015%2F12%2F151214_sam_turkey_kurdish
- http://www.bbc.co.uk/news/magazine-17390729
- http://www.bbc.co.uk/news/magazine-17390729
- http://www.bbc.co.uk/news/magazine-18551857
- http://www.bbc.co.uk/news/magazine-18551857
- http://newsvote.bbc.co.uk/go/news/int/story/services/-/email/news
- http://news.bbc.co.uk/go/news/int/story/services/-/1/hi/help/6358397.stm
- http://news.bbc.co.uk/go/news/int/story/services/-/1/hi/help/4735697.stm
- http://news.bbc.co.uk/go/news/int/story/services/-/1/hi/help/3223484.stm
- http://www.bbcworldservice.com/podcasts
- https://id.bbc.co.uk/users/signin?s=sb&target_resource=http%3A%2F%2Fidentity%2Fpolicies%2Fdna%2Fadult
- http://www.bbc.com/news/
- http://www.bbc.co.uk/sport/
- http://www.bbc.co.uk/weather/
- http://www.bbc.com/capital/
- http://www.bbc.co.uk/tv/
- http://www.bbc.co.uk/radio/
- http://www.bbc.co.uk/cbbc
- http://www.bbc.co.uk/cbeebies
- http://www.bbc.co.uk/makeitdigital
- http://www.bbc.co.uk/food/
- http://www.bbc.co.uk/iwonder
- http://www.bbc.co.uk/education
- http://www.bbc.co.uk/music/
- http://www.bbc.com/earth/
- http://www.bbc.co.uk/local/
- http://www.bbc.co.uk/northernireland/
- http://www.bbc.co.uk/scotland/
- http://www.bbc.co.uk/wales/
- http://m.bbc.co.uk/
- http://www.bbc.co.uk/terms/
- http://www.bbc.co.uk/aboutthebbc/
- http://advertising.bbcworldwide.com
- http://www.bbc.co.uk/privacy/
- http://www.bbc.co.uk/accessibility/
- http://www.bbc.co.uk/privacy/cookies/international/
- http://www.bbc.co.uk/privacy/cookies/about
- http://news.bbc.co.uk/newswatch/ifs/hi/feedback/default.stm
- http://www.bbc.co.uk/guidance/
- http://www.bbc.co.uk/help/web/links/
rawText: "\n\n\n\r\n\r\n\r\n\r\n\tif(typeof BBC.adverts != 'undefined' && typeof BBC.adverts.setPageVersion
  != 'undefined'){\r\n\t\tBBC.adverts.setPageVersion('4');\r\n\t}\r\n\r\n// <![CDATA[\r\nrequire([\"istats-1\"],
  function (istats) {\r\nfunction countername(u) {\r\n   var countername = [];\r\n
  \   u = u.replace(/\\.[^.\\/]+$/, '');\r\n    u = u.replace(/[#][^#]+$/, '' );\r\n
  \   u = u.replace(/[\\?][^\\?]+$/, '' );\r\n    u = u.replace(/\\/newsid_\\d+/g,
  '/');\r\n    u = u.replace(/\\/[12]\\//, '/');\r\n    u = u.replace(/\\/reviews\\//,
  '/');\r\n    u = u.replace(/\\/sport[12]\\//, '/sport/');\r\n    u = u.replace(/\\/bbc_sport\\//,
  '/sport/');\r\n    u = u.replace(/\\/(hi|mobile)\\//, '/');\r\n    u = u.replace(/\\/(uk|i)fs\\//,
  '/');\r\n    var path    = u.split('/').slice(3);\r\n    var asset_id_re  = /(\\d+)\\/?$/;\r\n
  \   var asset_id = '';\r\n    if (matches = asset_id_re.exec( path[path.length-1]
  )) {\r\n        asset_id = matches[1];\r\n    }\r\n    var prod_name  = 'news';\r\n
  \   var prod = new Array();\r\n    prod['sport']    = /sport/;\r\n    prod['weather']
  \ = /weather/;\r\n    prod['cbbc']     = /cbbc/;\r\n    for (var name in prod) {\r\n
  \       if (u.match(prod[name])) {\r\n            prod_name = name;\r\n            break;\r\n
  \       }\r\n    }\r\n    countername.push(prod_name);\r\n    for (var i=0; i<path.length;
  i++) {\r\n        var part = path[i];\r\n        if (part && (part != prod_name)
  && (part != asset_id) && (part != 'default')) {\r\n            countername.push(part);\r\n
  \       }\r\n    }\r\n    if (asset_id) {countername.push(asset_id);}\r\n    countername.push('page');\r\n
  \   return countername.join('.');\r\n}\r\nistats_countername = countername(location.href);\r\n});\r\n\r\n\t\r\n\t\r\n\t\t\n\n
  \  \n\n\n\n    \n\n\n\n\n\n\n /*<![CDATA[*/ if (bbccookies.isAllowed('s1')) { require(['istats-1'],
  function (istats) {  istats.invoke(); }); } /*]]>*//*<![CDATA[*/ if (bbccookies.isAllowed('s1'))
  { (function () { require(['istats-1'], function (istats) { istatsTrackingUrl = istats.getDefaultURL();
  if (istats.isEnabled() && bbcFlagpoles_istats === 'ON') { sitestat(istatsTrackingUrl);
  } else { window.ns_pixelUrl = istatsTrackingUrl; /* used by Flash library to track
  */ } function sitestat(n) { var j = document, f = j.location, b = \"\"; if (j.cookie.indexOf(\"st_ux=\")
  != -1) { var k = j.cookie.split(\";\"); var e = \"st_ux\", h = document.domain,
  a = \"/\"; if (typeof ns_ != \"undefined\" && typeof ns_.ux != \"undefined\") {
  e = ns_.ux.cName || e; h = ns_.ux.cDomain || h; a = ns_.ux.cPath || a } for (var
  g = 0, f = k.length; g < f; g++) { var m = k[g].indexOf(\"st_ux=\"); if (m != -1)
  { b = \"&\" + decodeURI(k[g].substring(m + 6)) } } bbccookies.set(e + \"=; expires=\"
  + new Date(new Date().getTime() - 60).toGMTString() + \"; path=\" + a + \"; domain=\"
  + h); } window.ns_pixelUrl = n;  } }); })(); } else { window.istats = {enabled:
  false}; } /*]]>*/   \n     \r\n\r\n       <![CDATA[ <div id=\"bbccookies-prompt\"
  class=\"bbccookies-w\"> <h2> Cookies on the BBC website  <p> The BBC has updated
  its cookie policy. We use cookies to ensure that we give you the best experience
  on our website. This includes cookies from third party social media websites if
  you visit a page which contains embedded content from social media. Such third party
  cookies may track your use of the BBC website.<span class=\"bbccookies-international-message\">
  We and our partners also use cookies to ensure we show you advertising that is relevant
  to you. If you continue without changing your settings, we'll assume that you are
  happy to receive all cookies on the BBC website. However, you can <a href=\"/privacy/cookies/managing/cookie-settings.html\">change
  your cookie settings at any time.  <ul> <li id=\"bbccookies-continue\"> <button
  type=\"button\" id=\"bbccookies-continue-button\">Continue  <li id=\"bbccookies-more\"><a
  href=\"/privacy/cookies/bbc\">Find out more  ]]> /*<![CDATA[*/ (function(){if(bbccookies._showPrompt()){var
  i=document,b=i.getElementById(\"blq-pre-mast\"),f=i.getElementById(\"blq-global\"),h=i.getElementById(\"blq-container\"),c=i.getElementById(\"blq-bbccookies-tmpl\"),a,g,e;if(b&&i.createElement){a=i.createElement(\"div\");a.id=\"bbccookies\";e=c.innerHTML;e=e.replace(\"<\"+\"![CDATA[\",\"\").replace(\"]]\"+\">\",\"\");a.innerHTML=e;if(f){f.insertBefore(a,b)}else{h.insertBefore(a,b)}g=i.getElementById(\"bbccookies-continue-button\");g.onclick=function(){a.parentNode.removeChild(a);return
  false};bbccookies._setPolicy(bbccookies.readPolicy())}}})(); /*]]>*/       British
  Broadcasting CorporationHome    Accessibility links Skip to content  Skip to local
  navigation  Skip to bbc.co.uk navigation Skip to bbc.co.uk search  Accessibility
  Help          \r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\r\n\t\r\n\n\r\n\r\n\tBBC
  News Updated every minute of every day\r\n\r\n\r\n\r\n\t\r\n\t\t\n\n    \n        \n
  \       \n\t\n            \n            \n\t\t\n            \n            \n\t\n\n\t\t\t\n\n\n\t\n
  \               \n\n                \n\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tOne-Minute
  World News\n\t\t\t\t\n\t\t\t\n                \n\n                \n\n\n\n\n\n\n
  \           \n                \n                    \n                \n            \n\t\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\t\r\n\r\n\r\n\r\n\r\n
  \  \r\n\r\n\r\n\r\n\t\r\n\n\n\n\n\n\n\t\t\t\n\n\n\t\n\t\t\n\t\n\t\t\n\t\t\n\t\t\t\n\t\t\t\tNews
  Front Page\n\t\t\t\n\t\t\t\n\t\t\t\t\n\t\t\n\t\n\t\n\t\n\t\n\t\n\n\n\n\n\t\n\t\t\n\t\t\n\t\t\t\n\t\t\t\tAfrica\n\t\t\t\n\t\t\t\n\t\t\n\t\n\t\n\t\n\t\n\t\n\n\n\n\n\t\n\t\t\n\t\t\n\t\t\t\n\t\t\t\tAmericas\n\t\t\t\n\t\t\t\n\t\t\n\t\n\t\n\t\n\t\n\t\n\n\n\n\n\t\n\t\t\n\t\t\n\t\t\t\n\t\t\t\tAsia-Pacific\n\t\t\t\n\t\t\t\n\t\t\n\t\n\t\n\t\n\t\n\t\n\n\n\n\n\t\n\t\t\n\t\t\n\t\t\t\n\t\t\t\tEurope\n\t\t\t\n\t\t\t\n\t\t\n\t\n\t\n\t\n\t\n\t\n\n\n\n\n\t\n\t\t\n\t\t\n\t\t\t\n\t\t\t\tMiddle
  East\n\t\t\t\n\t\t\t\n\t\t\n\t\n\t\n\t\n\t\n\t\n\n\n\n\n\t\n\t\t\n\t\t\n\t\t\t\n\t\t\t\tSouth
  Asia\n\t\t\t\n\t\t\t\n\t\t\n\t\n\t\n\t\n\t\n\t\n\n\n\n\n\t\n\t\t\n\t\t\n\t\t\t\n\t\t\t\tUK\n\t\t\t\n\t\t\t\n\t\t\n\t\n\t\n\t\n\t\n\t\n\n\n\n\n\t\n\t\t\n\t\t\n\t\t\t\n\t\t\t\tBusiness\n\t\t\t\n\t\t\t\n\t\t\n\t\n\t\n\t\n\t\n\t\n\n\n\n\n\t\n\t\t\n\t\t\n\t\t\t\n\t\t\t\tHealth\n\t\t\t\n\t\t\t\n\t\t\n\t\n\t\n\t\n\t\n\t\n\n\n\n\n\t\n\t\t\n\t\t\n\t\t\t\n\t\t\t\tScience
  & Environment\n\t\t\t\n\t\t\t\n\t\t\n\t\n\t\n\t\n\t\n\t\n\n\n\n\n\t\n\t\t\n\t\t\t\n\t\t\t\tTechnology\n\t\t\t\n\t\t\t\n\t\t\t\n\n\t\t\n\t\t\n\t\n\t\n\t\n\t\n\t\n\n\n\n\n\t\n\t\t\n\t\t\n\t\t\t\n\t\t\t\tEntertainment\n\t\t\t\n\t\t\t\n\t\t\n\t\n\t\n\t\n\t\n\t\n\n\n\n\n\t\n\t\t\n\t\t\n\t\t\t\n\t\t\t\tAlso
  in the news\n\t\t\t\n\t\t\t\n\t\t\n\t\n\t\n\t-----------------\n\t\n\t\n\n\n\n\n\t\n\t\t\n\t\t\n\t\t\t\n\t\t\t\tVideo
  and Audio\n\t\t\t\n\t\t\t\n\t\t\n\t\n\t\n\t-----------------\n\t\n\t\r\n\r\n\r\nBBC.adverts.write(\"button\");\r\nBBC.adverts.show(\"button\");\n\t\t\t\tProgrammes\n\t\t\t\n\t\t\t\n\t\t\n\t\n\t\n\t\n\t\n\t\n\n\n\n\n\t\n\t\t\n\t\t\n\t\t\t\n\t\t\t\tHave
  Your Say\n\t\t\t\n\t\t\t\n\t\t\n\t\n\t\n\t\n\t\n\t\n\n\n\n\n\t\n\t\t\n\t\t\n\t\t\t\n\t\t\t\tIn
  Pictures\n\t\t\t\n\t\t\t\n\t\t\n\t\n\t\n\t\n\t\n\t\n\n\n\n\n\t\n\t\t\n\t\t\n\t\t\t\n\t\t\t\tCountry
  Profiles\n\t\t\t\n\t\t\t\n\t\t\n\t\n\t\n\t\n\t\n\t\n\n\n\n\n\t\n\t\t\n\t\t\n\t\t\t\n\t\t\t\tSpecial
  Reports\n\t\t\t\n\t\t\t\n\t\t\n\t\n\t\n\t\n\t\n\t\n\n\n\n\n\n\t\n\n\n\n\n\n\t\t\n\n\n\n\n\nRelated
  BBC sites\nSport\n\tWeather\n\tOn This Day\n\tEditors' Blog\n\tBBC World Service\n\t\t\n\n\n\t\n\t\t\n\t\n
  \       \n        \n        \n\n      \n    \n\n    \n\n    \n\n    \n\n    \n\n
  \   \n\n    \n\n    \n\n    \n\n    \n\n    \n\n    \n\n    \n\n    \n\n    \n\n
  \   \n\n    \n\n    \n\n    \n\n    \n\n \n            \n\t\t\t\n                        \n
  \                       \nPage last updated at 10:48 GMT, Tuesday, 2 February 2010\n\n\n\n\n
  \                       \n    \n        \n                \n                E-mail
  this to a friend\n            \n            \n\t       \t\n\t \tPrintable version\n
  \           \n        \n\t\t    \n    \n    \n\n\n\n                        \n                    \n
  \               \n\t\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\t\tBletchley's code-cracking
  Colossus\n\t\t\t\t\n\t\t\t\n\t\t\n\t\t\n                        \n\n\n\n\n\n\t\n\t\n\t\n\t\n\t\t\n\t\t\tPlease
  turn on JavaScript. Media requires JavaScript to play.  \n\t\t\n\t\t\n\t\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n//<![CDATA[\nvar
  empId = 'emp_8486345',\n    settings,\nsettings = bbc.fmtj.av.emp.getPlayerSettings(empId);\nbbc.fmtj.av.emp.registerPlayer(empId,
  settings);\n//]]>\n\n\t\n\t\n\t\n\t\n\t\tAdvertisement\n\t\n\t\n\t\n\t\n\tRetired
  British spy catcher Tony Sale rebuilt Colossus, the world's first programmable electronic
  computer.\n\n\n\n\n\nThe world's first large-scale, electronic programmable computer
  was created to do one job - crack Hitler's codes. Engineers and code-crackers describe
  life working on Colossus as part of a BBC News series on British computer pioneers.In
  June 1944, the Allies were debating when to go ahead with the invasion of Europe
  - D Day. Eisenhower's decision was directly influenced by information revealed by
  code-cracking machine Colossus. In messages it decoded, it was discovered that the
  trick the Allies sought to play on the Germans had worked. Hitler was convinced
  that the Allies would land near Calais and had kept two divisions in Holland and
  Belgium to counter this phantom attack. It meant the Allies would have time to muster
  their troops on the beach following the landings and dig in before reinforcements
  could arrive. Human errorColossus - the world's first large-scale, electronic programmable
  computer - was created to crack the codes used to conceal the messages that Hitler's
  generals were sending to each other. It was developed at Bletchley Park, the site
  of the Government Codes and Cipher School. \"We were in no doubt about how important
  it was,\" said Captain Jerry Roberts, the sole surviving member of the unit, called
  the Testery, that used Colossus to crack codes. \"We saw a number of messages signed
  by Adolf Hitler himself.\" The code breakers at Bletchley had been seeing messages
  sent by German generals since the early days of the war.\n\n\n\n\n\n\t\n\t\n\t\n\t\n\t\t\n\t\t\tPlease
  turn on JavaScript. Media requires JavaScript to play.  \n\t\t\n\t\t\n\t\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n//<![CDATA[\nvar
  empId = 'emp_8491227',\n    settings,\nsettings = bbc.fmtj.av.emp.getPlayerSettings(empId);\nbbc.fmtj.av.emp.registerPlayer(empId,
  settings);\n//]]>\n\n\t\n\t\n\t\n\t\n\t\tAdvertisement\n\t\n\t\n\t\n\t\n\tJerry
  Roberts used Colossus computer during World War 2 to decipher messages sent to Hitler's
  generals.\n\n\n\n\n\n\"I suspect sometimes we genuinely saw the messages before
  the blessed Germans,\" said Captain Roberts. To scramble, or encipher, the messages
  the Germans used the Lorenz SZ 40/42 coding machine - known as Tunny to the Allies.
  This was a more advanced machine than the well-known Enigma and the Allies had no
  captured examples on which to try out code-cracking techniques. But they were able
  to break this code thanks to human error. On 30 August 1941, a German operator sent
  a 4,000 character message twice, made the cardinal sin of using the same settings
  and made small changes to the re-sent text. In what Captain Roberts described as
  the \"outstanding mental feat of the 20th Century\" mathematician Bill Tutte used
  the two messages to work out how Lorenz enciphered text. Said Captain Roberts: \"I
  used to see him twiddling his pencil staring into space and I wondered a few times
  if he was earning his corn, but he clearly was.\" Tutte's crack of the system helped
  the Allies decode the messages but soon too many messages were being intercepted
  for the human code crackers to handle. Following the success of the machines produced
  to crack Enigma, Bletchley decided to build another to crack Lorenz. Broken upOverseeing
  it was post office engineer Tommy Flowers and much of the early design work was
  done at the post office's Dollis Hill research lab. \"He worked with a select band
  of brothers. There was about five of us initially,\" said Harry Fensom, who helped
  Flowers build the machine and oversaw its installation and operation at Bletchley.\n\t\n\n\t\n\t\t
  \   \n\t\t\t    \n\t\t\t\t\n\t\t\t            \n\t\t\t                \n\t\t\t                        \n\t\t\t
  \                           COLOSSUS\n\t\t\t                        \n\t\t\t                \n\t\t\t\t\t\n\t\t\t
  \               \n\t\t\t                     \n\t\t\t                    Colossus
  Mark I\n\n\nTech specs: 1500 valves, 5,000 characters per second, \n\n\nFirst operation:
  5 February 1944\n\n\nCreators: Tommy Flowers, Harry Fensom, Allen Coombs, Sid Broadhurst,
  Bill Chandler\n\n\n\n\t\t\t                \n\t\t\t                    \n\t\t\t
  \                       \n\t\t\t                            \n\t\t\t                     \n\t\t\t
  \                   \n    \n         \n        \n        \n            \n                \n
  \           \n            Computer pioneer family tree\n            \n                \n
  \           \n        \n        \n    \n    \n\n\n\n\n\t\t\t                \n\t\t\t
  \           \n\t\t\t        \"We didn't think of it as a computer,\" he said. \"Because
  in those days a computer was simply a device for manipulating arithmetic.\" Flowers
  wanted to use huge numbers of valves to power Colossus. The wisdom of the decision
  was doubted because valves were prone to breaking. But Flowers knew, from his work
  on telephone exchanges, that they can have a long life if they are kept running.
  It is switching them on and off that renders them friable. Colossus Mark I had 1,500
  valves and was delivered to Bletchley in late January 1944 and was cracking codes
  within a fortnight. Flowers' belief in the longevity of valves was proved because
  some of the valves dating from the Second World War are in the re-built Colossus
  now installed back at Bletchley. The oldest valve in the re-built Colossus dates
  from 1943, said Tony Sale, who oversaw the 14 year rebuild project. In total, he
  estimates, about 40 of its valves date from the 1940s. About 5 to 8 break every
  year, he said \"It can break the codes in a remarkably short time, six hours, that
  by other means was impossible to break,\" said Mr Sale. The rhythm of the machine
  is dictated by the paper tape bearing the message it is working on. That feeds data
  into the machine at a rate of 5000 characters a second. To reading the dots on the
  tape it uses parts from anti-aircraft shells.\n\n\n\n\n\n\t\n\t\n\t\n\t\n\t\t\n\t\t\tPlease
  turn on JavaScript. Media requires JavaScript to play.  \n\t\t\n\t\t\n\t\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n//<![CDATA[\nvar
  empId = 'emp_8491118',\n    settings,\nsettings = bbc.fmtj.av.emp.getPlayerSettings(empId);\nbbc.fmtj.av.emp.registerPlayer(empId,
  settings);\n//]]>\n\n\t\n\tJerry Roberts shows how he deciphered German messages
  while a World War 2 code cracker for Britain.\n\n\n\n\n\nThe machine had to be produced
  quickly and Flowers and his team managed it in 10 months. Harry Fensom remembers
  it as a frenetic time, when they stayed all hours to get it finished. \"That was
  just the way we worked,\" he said. In total 10 Colossi were produced including several
  Colossus II machines which went twice as fast. By the end of the war it is estimated
  that all the Colossi had decrypted more than 63 million characters. The success
  of the machine spelled its doom. \"Nobody has any recognition because Winston Churchill
  wanted it expunged from peoples' minds,\" said Mr Fensom. \"He didn't want any of
  it to be released.\" This led many to claim that the American Eniac was the first
  programmable, electronic, digital computer. Those who worked on Colossus claim their
  creation has that honour. Captains Roberts is keen to ensure that proper credit
  is given to that achievement. \"I didn't realise that this was the beginning of
  a new world but it was,\" he told BBC News. \"After all, the inventor of the computer
  which has transformed our world is a person of some importance and we should be
  proud of those people.\" \"I would have thought that a statue was the least to expect,\"
  he said.\r\n\n \nBookmark with: \n \nDelicious \n\n \nDigg \n\n \nreddit \n\n \nFacebook
  \n\n \nStumbleUpon \n\nWhat are these?\n\n\n\n<!--\nvar bm = new BookMark({site:'News',storyid:8492762,sectionid:44675,url:'/2/hi/technology/8492762.stm',edition:'International'});\n//-->\n\n
  \               \n                E-mail this to a friend\n            \n            \n\t
  \      \t\n\t \tPrintable version\n            \n        \n\t\t    \r\n\r\n\tPrint
  Sponsor\r\n\tBBC.adverts.write(\"storyprintsponsorship\");\r\n\r\nBBC.adverts.show(\"storyprintsponsorship\");\r\n\tbbc_adsense_slot
  = \"adsense_middle\";\"us\" == \"us\" ? bbc_adsense_country = \"us\" : bbc_adsense_country
  = \"rest\";\r\nBBC.adverts.show(\"adsense_middle\");\n                    \n                    \n\t\t\t\n\t\t\t\n
  \                       \n\t\t\n\t   \t\n\t   \t\t\n\t        \t\t\n   \t    \t\t
  \t\t\r\n\r\n    BBC.adverts.write(\"mpu\");\r\nBBC.adverts.show(\"mpu\");\n                                SEE
  ALSO\n                        \n                \n                \n\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\n\t\tComputer
  pioneer interactive family tree\n\t\t\n\t\t\t\n\t\t\t\t\t\t\t\t02 Feb 10 | \n\t\t\t\t\t\t\t\tTechnology\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\n\t\tSecrets,
  spies and supercomputers\n\t\t\n\t\t\t\n\t\t\t\t\t\t\t\t01 Feb 10 | \n\t\t\t\t\t\t\t\tTechnology\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\n\t\tCelebrating
  40 years of the net\n\t\t\n\t\t\t\n\t\t\t\t\t\t\t\t29 Oct 09 | \n\t\t\t\t\t\t\t\tTechnology\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\n\t\tCode-cracking
  and computers\n\t\t\n\t\t\t\n\t\t\t\t\t\t\t\t06 Nov 08 | \n\t\t\t\t\t\t\t\tTechnology\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\n\t\tCelebrating
  the UK's computer pioneers\n\t\t\n\t\t\t\n\t\t\t\t\t\t\t\t24 Jul 08 | \n\t\t\t\t\t\t\t\tTechnology\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\n\t\tPM
  apology after Turing petition\n\t\t\n\t\t\t\n\t\t\t\t\t\t\t\t11 Sep 09 | \n\t\t\t\t\t\t\t\tTechnology\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\n\t\tReboot
  for UK's 'oldest' computer\n\t\t\n\t\t\t\n\t\t\t\t\t\t\t\t03 Sep 09 | \n\t\t\t\t\t\t\t\tTechnology\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\n\t\tOne
  tonne 'Baby' marks its birth\n\t\t\n\t\t\t\n\t\t\t\t\t\t\t\t20 Jun 08 | \n\t\t\t\t\t\t\t\tTechnology\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\n\t\tSecurity
  service targets gamers\n\t\t\n\t\t\t\n\t\t\t\t\t\t\t\t19 Oct 07 | \n\t\t\t\t\t\t\t\tTechnology\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\n\t\tThe
  past is the future at Bletchley Park\n\t\t\n\t\t\t\n\t\t\t\t\t\t\t\t12 Jul 07 | \n\t\t\t\t\t\t\t\tTechnology\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\t\t\n\t\n\n\t\n\n
  \n\n\n                                        RELATED INTERNET LINKS\n                                        \n
  \                               \n                        \n                        \n
  \                               \n                                        \n                                                \n
  \                                                       Bletchley Park\n                                                        \n
  \                                               \n                                        \n
  \                               \n                                        \n                                                \n
  \                                                       The National Museum of Computing\n
  \                                                       \n                                                \n
  \                                       \n                                \n                                        \n
  \                                               \n                                                        Early
  British Computers\n                                                        \n                                                \n
  \                                       \n                                \n                                        \n
  \                                               \n                                                        Tony
  Sale\n                                                        \n                                                \n
  \                                       \n                                \n                                        \n
  \                                               \n                                                        The
  Design of Colossus\n                                                        \n                                                \n
  \                                       \n                                \n                        \n
  \                       \n                                \n                                        \n
  \                                               The BBC is not responsible for the
  content of external internet sites\n                                        \n                                        \n
  \                               \n                        \n                \n\t\n\n\n\n\n
  \                           TOP TECHNOLOGY STORIES\n                        \n                    \n
  \                   \n                        \n                            \n\t\n\t\tUS
  lifts lid on WikiLeaks probe\n\t\t\n\t\t\t\n\n                        \n                            \n\t\n\t\tBing
  gains market share in search\n\t\t\n\t\t\t\n\n                        \n                            \n\t\n\t\t'Virtual
  human' makes Xbox debut\n\t\t\n\t\t\t\n\n                        \n\t\t\tgetRssUrlStory('/rss/newsonline_world_edition/technology/rss.xml')\r\n\r\nMOST
  POPULAR STORIES NOW\r\n\r\n\r\n\r\n\r\n\r\n\tfunction liveStatsTabs(newTab,oldTab)
  {\r\n\t\r\n\tif (document.getElementById)\r\n\t{\r\n\t\tdocument.getElementById(newTab).style.display
  = \"inline\";\r\n\t\tdocument.getElementById(oldTab).style.display = \"none\";\r\n\t\treturn
  false;\r\n\t}\r\n\telse if (document.all)\r\n\t{\r\n\t\tdocument.all[oldTab].style.display
  = \"none\";\r\n\t\tdocument.all[newTab].style.display = \"inline\";\r\n\t\treturn
  false;\r\n\t}\r\n\telse {\r\n\t\treturn true;\r\n\t}\r\n\t}\r\n\t\r\n\tSHARED\r\n\t\tREAD\r\n\t\tWATCHED/LISTENED\r\n\tMost
  popular now, in detail \r\n\r\n\r\nSHARED\r\n\t\tREAD\r\n\t\tWATCHED/LISTENED\r\n\t\r\n
  \   French teacher invented school attack\r\n  \r\n  \r\n    BBC News\r\n  \r\n
  \ \r\n    Rage Against the Machine beat X Factor winner in charts\r\n  \r\n  \r\n
  \   BBC News\r\n  \r\n  \r\n    BBC News\r\n  \r\n  \r\n    Man jailed for web grooming
  of boys\r\n  \r\n  \r\n    Cosby accusers' interviews published\r\n  \r\n  \r\n
  \   BBC News\r\n  \r\n  \r\n    BBC News\r\n  \r\n  \r\n    Why did Copenhagen fail
  to deliver a climate deal?\r\n  \r\nMost popular now, in detail \r\n\r\n\r\nSHARED\r\n\t\tREAD\r\n\t\tWATCHED/LISTENED\r\n\t\r\n
  \   \r\n      One-minute World News\r\n  \r\n  \r\n    \r\n      BBC News\r\n  \r\n
  \ \r\n    \r\n      Navy warns as BBC flies near China islands\r\n  \r\n  \r\n    \r\n
  \     Unnamed page\r\n  \r\n  \r\n    \r\n      Unnamed page\r\n  \r\nMost popular
  now, in detail \r\n\r\n\r\n\r\n\r\n\r\n\tliveStatsTabs('livestats200','livestats100');\r\n\tliveStatsTabs('livestats200','livestats300');\r\n\n
  \                \r\n\r\n      \r\n    \r\n\r\n  \r\n      \r\n    \r\n        \r\n
  \       \r\n\t\r\n            \r\n            \r\n\t\t\r\n            \r\n            \r\n\t\r\n\t\t\r\n\t\t\t\r\n\t\t\tFEATURES,
  VIEWS, ANALYSIS\r\n\t\t\r\n\t\r\n\r\n            \r\n                \r\n                    \r\n
  \               \r\n            \r\n\t\r\n\t\r\n    \r\n\r\n  \r\n    \r\n        \r\n
  \       \r\n\t\r\n            \r\n            \r\n\t\t\r\n            \r\n            \r\n\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\r\n\t\tGhost
  town\r\n\t\t\r\n\t\t\t\r\n\t\r\n\t\r\n\t\r\n\t\t\r\n\t\t\t\r\n\t\t\tHas China's
  housing bubble burst?\r\n\t\t\t\r\n\t\t\r\n\t\t\t\r\n\r\n\r\n\t\r\n\t\r\n\t\r\n\r\n\r\n\r\n
  \           \r\n                \r\n                    \r\n                \r\n
  \           \r\n\t\r\n\t\r\n    \r\n\r\n    \r\n        \r\n        \r\n\t\r\n            \r\n
  \           \r\n\t\t\r\n            \r\n            \r\n\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\r\n\t\tThe
  guerilla plant \r\n\t\t\r\n\t\t\t\r\n\t\r\n\t\r\n\t\r\n\t\t\r\n\t\t\t\r\n\t\t\tHow
  the world's oldest clove tree defied an empire\r\n\t\t\t\r\n\t\t\r\n\t\t\t\r\n\r\n\r\n\t\r\n\t\r\n\t\r\n\r\n\r\n\r\n
  \           \r\n                \r\n                    \r\n                \r\n
  \           \r\n\t\r\n\t\r\n    \r\n\r\n    \r\n        \r\n        \r\n\t\r\n            \r\n
  \           \r\n\t\t\r\n            \r\n            \r\n\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\r\n\t\tWalking
  away\r\n\t\t\r\n\t\t\t\r\n\t\r\n\t\r\n\t\r\n\t\t\r\n\t\t\t\r\n\t\t\tWhy Royal Ballet
  principal Sergei Polunin quit\r\n\t\t\t\r\n\t\t\r\n\t\t\t\r\n\r\n\r\n\t\r\n\t\r\n\t\r\n\r\n\r\n\r\n
  \           \r\n                \r\n                    \r\n                \r\n
  \           \r\n\t\r\n\t\r\n    \r\n\r\n    \r\n    \r\n<!--\r\n\r\nfunction randomLiveStats(){\r\nvar
  liveStatsFacts=new Array();\r\n\r\nliveStatsFacts[0]=\"The most read story in the
  UK is: <a href=http://news.bbc.co.uk/1/hi/politics/10617724.stm>Government wins
  Commons VAT votes\";\r\nliveStatsFacts[1]=\"The most read story in Africa is: <a
  href=http://news.bbc.co.uk/2/hi/middle_east/8600398.stm>Saudi 'reprieve' in sorcery
  case\";\r\nliveStatsFacts[2]=\"The most read story in Europe is: <a href=http://news.bbc.co.uk/1/hi/world/europe/8444202.stm>Mona
  Lisa 'had high cholesterol'\";\r\nliveStatsFacts[3]=\"The most read story in North
  America is: <a href=http://news.bbc.co.uk/1/hi/england/cornwall/6498249.stm>Town
  lines 'make road dangerous'\";\r\nliveStatsFacts[4]=\"The most read story in Australasia
  is: <a href=http://news.bbc.co.uk/1/hi/in_pictures/8508817.stm>In pictures: New
  9/11 photos released\";\r\nliveStatsFacts[5]=\"The most shared story right now is:
  <a href=http://news.bbc.co.uk/2/hi/europe/country_profiles/1113655.stm>BBC News\";\r\nliveStatsFacts[6]=\"<a
  href=/1/shared/bsp/hi/live_stats/html/map.stm>Traffic to this site is currently
  13% below normal\";\r\nliveStatsFacts[7]=\"<a href=/1/shared/bsp/hi/live_stats/html/map.stm?lsf>5,371
  pages were read in the last minute.\";\r\nliveStatsFacts[8]=\"<a href=/1/shared/bsp/hi/live_stats/html/map.stm?lsf>4,743
  people are reading stories on the site right now.\";\r\n\r\n//document.write('<li
  class=\"footermostpop\" style=\"-webkit-text-size-adjust: none\">' + liveStatsFacts[Math.floor(Math.random()*liveStatsFacts.length)]
  + '');\r\ndocument.write('<div class=\"mostpopular\"><span class=\"now\"><a href=\"/1/shared/bsp/hi/live_stats/html/map.stm?lsf2\">Most
  Popular Now<p class=\"section\">' + liveStatsFacts[Math.floor(Math.random()*liveStatsFacts.length)]
  + '<div class=\"clear\">');\r\n}\r\nrandomLiveStats();\r\n//-->\r\n\r\n\r\n\r\nMost
  Popular NowMost Popular Now | 4,743 people are reading stories on the site right
  now.\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            \r\n                \r\n
  \                   \r\n                \r\n            \r\n\t\r\n\t\r\n    \r\n\n
  \   \n\n\t\n        \n\n\t\n\n\nSkip to top\n\n\tPRODUCTS & SERVICES\n\tE-mail news\n\t\tMobiles\n\t\tWidgets
  & Alerts\n\t\tNews feeds\t\t\n\t\tPodcasts\n\t\n\n\n        \n        \n\t\n\n\n\n\n\n\t\n\t\n\t\t\n\t\n\t\t\n\t\t\n\t\n\t\n\t\n\t\n\n\t\n\t\t\n\n
  \       \nBBC iDSign in\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n      Search
  term:     BBC navigation News  Sport Weather   Capital   TV  Radio More…        CBBC
  CBeebies Make It Digital Food iWonder Bitesize Music Earth Local Northern Ireland
  Scotland Wales          BBC links  Mobile site      Terms of Use       About the
  BBC    Advertise With Us        Privacy       Accessibility Help    Ad Choices        Cookies
  \       Contact the BBC     Parental Guidance        Copyright © 2015 BBC. The BBC
  is not responsible for the content of external sites. Read more. This page is best
  viewed in an up-to-date web browser with style sheets (CSS) enabled. While you will
  be able to view the content of this page in your current browser, you will not be
  able to get the full visual experience. Please consider upgrading your browser software
  or enabling style sheets (CSS) if you are able to do so.   \r\n\r\n\r\n            \r\n\r\n\r\n\r\n\r\n
  \   /*<![CDATA[*/\r\n    if (BBC.adverts.isActive('analytics')) {\r\n        if
  (bbcdotcom && bbcdotcom.analytics) {\r\n\t\t\tbbcdotcom.analytics.init();\r\n            bbcdotcom.analytics.page();\r\n
  \       }\r\n    }\r\n    /*]]>*/\r\n\r\n    /*<![CDATA[*/\r\n    if (BBC.adverts.isActive('analytics'))
  {\r\n        document.write(unescape(\"%3Cscript src='\" + (document.location.protocol
  == \"https:\" ? \"https://sb\" : \"http://b\") + \".scorecardresearch.com/beacon.js'
  %3E%3C/script%3E\"));\r\n    }\r\n    /*]]>*/\r\n\r\n    /*<![CDATA[*/\r\n    if
  (BBC.adverts.isActive('analytics')) {\r\n        COMSCORE.beacon({\r\n            c1:2,\r\n
  \           c2:\"6035051\",\r\n            c3:\"\",\r\n            c4:\"news.bbc.co.uk/2/hi/technology/8492762.stm\",\r\n
  \           c5:\"\",\r\n            c6:\"\",\r\n            c15:\"\"\r\n        });\r\n
  \   }\r\n    /*]]>*/\r\n\r\n    /*<![CDATA[*/\r\n    if (BBC.adverts.isActive('nielsen-au'))
  {\r\n        <!-- COPYRIGHT 2009 Nielsen Online -->\r\n        document.write(unescape('%3Cscript
  type=\"text/javascript\" src=\"' + ('https:' == document.location.protocol ? 'https:'
  : 'http:') + '//secure-au.imrworldwide.com/v60.js\"%3E%3C/script%3E'));\r\n    }\r\n
  \   /*]]>*/\r\n\r\n    /*<![CDATA[*/\r\n    if (BBC.adverts.isActive('nielsen-au'))
  {\r\n        <!-- Start Nielsen Online SiteCensus V6.0 Part 2 -->\r\n        nol_t({cid:\"au-bbc\",content:\"0\",server:\"secure-au\"}).record().post();\r\n
  \       <!-- End Nielsen Online SiteCensus V6.0 Part 2 -->\r\n    }\r\n    /*]]>*/\r\n\r\n
  \   /*<![CDATA[*/\r\n    if (BBC.adverts.isActive('nielsen-nz')) {\r\n        <!--
  COPYRIGHT 2009 Nielsen Online -->\r\n        document.write(unescape('%3Cscript
  type=\"text/javascript\" src=\"' + ('https:' == document.location.protocol ? 'https:'
  : 'http:') + '//secure-nz.imrworldwide.com/v60.js\"%3E%3C/script%3E'));\r\n    }\r\n
  \   /*]]>*/\r\n\r\n    /*<![CDATA[*/\r\n    if (BBC.adverts.isActive('nielsen-nz'))
  {\r\n        nol_t({cid:\"nz-bbc\",content:\"0\",server:\"secure-nz\"}).record().post();\r\n
  \   }\r\n    /*]]>*/\r\n\r\n    /*<![CDATA[*/\r\n    if (BBC.adverts.isActive('nielsen-us'))
  {\r\n        <!-- COPYRIGHT 2010 Nielsen Online -->\r\n       (function () {\r\n
  \          var d = new Image(1, 1);\r\n           d.onerror = d.onload = function
  () {\r\n               d.onerror = d.onload = null;\r\n           };\r\n           d.src
  = [('https:' == document.location.protocol ? 'https:' : 'http:') + \"//secure-us.imrworldwide.com/cgi-bin/m?ci=us-804789h&amp;cg=0&amp;cc=1&amp;si=\",
  escape(window.location.href), \"&amp;rp=\",\r\n           escape(document.referrer),
  \"&amp;ts=compact&amp;rnd=\", (new Date()).getTime()].join('');\r\n        })();\r\n
  \   }\r\n    /*]]>*/\r\n\r\n    /*<![CDATA[*/\r\n    if (BBC.adverts.isActive('analytics'))
  {\r\n        (function() {\r\n            var em = document.createElement('script');
  em.type = 'text/javascript'; em.async = true;\r\n            em.src = ('https:'
  == document.location.protocol ? 'https://me-ssl' : 'http://me-cdn') + '.effectivemeasure.net/em.js';\r\n
  \           var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(em,
  s);\r\n        })();\r\n    }\r\n    /*]]>*/\r\n\r\n        \r\n            /*<![CDATA[*/\r\n
  \           if (BBC.adverts.isActive('ads') && BBC.adverts.isActive('analytics'))
  {\r\n                document.write(unescape('%3Cscript src=\"http://widgets.outbrain.com/outbrain.js\"
  type=\"text/javascript\"%3E%3C/script%3E'));\r\n            }\r\n            /*]]>*/\r\n
  \          if (typeof require !== 'undefined') { require(['istats-1'], function(istats){
  istats.track('external', { region: document.getElementById('blq-main') }); istats.track('download',
  { region: document.getElementById('blq-main') }); }); } \n\t\t\tblq.setLabel('searchSuggestion',
  'Search BBC News');\n\t  British Broadcasting CorporationHome  Accessibility linksPlease
  turn on JavaScript. Media requires JavaScript to play. Retired British spy catcher
  Tony Sale rebuilt Colossus, the world's first programmable electronic computer.The
  world's first large-scale, electronic programmable computer was created to do one
  job - crack Hitler's codes. Engineers and code-crackers describe life working on
  Colossus as part of a BBC News series on British computer pioneers.In June 1944,
  the Allies were debating when to go ahead with the invasion of Europe - D Day. Eisenhower's
  decision was directly influenced by information revealed by code-cracking machine
  Colossus. In messages it decoded, it was discovered that the trick the Allies sought
  to play on the Germans had worked. Hitler was convinced that the Allies would land
  near Calais and had kept two divisions in Holland and Belgium to counter this phantom
  attack. It meant the Allies would have time to muster their troops on the beach
  following the landings and dig in before reinforcements could arrive. Human errorColossus
  - the world's first large-scale, electronic programmable computer - was created
  to crack the codes used to conceal the messages that Hitler's generals were sending
  to each other. It was developed at Bletchley Park, the site of the Government Codes
  and Cipher School. \"We were in no doubt about how important it was,\" said Captain
  Jerry Roberts, the sole surviving member of the unit, called the Testery, that used
  Colossus to crack codes. \"We saw a number of messages signed by Adolf Hitler himself.\"
  The code breakers at Bletchley had been seeing messages sent by German generals
  since the early days of the war.Please turn on JavaScript. Media requires JavaScript
  to play. Jerry Roberts used Colossus computer during World War 2 to decipher messages
  sent to Hitler's generals.\"I suspect sometimes we genuinely saw the messages before
  the blessed Germans,\" said Captain Roberts. To scramble, or encipher, the messages
  the Germans used the Lorenz SZ 40/42 coding machine - known as Tunny to the Allies.
  This was a more advanced machine than the well-known Enigma and the Allies had no
  captured examples on which to try out code-cracking techniques. But they were able
  to break this code thanks to human error. On 30 August 1941, a German operator sent
  a 4,000 character message twice, made the cardinal sin of using the same settings
  and made small changes to the re-sent text. In what Captain Roberts described as
  the \"outstanding mental feat of the 20th Century\" mathematician Bill Tutte used
  the two messages to work out how Lorenz enciphered text. Said Captain Roberts: \"I
  used to see him twiddling his pencil staring into space and I wondered a few times
  if he was earning his corn, but he clearly was.\" Tutte's crack of the system helped
  the Allies decode the messages but soon too many messages were being intercepted
  for the human code crackers to handle. Following the success of the machines produced
  to crack Enigma, Bletchley decided to build another to crack Lorenz. Broken upOverseeing
  it was post office engineer Tommy Flowers and much of the early design work was
  done at the post office's Dollis Hill research lab. \"He worked with a select band
  of brothers. There was about five of us initially,\" said Harry Fensom, who helped
  Flowers build the machine and oversaw its installation and operation at Bletchley.\"We
  didn't think of it as a computer,\" he said. \"Because in those days a computer
  was simply a device for manipulating arithmetic.\" Flowers wanted to use huge numbers
  of valves to power Colossus. The wisdom of the decision was doubted because valves
  were prone to breaking. But Flowers knew, from his work on telephone exchanges,
  that they can have a long life if they are kept running. It is switching them on
  and off that renders them friable. Colossus Mark I had 1,500 valves and was delivered
  to Bletchley in late January 1944 and was cracking codes within a fortnight. Flowers'
  belief in the longevity of valves was proved because some of the valves dating from
  the Second World War are in the re-built Colossus now installed back at Bletchley.
  The oldest valve in the re-built Colossus dates from 1943, said Tony Sale, who oversaw
  the 14 year rebuild project. In total, he estimates, about 40 of its valves date
  from the 1940s. About 5 to 8 break every year, he said \"It can break the codes
  in a remarkably short time, six hours, that by other means was impossible to break,\"
  said Mr Sale. The rhythm of the machine is dictated by the paper tape bearing the
  message it is working on. That feeds data into the machine at a rate of 5000 characters
  a second. To reading the dots on the tape it uses parts from anti-aircraft shells.Please
  turn on JavaScript. Media requires JavaScript to play. Jerry Roberts shows how he
  deciphered German messages while a World War 2 code cracker for Britain.The machine
  had to be produced quickly and Flowers and his team managed it in 10 months. Harry
  Fensom remembers it as a frenetic time, when they stayed all hours to get it finished.
  \"That was just the way we worked,\" he said. In total 10 Colossi were produced
  including several Colossus II machines which went twice as fast. By the end of the
  war it is estimated that all the Colossi had decrypted more than 63 million characters.
  The success of the machine spelled its doom. \"Nobody has any recognition because
  Winston Churchill wanted it expunged from peoples' minds,\" said Mr Fensom. \"He
  didn't want any of it to be released.\" This led many to claim that the American
  Eniac was the first programmable, electronic, digital computer. Those who worked
  on Colossus claim their creation has that honour. Captains Roberts is keen to ensure
  that proper credit is given to that achievement. \"I didn't realise that this was
  the beginning of a new world but it was,\" he told BBC News. \"After all, the inventor
  of the computer which has transformed our world is a person of some importance and
  we should be proud of those people.\" \"I would have thought that a statue was the
  least to expect,\" he said.\r\nWhat are these?Print SponsorMost Popular Now | 4,743
  people are reading stories on the site right now.\";  Search term: Copyright © 2015
  BBC. The BBC is not responsible for the content of external sites. Read more.This
  page is best viewed in an up-to-date web browser with style sheets (CSS) enabled.
  While you will be able to view the content of this page in your current browser,
  you will not be able to get the full visual experience. Please consider upgrading
  your browser software or enabling style sheets (CSS) if you are able to do so."
