--- !ruby/object:WebPage
page: !ruby/object:Nokogiri::HTML::Document
  decorators: 
  node_cache:
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  - !ruby/object:Nokogiri::XML::Element {}
  errors:
  - !ruby/exception:Nokogiri::XML::SyntaxError
    message: |
      error parsing attribute name
    domain: 5
    code: 68
    level: 2
    file: "/tmp/open-uri20151214-8760-1uz45h4"
    line: 125
    str1: 
    str2: 
    str3: 
    int1: 0
    column: 34
  - !ruby/exception:Nokogiri::XML::SyntaxError
    message: |
      Unexpected end tag : img
    domain: 5
    code: 76
    level: 2
    file: "/tmp/open-uri20151214-8760-1uz45h4"
    line: 274
    str1: img
    str2: 
    str3: 
    int1: 0
    column: 186
address: http://planetmath.org/
inboundLinks: []
lines:
- |2+

- "  \n"
- |2
      Jump to Navigation
- "  \n"
- "    \n"
- |2+

- "  \tvar $jq = jQuery.noConflict();  \n"
- |2+

- |
  $jq(document).ready(function () {
- "\t\n"
- "\t$jq('.topmenu ul li').hover(\n"
- "\t\tfunction () {\n"
- "\t\t\t//show its submenu\n"
- "\t\t\t$jq('ul', this).fadeIn(250);\n"
- |2+

- "\t\t}, \n"
- "\t\tfunction () {\n"
- "\t\t\t//hide its submenu\n"
- "\t\t\t$jq('ul', this).delay(200).fadeOut(250);\n"
- "\t\t}\n"
- "\t);\n"
- |2+

- |
  });
- |2+

- |2+

- |2+

- |2+

- "  \n"
- |2+

- "          \n"
- "    \n"
- "          \n"
- "                              \n"
- |2
                planetmath.org
- "            \n"
- "                  \n"
- |2
                    Math for the people, by the people.
- "              \n"
- "        \n"
- |2
        User menuFAQ
- |2+

- "    \n"
- |2+

- |2
         Welcome!
- "    \n"
- "  \n"
- |2
      PlanetMath is a virtual community which aims to help make mathematical knowledge more accessible. PlanetMath's content is created collaboratively: the main feature is the mathematics encyclopedia with entries written and reviewed by members. The entries are contributed under the terms of the Creative Commons By/Share-Alike License in order to preserve the rights of authors, readers and other content creators in a sensible way.  We use LaTeX, the
- |
  lingua franca of the worldwide mathematical community.
- "  Beginning February 23th 2015 we experienced 15 days of downtime when our server
  stopped working.  We moved a backup to DigitalOcean, and we're back online.  Some
  features aren't working yet; we're restoring them ASAP.  Please report bugs in the
  Planetary Bugs Forum or on Github.  \n"
- |2+

- |2+

- |2+

- |2+

- |2
         User login
- "    \n"
- "  \n"
- "    \n"
- |2
    Username *
- " \n"
- |2+

- |2
    Password *
- " \n"
- |
  Sign up for an account
- |
  Forgot password
- "  \n"
- |2+

- |2+

- "  \n"
- " \n"
- |2+

- "   \n"
- " \n"
- |2+

- "  \n"
- |2+

- "  \n"
- "          \n"
- |2+

- "    \n"
- "          \n"
- |2+

- "        \n"
- "      \n"
- |2
          New Articles
- "        \n"
- "          [Ref] field arising from special relativity  by pahioOct 31[Ref] Carmichael
  \ numbers -  561 (contd)  by akdevarajJul 13[Ref] Carmichal  number   561  by akdevarajJul
  12[Ref] Carmichal  number   561  by akdevarajJul 12[Ref] Carmichal  number   561
  \ by akdevarajJul 12[Ref] Carmichal  number   561  by akdevarajJul 12[Ref] Failure
  \ functions  by akdevarajMay 27[Ref] induction proof of fundamental theorem of arithmet...
  \ by pahioMar 29[Ref] Birkhoff Recurrence Theorem  by FilipeMar 20[Ref] Multiple
  Recurrence Theorem  by FilipeMar 20[Ref] convergence in the mean  by pahioJan 30[Ref]
  definition of vector space needs no commutativity  by pahioJan 20[Ref] redundancy
  of two-sidedness in definition of group  by pahioJan 19[Ref] Nucleus  by porton14-12-18more
  \             \n"
- "      \n"
- |2+

- "      \n"
- |2
          Latest Messages
- "        \n"
- "           [P] No questions. by pahio Nov 10No questions. [P] sketch  proof  -
  \ in  commonly  understood terminology by akdevaraj Nov 10I  would like to conclude
  \ my  message  with one  point:\r\n"
- "The fact  that  any  value  of n  skiped is  such  that\r\n"
- "f(n)  is prime  can be  proved:  f(n)=n^2+n+1  is  such that\r\n"
- "whenever  f(n)  is  composite  one  of  its  factors\r\n"
- "is  smaller  than  n.  This implies  that  it  that  the  relevant\r\n"
- "n  has to  satisfy  a  prior  failure function.\r\n"
- "Any  question,  Jussi? [P] sketch  proof  -  in  commonly  understood terminology
  by akdevaraj Nov 9Note  a)  p_0  less than  p_1  less  than  p_2 less  than   p_i\r\n"
- "b)  This  means  the  intervals  become  succeedingly  bigger\r\n"
- "c)As  the fraction  of  primes  in  each  interval  becomes\r\n"
- "suceedingly  smaller  it  may  appear  that  the  number  of  primes \r\n"
- "i.e.  the  number  of  ns  not  overed  by  any  failure function\r\n"
- "becomes smaller-  actually it may  turn out that  the  number\r\n"
- "of  primes  become  bigger since  the intervals become  bigger\r\n"
- "d)  there  is no  need  to  test  any  f(n)  where n  is  \r\n"
- "skiped  by the failure  functions  for  primality -  they  are\r\n"
- "automatically  prime  e)  my  conjecture  is  that the value\r\n"
- "of beta is 0.03  -  even  if  beta  is  0.01  it  makes  no \r\n"
- "difference  since  the perpetuality of  the iteration  is \r\n"
- "established  f)  only  a  competent  programmer  can  program\r\n"
- "the  failure functions  and the iteration  g)to  go  from\r\n"
- "iteration  i  to  iteration i+1  we  need only  one  value of\r\n"
- "n  not covered  by  any  falure  function  h)  the  iteration\r\n"
- "can  come to  an end  only  if all  the  values of  n\r\n"
- "in  an  interval  are covered  by  one  or more  of  the failure\r\n"
- "functions  (  this is highly  improbable )\r\n"
- "                                      (to  be continued) [P] sketch  proof  -  in
  \ commonly  understood terminology by akdevaraj Nov 9Since  the  fraction of  values
  \ of n  in  any  interval  which  are\r\n"
- "not  covered  by  any  failure function  decreases  asymptotically\r\n"
- "to  beta  the  iteration is  perpetual. This  is because  the\r\n"
- "fraction  of  primes  in  any interval never reaches  zero  -  hence\r\n"
- "there  are  infinitely  many  primes  of  shape  n^2+n+1  (proved-\r\n"
- "subject  to  confirmation  by  a  programmer.)\r\n"
- "               (to be continued). [P] sketch  proof  -  in  commonly  understood
  terminology by akdevaraj Nov 8Before  proceeding  let me  emphasise  that  the  values
  \ of  \r\n"
- "n  skiped by  the  failure functions  i.e. n_0+kf(n_0)  are\r\n"
- "such  that f(n)  are prime  and they need not be  tested for\r\n"
- "primality.\r\n"
- "We  now  set  up  an  iteration  as  follows: Let  p_0  be\r\n"
- "the largest  known  prime having  shape  n^2+n+1.  Let  n_0\r\n"
- "be  the corresponding  value  of  n i.e.  n_0^2+n_0+1  =\r\n"
- "p_0. Consider  the  interval  n_0,  n_0+p_0.  I   am  considering\r\n"
- "this  interval because  f(n_0+kf(n_0))  is  congruent  to 0\r\n"
- "(mod f(n_0)).\r\n"
- "Note  the  fraction  of  this  interval  not  covered  by the\r\n"
- "failure  functions(  arithmetic  progressions)  1+3k, 2+7k, 3+13k\r\n"
- "4+7k............ .  Let  n_1  be  the largest  of  these  values\r\n"
- "of  n  not  covered  by  any  failure  function. f(n_1)  is  prime\r\n"
- "which  need not be  tested  for  primality.  Let this  prime \r\n"
- "be p_1.  2nd  iteration:  consider  the  interval n_1, n_1 +p_1.\r\n"
- "proceed  as in  the  1st  iteration  i.e.  mark  the  fraction of\r\n"
- "values  of n  in this interval not covered  by  any  failure function.\r\n"
- "Let  n_2  be  the largest  value  of  n  in this  interval not\r\n"
- "covered  by  any failure function.  f(n_2)  is  prime; call  this\r\n"
- "p_2.  Consider  the  interval  n_2,  n_2 + p_2.  Mark  the\r\n"
- "fraction  of values of  n in this  interval  not  covered  by\r\n"
- "any  failure function.  The  fraction  of values  of n  not\r\n"
- "covered  by  any  failure  function  in  any  interval  decreases\r\n"
- "asymptotically  from iteration to iteration  to  a   rational  number-  call  this
  \ beta\r\n"
- "                       (to  be continued ). [P] sketch  proof  -  in  commonly
  \ understood terminology by akdevaraj Nov 8This  means  we  have  a case of indirect
  \ primality testing:\r\n"
- "f(n)  is  composite  if  n = n_0 +kf(n_0).  Otherwise\r\n"
- "f(n)  is  prime.  Note  we  are  not testing  f(n)\r\n"
- "directly  for primality; we are  only  testing\r\n"
- "whether  is n  is  generated by  n_0+kf(n_0); if  so\r\n"
- "f(n)  is composite-if not  f(n)  is  prime.\r\n"
- "                                          (to  be  continued)\r\n"
- " [P] sketch  proof  -  in  commonly  understood terminology by akdevaraj Nov 6Let
  me be very  clear as to  what  counter  example  you\r\n"
- "should try to  find;  I  will  do  this  by  taking\r\n"
- "a  specific  interval -  n = 5  to  36.This  interval\r\n"
- "is spaned by  the failure  functions(  arithmetic \r\n"
- "progressions )  1+3k, 2+7k,  3 +13k,  4 +7k  and\r\n"
- "5+31k, 7+19k  and  9+13k.  However  the  values of n\r\n"
- "skiped by  the  above  are  5,6, 8, 12, 14, 15, 17, 20, 21,\r\n"
- "24,27 and  33.  Now  all  these  skiped  values  of  n  are  such\r\n"
- "that  f(n)  is  prime.  So  you  have to  find  a value  of  \r\n"
- "n  skiped  by  the  relevant  failure  functions  such  that\r\n"
- "f(n)  is  composite.  Such  a  counter example  may  be  very\r\n"
- "difficult to  find. [P] sketch  proof  -  in  commonly  understood terminology
  by akdevaraj Nov 6I  forgot  to  mention that  k  belongs  to  Z.\r\n"
- "Now  I  will  take a  break  for two  days  to  enable you  to\r\n"
- "find  a counter-example.\r\n"
- "                               (to  be continued) [P] sketch  proof  -  in  commonly
  \ understood terminology by akdevaraj Nov 6Let  me  summarise up  to the  point
  \ I  had  already  contributed:\r\n"
- "let  f(n)  =  n^2 + n  +  1 ( n belongs to  N). Let  n_0 be  a  \r\n"
- "specific value  of  n.   Then  n  =  n_0 + kf(n_0)  generates  values\r\n"
- "of n  such  that  f(n)  is  composite.\r\n"
- "Note:  please  ignore  trivial  cases  like k = 0.\r\n"
- "This is  easily  proved.  All  other  values  of  n  are such\r\n"
- "that  f(n)  is prime.\r\n"
- "                                             (to be  continued). [P] Sketch  proof
  -the  proposition by akdevaraj Nov 2Thank  you, Jussi.\r\n"
- "Proposition:  There  are infinitely  many  prime  numbers  with  shape\r\n"
- "n^2+n+1. [P] sketch proof by pahio Nov 1Yes.  First the proposition! [P] sketch
  \ proof  -  in  commonly  understood terminology by akdevaraj Nov 1Dear  Jussi,
  \ would you  like  me to  continue? [P] Kind  attention  Jussi  and  others  who
  \ are interested   by akdevaraj Oct 19Any  doubt  so  far  pl? [P] Please show the
  proposition by pahio Oct 19Please show the proposition you want to prove.  Then
  give its proof in a concise and clear form.\r\n"
- "\r\n"
- "Regards,\r\n"
- "\r\n"
- "Jussimore              \n"
- "      \n"
- "    \n"
- |2+

- |2+

- "        \n"
- "      \n"
- "  Latest Messages   \n"
- "        \n"
- "           [P] No questions. by pahio Nov 10No questions. [P] sketch  proof  -
  \ in  commonly  understood terminology by akdevaraj Nov 10I  would like to conclude
  \ my  message  with one  point:\r\n"
- "The fact  that  any  value  of n  skiped is  such  that\r\n"
- "f(n)  is prime  can be  proved:  f(n)=n^2+n+1  is  such that\r\n"
- "whenever  f(n)  is  composite  one  of  its  factors\r\n"
- "is  smaller  than  n.  This implies  that  it  that  the  relevant\r\n"
- "n  has to  satisfy  a  prior  failure function.\r\n"
- "Any  question,  Jussi? [P] sketch  proof  -  in  commonly  understood terminology
  by akdevaraj Nov 9Note  a)  p_0  less than  p_1  less  than  p_2 less  than   p_i\r\n"
- "b)  This  means  the  intervals  become  succeedingly  bigger\r\n"
- "c)As  the fraction  of  primes  in  each  interval  becomes\r\n"
- "suceedingly  smaller  it  may  appear  that  the  number  of  primes \r\n"
- "i.e.  the  number  of  ns  not  overed  by  any  failure function\r\n"
- "becomes smaller-  actually it may  turn out that  the  number\r\n"
- "of  primes  become  bigger since  the intervals become  bigger\r\n"
- "d)  there  is no  need  to  test  any  f(n)  where n  is  \r\n"
- "skiped  by the failure  functions  for  primality -  they  are\r\n"
- "automatically  prime  e)  my  conjecture  is  that the value\r\n"
- "of beta is 0.03  -  even  if  beta  is  0.01  it  makes  no \r\n"
- "difference  since  the perpetuality of  the iteration  is \r\n"
- "established  f)  only  a  competent  programmer  can  program\r\n"
- "the  failure functions  and the iteration  g)to  go  from\r\n"
- "iteration  i  to  iteration i+1  we  need only  one  value of\r\n"
- "n  not covered  by  any  falure  function  h)  the  iteration\r\n"
- "can  come to  an end  only  if all  the  values of  n\r\n"
- "in  an  interval  are covered  by  one  or more  of  the failure\r\n"
- "functions  (  this is highly  improbable )\r\n"
- "                                      (to  be continued) [P] sketch  proof  -  in
  \ commonly  understood terminology by akdevaraj Nov 9Since  the  fraction of  values
  \ of n  in  any  interval  which  are\r\n"
- "not  covered  by  any  failure function  decreases  asymptotically\r\n"
- "to  beta  the  iteration is  perpetual. This  is because  the\r\n"
- "fraction  of  primes  in  any interval never reaches  zero  -  hence\r\n"
- "there  are  infinitely  many  primes  of  shape  n^2+n+1  (proved-\r\n"
- "subject  to  confirmation  by  a  programmer.)\r\n"
- "               (to be continued). [P] sketch  proof  -  in  commonly  understood
  terminology by akdevaraj Nov 8Before  proceeding  let me  emphasise  that  the  values
  \ of  \r\n"
- "n  skiped by  the  failure functions  i.e. n_0+kf(n_0)  are\r\n"
- "such  that f(n)  are prime  and they need not be  tested for\r\n"
- "primality.\r\n"
- "We  now  set  up  an  iteration  as  follows: Let  p_0  be\r\n"
- "the largest  known  prime having  shape  n^2+n+1.  Let  n_0\r\n"
- "be  the corresponding  value  of  n i.e.  n_0^2+n_0+1  =\r\n"
- "p_0. Consider  the  interval  n_0,  n_0+p_0.  I   am  considering\r\n"
- "this  interval because  f(n_0+kf(n_0))  is  congruent  to 0\r\n"
- "(mod f(n_0)).\r\n"
- "Note  the  fraction  of  this  interval  not  covered  by the\r\n"
- "failure  functions(  arithmetic  progressions)  1+3k, 2+7k, 3+13k\r\n"
- "4+7k............ .  Let  n_1  be  the largest  of  these  values\r\n"
- "of  n  not  covered  by  any  failure  function. f(n_1)  is  prime\r\n"
- "which  need not be  tested  for  primality.  Let this  prime \r\n"
- "be p_1.  2nd  iteration:  consider  the  interval n_1, n_1 +p_1.\r\n"
- "proceed  as in  the  1st  iteration  i.e.  mark  the  fraction of\r\n"
- "values  of n  in this interval not covered  by  any  failure function.\r\n"
- "Let  n_2  be  the largest  value  of  n  in this  interval not\r\n"
- "covered  by  any failure function.  f(n_2)  is  prime; call  this\r\n"
- "p_2.  Consider  the  interval  n_2,  n_2 + p_2.  Mark  the\r\n"
- "fraction  of values of  n in this  interval  not  covered  by\r\n"
- "any  failure function.  The  fraction  of values  of n  not\r\n"
- "covered  by  any  failure  function  in  any  interval  decreases\r\n"
- "asymptotically  from iteration to iteration  to  a   rational  number-  call  this
  \ beta\r\n"
- "                       (to  be continued ). [P] sketch  proof  -  in  commonly
  \ understood terminology by akdevaraj Nov 8This  means  we  have  a case of indirect
  \ primality testing:\r\n"
- "f(n)  is  composite  if  n = n_0 +kf(n_0).  Otherwise\r\n"
- "f(n)  is  prime.  Note  we  are  not testing  f(n)\r\n"
- "directly  for primality; we are  only  testing\r\n"
- "whether  is n  is  generated by  n_0+kf(n_0); if  so\r\n"
- "f(n)  is composite-if not  f(n)  is  prime.\r\n"
- "                                          (to  be  continued)\r\n"
- " [P] sketch  proof  -  in  commonly  understood terminology by akdevaraj Nov 6Let
  me be very  clear as to  what  counter  example  you\r\n"
- "should try to  find;  I  will  do  this  by  taking\r\n"
- "a  specific  interval -  n = 5  to  36.This  interval\r\n"
- "is spaned by  the failure  functions(  arithmetic \r\n"
- "progressions )  1+3k, 2+7k,  3 +13k,  4 +7k  and\r\n"
- "5+31k, 7+19k  and  9+13k.  However  the  values of n\r\n"
- "skiped by  the  above  are  5,6, 8, 12, 14, 15, 17, 20, 21,\r\n"
- "24,27 and  33.  Now  all  these  skiped  values  of  n  are  such\r\n"
- "that  f(n)  is  prime.  So  you  have to  find  a value  of  \r\n"
- "n  skiped  by  the  relevant  failure  functions  such  that\r\n"
- "f(n)  is  composite.  Such  a  counter example  may  be  very\r\n"
- "difficult to  find. [P] sketch  proof  -  in  commonly  understood terminology
  by akdevaraj Nov 6I  forgot  to  mention that  k  belongs  to  Z.\r\n"
- "Now  I  will  take a  break  for two  days  to  enable you  to\r\n"
- "find  a counter-example.\r\n"
- "                               (to  be continued) [P] sketch  proof  -  in  commonly
  \ understood terminology by akdevaraj Nov 6Let  me  summarise up  to the  point
  \ I  had  already  contributed:\r\n"
- "let  f(n)  =  n^2 + n  +  1 ( n belongs to  N). Let  n_0 be  a  \r\n"
- "specific value  of  n.   Then  n  =  n_0 + kf(n_0)  generates  values\r\n"
- "of n  such  that  f(n)  is  composite.\r\n"
- "Note:  please  ignore  trivial  cases  like k = 0.\r\n"
- "This is  easily  proved.  All  other  values  of  n  are such\r\n"
- "that  f(n)  is prime.\r\n"
- "                                             (to be  continued). [P] Sketch  proof
  -the  proposition by akdevaraj Nov 2Thank  you, Jussi.\r\n"
- "Proposition:  There  are infinitely  many  prime  numbers  with  shape\r\n"
- "n^2+n+1. [P] sketch proof by pahio Nov 1Yes.  First the proposition! [P] sketch
  \ proof  -  in  commonly  understood terminology by akdevaraj Nov 1Dear  Jussi,
  \ would you  like  me to  continue? [P] Kind  attention  Jussi  and  others  who
  \ are interested   by akdevaraj Oct 19Any  doubt  so  far  pl? [P] Please show the
  proposition by pahio Oct 19Please show the proposition you want to prove.  Then
  give its proof in a concise and clear form.\r\n"
- "\r\n"
- "Regards,\r\n"
- "\r\n"
- "Jussimore              \n"
- "      \n"
- "    \n"
- |2+

- |2+

- |2+

- |2+

- |2+

- |2
    (function($){
- |2
      $(document).ready(function(){
- |2
         $("#front-left-block-tabs").tabs();
- |2
         // $("#front-right-block-tabs").tabs();
- |2
         $("#front-left-mid-block-tabs").tabs();
- |2
         //       $("#front-right-mid-block-tabs").tabs();
- |2
         // $("#front-left-bot-block-tabs").tabs();
- |2+

- |2
     ////////////// resize the top block
- |2
     var max_lines =0;
- |2
     var min_line_height = 10;
- |2
     // console.log("look inside");
- |2
     // look inside each block
- |2
     jQuery('#front-left-block-tabs').each( function(){
- |2
         // look inside each span
- |2
         var num_lines =1;
- |2
         var this_line_height =10;
- |2
         jQuery(this).find('span').each( function(){
- |2
             if ($(this).css('display') != 'none'){
- "\t   // count the number of lines in this span\n"
- "\t   num_lines += Math.ceil(jQuery(this).text().length/84);\n"
- "\t   max_lines = Math.max(max_lines,num_lines);\n"
- |2
             }
- |2
           });
- |2+

- |2
         this_line_height = (790/num_lines);
- |2
         min_line_height = Math.min(this_line_height,min_line_height);
- |2+

- |2
         // now that we know how many lines in THIS block
- |2
         // we set the line height in this block accordingly
- |2
         jQuery(this).css('line-height',this_line_height+'px')
- |2
         jQuery(this).css('height',Math.ceil((max_lines*min_line_height*1.67))+'px');
- |2
        });
- |2
          ////////////// end of resizing the top block
- |2+

- |2
      //// Define the toggle action for the green plus
- |2+

- |2
      // This works, but the inter-line spacing seems a little off.
- |2
     var TextHidden = true;
- |2+

- |2
      jQuery("#toggle-hidden-text-controller").click(function(){
- |2
        jQuery('.toggle-hidden-text').toggle('slow', function(){});
- |2
        ResizeFunc();
- |2
       });
- |2+

- |2
         // We must resize the lower block repeatedly, so we define this as a function
- |2
         var ResizeFunc = function() {
- |2+

- |2
           console.log("Resize envoked");
- |2
           TextHidden = !TextHidden;
- |2+

- |2
           var max_lines =0;
- |2
           var min_line_height = 10;
- |2+

- |2
         jQuery('#front-left-mid-block-tabs').each( function(){
- |2+

- |2
               var num_lines =1;
- |2
               var this_line_height =10;
- |2+

- |2
               // look inside each span
- |2
               jQuery(this).find('span').each( function(){
- |2
                   if ($(this).css('display') != 'none'){
- |2
                   // count the number of lines in this span
- |2
                     num_lines += Math.ceil(jQuery(this).text().length/84);
- |2
                     max_lines = Math.max(max_lines,num_lines);
- |2
                   }
- |2
               });
- |2+

- |2
               // - ($(this).css('display') != 'none')
- |2
               // look inside each div
- |2
               if (!TextHidden){
- |2
               jQuery(this).find('.toggle-hidden-text').each( function(){
- "  \t     // count the number of lines in this div\n"
- |2
                  num_lines += Math.ceil(jQuery(this).text().length/84);
- |2
                  max_lines = Math.max(max_lines,num_lines);
- |2
               });
- |2
               }
- |2+

- |2
               this_line_height = (780/num_lines);
- |2
               min_line_height = Math.min(this_line_height,min_line_height);
- |2+

- |2
               // now that we know how many lines in THIS block
- |2
               // we set the line height in this block accordingly
- |2
               if(!TextHidden){
- |2
                 multiplier=1.7;
- |2
               } else {
- |2
                 multiplier=1;
- |2
               }
- |2+

- |2
               var FinalHeight = Math.ceil((max_lines*min_line_height*1.65));
- |2
               jQuery(this).css('line-height',multiplier*this_line_height+'px')
- |2
               jQuery(this).css('height', FinalHeight+'px');
- |2
               console.log(FinalHeight);
- |2
        });
- |2
       }
- |2+

- |2
       // ResizeFunc();
- |2+

- |2
      })
- |2
    })(jQuery);
- |2+

- "      \n"
- |2+

- "     \n"
- "  \n"
- "    \n"
- |2
        Search form
- "    \n"
- "  Search \n"
- " \n"
- |2+

- "  \n"
- |2+

- |2+

- |2+

- |2+

- "  \n"
- |2
      Home
- |
  Articles
- |
  Questions
- |2+

- |2+

- |2+

- |2+

- "  \n"
- |2
      ForumsPlanetary Bugs
- |
  HS/Secondary
- |
  University/Tertiary
- |
  Graduate/Advanced
- |
  Industry/Practice
- |
  Research Topics
- |
  LaTeX help
- |
  Math Comptetitions
- |
  Math History
- |
  Math Humor
- |
  PlanetMath Comments
- |
  PlanetMath System Updates and News
- |
  PlanetMath help
- |
  PlanetMath.ORG
- |
  Strategic Communications Development
- |
  The Math Pub
- |
  Testing messages (ignore)
- |2+

- |
  Other useful stuffGallery
- |
  Site Docs
- |2+

- |
  Corrections
- |2+

- |2+

- "    \n"
- " \n"
- |2+

- "      \n"
- "      \n"
- |2+

- |2
         News
- "    \n"
- "  \n"
- "    2014-01-09Development Discussion on  11 January  by rspuzio2013-12-25Community
  Discussion on 4 January  by rspuzio2013-11-114th quarter board meeting - 16 November
  2013  by rspuzio2013-11-03Development Discussion on 9 November  by rspuzio2013-10-30Community
  Discussion on 2 November  by rspuzio2013-10-02Community Discussion on 5 October
  \ by rspuzio2013-09-02New improved editor and faster page loads  by unlordmore  \n"
- |2+

- |2+

- |2+

- |2+

- |2
         Top Users
- "    \n"
- "  \n"
- "    pahio139249 CWoo138343 bci199403 rspuzio65038 PrimeFan52255 Wkbj7949531 Mathprof46699
  more  \n"
- |2+

- |2+

- |2+

- |2+

- |2
         Latest Revisions
- "    \n"
- "  \n"
- "    2015-12-14Non-Newtonian Calculus  by smithpith2015-11-18field of algebraic
  numbers  by pahioexample of solving a cubic equation  by pahio2015-11-17number  by
  pahio2015-11-14Sharam Kohan  by MaryamVahedi2015-11-11Mayan Seasonal Almanac  by
  milogardner2015-11-07field arising from special relativity  by pahiomore  \n"
- |2+

- |2+

- "      \n"
- "    \n"
- " \n"
- |2+

- "  \n"
- |2+

- "    \n"
- "    \n"
- |2+

- "     \n"
- "  \n"
- "    Powered By:  =  +  + ♡    \n"
- |2+

- |2+

- "  \n"
- |2+

- |2+

- |2+

- |2
    PlanetMath is a virtual community which aims to help make mathematical knowledge more accessible. PlanetMath's content is created collaboratively: the main feature is the mathematics encyclopedia with entries written and reviewed by members. The entries are contributed under the terms of the Creative Commons By/Share-Alike License in order to preserve the rights of authors, readers and other content creators in a sensible way.  We use LaTeX, the
- |
  lingua franca of the worldwide mathematical community.
- "  Beginning February 23th 2015 we experienced 15 days of downtime when our server
  stopped working.  We moved a backup to DigitalOcean, and we're back online.  Some
  features aren't working yet; we're restoring them ASAP.  Please report bugs in the
  Planetary Bugs Forum or on Github."
index:
  jump: !ruby/object:Word
    word: jump
    stem: jump
    docFrequency: 2.0
    docPositions:
    - 2
  navigation: !ruby/object:Word
    word: navigation
    stem: navig
    docFrequency: 2.0
    docPositions:
    - 2
  jq: !ruby/object:Word
    word: jq
    stem: jq
    docFrequency: 6.0
    docPositions:
    - 6
    - 8
    - 10
    - 13
    - 18
  noconflict: !ruby/object:Word
    word: noconflict
    stem: noconflict
    docFrequency: 2.0
    docPositions:
    - 6
  '': !ruby/object:Word
    word: ''
    stem: ''
    docFrequency: 54.0
    docPositions:
    - 8
    - 10
    - 12
    - 13
    - 17
    - 18
    - 85
    - 91
    - 116
    - 122
    - 131
    - 147
    - 153
    - 154
    - 168
    - 175
    - 190
    - 215
    - 221
    - 230
    - 246
    - 252
    - 253
    - 267
    - 274
    - 288
    - 289
    - 290
    - 291
    - 292
    - 293
    - 294
    - 296
    - 299
    - 300
    - 302
    - 307
    - 316
    - 317
    - 321
    - 323
    - 325
    - 333
    - 347
    - 350
    - 356
    - 357
    - 360
    - 369
    - 370
    - 373
    - 384
    - 387
  document: !ruby/object:Word
    word: document
    stem: document
    docFrequency: 3.0
    docPositions:
    - 8
    - 289
  ready: !ruby/object:Word
    word: ready
    stem: readi
    docFrequency: 3.0
    docPositions:
    - 8
    - 289
  function: !ruby/object:Word
    word: function
    stem: function
    docFrequency: 33.0
    docPositions:
    - 8
    - 11
    - 16
    - 96
    - 101
    - 112
    - 117
    - 135
    - 139
    - 141
    - 144
    - 145
    - 195
    - 200
    - 211
    - 216
    - 234
    - 238
    - 240
    - 243
    - 244
    - 288
    - 289
    - 301
    - 305
    - 328
    - 329
    - 333
    - 334
    - 342
    - 348
    - 359
  topmenu: !ruby/object:Word
    word: topmenu
    stem: topmenu
    docFrequency: 2.0
    docPositions:
    - 10
  ul: !ruby/object:Word
    word: ul
    stem: ul
    docFrequency: 4.0
    docPositions:
    - 10
    - 13
    - 18
  li: !ruby/object:Word
    word: li
    stem: li
    docFrequency: 2.0
    docPositions:
    - 10
  hover: !ruby/object:Word
    word: hover
    stem: hover
    docFrequency: 2.0
    docPositions:
    - 10
  show: !ruby/object:Word
    word: show
    stem: show
    docFrequency: 6.0
    docPositions:
    - 12
    - 177
    - 276
  its: !ruby/object:Word
    word: its
    stem: it
    docFrequency: 7.0
    docPositions:
    - 12
    - 17
    - 94
    - 177
    - 193
    - 276
  submenu: !ruby/object:Word
    word: submenu
    stem: submenu
    docFrequency: 3.0
    docPositions:
    - 12
    - 17
  fadein: !ruby/object:Word
    word: fadein
    stem: fadein
    docFrequency: 2.0
    docPositions:
    - 13
  hide: !ruby/object:Word
    word: hide
    stem: hide
    docFrequency: 2.0
    docPositions:
    - 17
  delay: !ruby/object:Word
    word: delay
    stem: delai
    docFrequency: 2.0
    docPositions:
    - 18
  fadeout: !ruby/object:Word
    word: fadeout
    stem: fadeout
    docFrequency: 2.0
    docPositions:
    - 18
  planetmath: !ruby/object:Word
    word: planetmath
    stem: planetmath
    docFrequency: 10.0
    docPositions:
    - 33
    - 46
    - 423
    - 424
    - 425
    - 426
    - 483
  org: !ruby/object:Word
    word: org
    stem: org
    docFrequency: 3.0
    docPositions:
    - 33
    - 426
  math: !ruby/object:Word
    word: math
    stem: math
    docFrequency: 16.0
    docPositions:
    - 36
    - 308
    - 309
    - 314
    - 319
    - 351
    - 352
    - 361
    - 362
    - 367
    - 377
    - 420
    - 421
    - 422
    - 428
  people: !ruby/object:Word
    word: people
    stem: peopl
    docFrequency: 3.0
    docPositions:
    - 36
  user: !ruby/object:Word
    word: user
    stem: user
    docFrequency: 3.0
    docPositions:
    - 39
    - 53
  menufaq: !ruby/object:Word
    word: menufaq
    stem: menufaq
    docFrequency: 2.0
    docPositions:
    - 39
  welcome: !ruby/object:Word
    word: welcome
    stem: welcom
    docFrequency: 2.0
    docPositions:
    - 43
  virtual: !ruby/object:Word
    word: virtual
    stem: virtual
    docFrequency: 3.0
    docPositions:
    - 46
    - 483
  community: !ruby/object:Word
    word: community
    stem: commun
    docFrequency: 5.0
    docPositions:
    - 46
    - 47
    - 483
    - 484
  which: !ruby/object:Word
    word: which
    stem: which
    docFrequency: 7.0
    docPositions:
    - 46
    - 116
    - 136
    - 215
    - 235
    - 483
  aims: !ruby/object:Word
    word: aims
    stem: aim
    docFrequency: 3.0
    docPositions:
    - 46
    - 483
  help: !ruby/object:Word
    word: help
    stem: help
    docFrequency: 5.0
    docPositions:
    - 46
    - 419
    - 425
    - 483
  make: !ruby/object:Word
    word: make
    stem: make
    docFrequency: 3.0
    docPositions:
    - 46
    - 483
  mathematical: !ruby/object:Word
    word: mathematical
    stem: mathemat
    docFrequency: 5.0
    docPositions:
    - 46
    - 47
    - 483
    - 484
  knowledge: !ruby/object:Word
    word: knowledge
    stem: knowledg
    docFrequency: 3.0
    docPositions:
    - 46
    - 483
  more: !ruby/object:Word
    word: more
    stem: more
    docFrequency: 6.0
    docPositions:
    - 46
    - 114
    - 213
    - 454
    - 483
  accessible: !ruby/object:Word
    word: accessible
    stem: access
    docFrequency: 3.0
    docPositions:
    - 46
    - 483
  s: !ruby/object:Word
    word: s
    stem: s
    docFrequency: 3.0
    docPositions:
    - 46
    - 483
  content: !ruby/object:Word
    word: content
    stem: content
    docFrequency: 5.0
    docPositions:
    - 46
    - 483
  created: !ruby/object:Word
    word: created
    stem: creat
    docFrequency: 3.0
    docPositions:
    - 46
    - 483
  collaboratively: !ruby/object:Word
    word: collaboratively
    stem: collabor
    docFrequency: 3.0
    docPositions:
    - 46
    - 483
  main: !ruby/object:Word
    word: main
    stem: main
    docFrequency: 3.0
    docPositions:
    - 46
    - 483
  feature: !ruby/object:Word
    word: feature
    stem: featur
    docFrequency: 3.0
    docPositions:
    - 46
    - 483
  mathematics: !ruby/object:Word
    word: mathematics
    stem: mathemat
    docFrequency: 3.0
    docPositions:
    - 46
    - 483
  encyclopedia: !ruby/object:Word
    word: encyclopedia
    stem: encyclopedia
    docFrequency: 3.0
    docPositions:
    - 46
    - 483
  entries: !ruby/object:Word
    word: entries
    stem: entri
    docFrequency: 5.0
    docPositions:
    - 46
    - 483
  written: !ruby/object:Word
    word: written
    stem: written
    docFrequency: 3.0
    docPositions:
    - 46
    - 483
  and: !ruby/object:Word
    word: and
    stem: and
    docFrequency: 23.0
    docPositions:
    - 46
    - 48
    - 110
    - 124
    - 158
    - 159
    - 161
    - 177
    - 209
    - 223
    - 257
    - 258
    - 260
    - 276
    - 424
    - 446
    - 483
    - 485
  reviewed: !ruby/object:Word
    word: reviewed
    stem: review
    docFrequency: 3.0
    docPositions:
    - 46
    - 483
  members: !ruby/object:Word
    word: members
    stem: member
    docFrequency: 3.0
    docPositions:
    - 46
    - 483
  contributed: !ruby/object:Word
    word: contributed
    stem: contribut
    docFrequency: 5.0
    docPositions:
    - 46
    - 168
    - 267
    - 483
  under: !ruby/object:Word
    word: under
    stem: under
    docFrequency: 3.0
    docPositions:
    - 46
    - 483
  terms: !ruby/object:Word
    word: terms
    stem: term
    docFrequency: 3.0
    docPositions:
    - 46
    - 483
  creative: !ruby/object:Word
    word: creative
    stem: creativ
    docFrequency: 3.0
    docPositions:
    - 46
    - 483
  commons: !ruby/object:Word
    word: commons
    stem: common
    docFrequency: 3.0
    docPositions:
    - 46
    - 483
  share: !ruby/object:Word
    word: share
    stem: share
    docFrequency: 3.0
    docPositions:
    - 46
    - 483
  alike: !ruby/object:Word
    word: alike
    stem: alik
    docFrequency: 3.0
    docPositions:
    - 46
    - 483
  license: !ruby/object:Word
    word: license
    stem: licens
    docFrequency: 3.0
    docPositions:
    - 46
    - 483
  order: !ruby/object:Word
    word: order
    stem: order
    docFrequency: 3.0
    docPositions:
    - 46
    - 483
  preserve: !ruby/object:Word
    word: preserve
    stem: preserv
    docFrequency: 3.0
    docPositions:
    - 46
    - 483
  rights: !ruby/object:Word
    word: rights
    stem: right
    docFrequency: 3.0
    docPositions:
    - 46
    - 483
  authors: !ruby/object:Word
    word: authors
    stem: author
    docFrequency: 3.0
    docPositions:
    - 46
    - 483
  readers: !ruby/object:Word
    word: readers
    stem: reader
    docFrequency: 3.0
    docPositions:
    - 46
    - 483
  other: !ruby/object:Word
    word: other
    stem: other
    docFrequency: 6.0
    docPositions:
    - 46
    - 173
    - 272
    - 431
    - 483
  creators: !ruby/object:Word
    word: creators
    stem: creator
    docFrequency: 3.0
    docPositions:
    - 46
    - 483
  sensible: !ruby/object:Word
    word: sensible
    stem: sensibl
    docFrequency: 3.0
    docPositions:
    - 46
    - 483
  way: !ruby/object:Word
    word: way
    stem: wai
    docFrequency: 3.0
    docPositions:
    - 46
    - 483
  we: !ruby/object:Word
    word: we
    stem: we
    docFrequency: 27.0
    docPositions:
    - 46
    - 48
    - 111
    - 126
    - 147
    - 149
    - 150
    - 210
    - 225
    - 246
    - 248
    - 249
    - 316
    - 317
    - 333
    - 369
    - 370
    - 483
    - 485
  use: !ruby/object:Word
    word: use
    stem: us
    docFrequency: 3.0
    docPositions:
    - 46
    - 483
  latex: !ruby/object:Word
    word: latex
    stem: latex
    docFrequency: 4.0
    docPositions:
    - 46
    - 419
    - 483
  lingua: !ruby/object:Word
    word: lingua
    stem: lingua
    docFrequency: 3.0
    docPositions:
    - 47
    - 484
  franca: !ruby/object:Word
    word: franca
    stem: franca
    docFrequency: 3.0
    docPositions:
    - 47
    - 484
  worldwide: !ruby/object:Word
    word: worldwide
    stem: worldwid
    docFrequency: 3.0
    docPositions:
    - 47
    - 484
  beginning: !ruby/object:Word
    word: beginning
    stem: begin
    docFrequency: 3.0
    docPositions:
    - 48
    - 485
  february: !ruby/object:Word
    word: february
    stem: februari
    docFrequency: 3.0
    docPositions:
    - 48
    - 485
  experienced: !ruby/object:Word
    word: experienced
    stem: experienc
    docFrequency: 3.0
    docPositions:
    - 48
    - 485
  days: !ruby/object:Word
    word: days
    stem: dai
    docFrequency: 5.0
    docPositions:
    - 48
    - 166
    - 265
    - 485
  downtime: !ruby/object:Word
    word: downtime
    stem: downtim
    docFrequency: 3.0
    docPositions:
    - 48
    - 485
  our: !ruby/object:Word
    word: our
    stem: our
    docFrequency: 3.0
    docPositions:
    - 48
    - 485
  server: !ruby/object:Word
    word: server
    stem: server
    docFrequency: 3.0
    docPositions:
    - 48
    - 485
  stopped: !ruby/object:Word
    word: stopped
    stem: stop
    docFrequency: 3.0
    docPositions:
    - 48
    - 485
  working: !ruby/object:Word
    word: working
    stem: work
    docFrequency: 5.0
    docPositions:
    - 48
    - 485
  moved: !ruby/object:Word
    word: moved
    stem: move
    docFrequency: 3.0
    docPositions:
    - 48
    - 485
  backup: !ruby/object:Word
    word: backup
    stem: backup
    docFrequency: 3.0
    docPositions:
    - 48
    - 485
  digitalocean: !ruby/object:Word
    word: digitalocean
    stem: digitalocean
    docFrequency: 3.0
    docPositions:
    - 48
    - 485
  re: !ruby/object:Word
    word: re
    stem: re
    docFrequency: 5.0
    docPositions:
    - 48
    - 485
  back: !ruby/object:Word
    word: back
    stem: back
    docFrequency: 3.0
    docPositions:
    - 48
    - 485
  online: !ruby/object:Word
    word: online
    stem: onlin
    docFrequency: 3.0
    docPositions:
    - 48
    - 485
  some: !ruby/object:Word
    word: some
    stem: some
    docFrequency: 3.0
    docPositions:
    - 48
    - 485
  features: !ruby/object:Word
    word: features
    stem: featur
    docFrequency: 3.0
    docPositions:
    - 48
    - 485
  aren: !ruby/object:Word
    word: aren
    stem: aren
    docFrequency: 3.0
    docPositions:
    - 48
    - 485
  t: !ruby/object:Word
    word: t
    stem: t
    docFrequency: 3.0
    docPositions:
    - 48
    - 485
  yet: !ruby/object:Word
    word: yet
    stem: yet
    docFrequency: 3.0
    docPositions:
    - 48
    - 485
  restoring: !ruby/object:Word
    word: restoring
    stem: restor
    docFrequency: 3.0
    docPositions:
    - 48
    - 485
  them: !ruby/object:Word
    word: them
    stem: them
    docFrequency: 3.0
    docPositions:
    - 48
    - 485
  asap: !ruby/object:Word
    word: asap
    stem: asap
    docFrequency: 3.0
    docPositions:
    - 48
    - 485
  please: !ruby/object:Word
    word: please
    stem: pleas
    docFrequency: 7.0
    docPositions:
    - 48
    - 172
    - 177
    - 271
    - 276
    - 485
  report: !ruby/object:Word
    word: report
    stem: report
    docFrequency: 3.0
    docPositions:
    - 48
    - 485
  bugs: !ruby/object:Word
    word: bugs
    stem: bug
    docFrequency: 6.0
    docPositions:
    - 48
    - 413
    - 485
  planetary: !ruby/object:Word
    word: planetary
    stem: planetari
    docFrequency: 3.0
    docPositions:
    - 48
    - 485
  forum: !ruby/object:Word
    word: forum
    stem: forum
    docFrequency: 3.0
    docPositions:
    - 48
    - 485
  github: !ruby/object:Word
    word: github
    stem: github
    docFrequency: 3.0
    docPositions:
    - 48
    - 485
  login: !ruby/object:Word
    word: login
    stem: login
    docFrequency: 2.0
    docPositions:
    - 53
  username: !ruby/object:Word
    word: username
    stem: usernam
    docFrequency: 2.0
    docPositions:
    - 57
  password: !ruby/object:Word
    word: password
    stem: password
    docFrequency: 3.0
    docPositions:
    - 60
    - 63
  sign: !ruby/object:Word
    word: sign
    stem: sign
    docFrequency: 2.0
    docPositions:
    - 62
  up: !ruby/object:Word
    word: up
    stem: up
    docFrequency: 6.0
    docPositions:
    - 62
    - 126
    - 168
    - 225
    - 267
  account: !ruby/object:Word
    word: account
    stem: account
    docFrequency: 2.0
    docPositions:
    - 62
  forgot: !ruby/object:Word
    word: forgot
    stem: forgot
    docFrequency: 4.0
    docPositions:
    - 63
    - 165
    - 264
  new: !ruby/object:Word
    word: new
    stem: new
    docFrequency: 2.0
    docPositions:
    - 83
  articles: !ruby/object:Word
    word: articles
    stem: articl
    docFrequency: 3.0
    docPositions:
    - 83
    - 406
  ref: !ruby/object:Word
    word: ref
    stem: ref
    docFrequency: 15.0
    docPositions:
    - 85
  field: !ruby/object:Word
    word: field
    stem: field
    docFrequency: 2.0
    docPositions:
    - 85
  arising: !ruby/object:Word
    word: arising
    stem: aris
    docFrequency: 3.0
    docPositions:
    - 85
    - 462
  special: !ruby/object:Word
    word: special
    stem: special
    docFrequency: 3.0
    docPositions:
    - 85
    - 462
  relativity: !ruby/object:Word
    word: relativity
    stem: rel
    docFrequency: 3.0
    docPositions:
    - 85
    - 462
  pahiooct: !ruby/object:Word
    word: pahiooct
    stem: pahiooct
    docFrequency: 2.0
    docPositions:
    - 85
  carmichael: !ruby/object:Word
    word: carmichael
    stem: carmichael
    docFrequency: 2.0
    docPositions:
    - 85
  numbers: !ruby/object:Word
    word: numbers
    stem: number
    docFrequency: 5.0
    docPositions:
    - 85
    - 176
    - 275
    - 462
  contd: !ruby/object:Word
    word: contd
    stem: contd
    docFrequency: 2.0
    docPositions:
    - 85
  akdevarajjul: !ruby/object:Word
    word: akdevarajjul
    stem: akdevarajjul
    docFrequency: 6.0
    docPositions:
    - 85
  carmichal: !ruby/object:Word
    word: carmichal
    stem: carmich
    docFrequency: 5.0
    docPositions:
    - 85
  number: !ruby/object:Word
    word: number
    stem: number
    docFrequency: 16.0
    docPositions:
    - 85
    - 100
    - 101
    - 102
    - 146
    - 199
    - 200
    - 201
    - 245
    - 307
    - 350
    - 360
  failure: !ruby/object:Word
    word: failure
    stem: failur
    docFrequency: 32.0
    docPositions:
    - 85
    - 96
    - 101
    - 105
    - 110
    - 114
    - 117
    - 123
    - 133
    - 135
    - 139
    - 141
    - 144
    - 145
    - 157
    - 163
    - 195
    - 200
    - 204
    - 209
    - 213
    - 216
    - 222
    - 232
    - 234
    - 238
    - 240
    - 243
    - 244
    - 256
    - 262
  functions: !ruby/object:Word
    word: functions
    stem: function
    docFrequency: 16.0
    docPositions:
    - 85
    - 105
    - 110
    - 115
    - 123
    - 133
    - 157
    - 163
    - 204
    - 209
    - 214
    - 222
    - 232
    - 256
    - 262
  akdevarajmay: !ruby/object:Word
    word: akdevarajmay
    stem: akdevarajmai
    docFrequency: 2.0
    docPositions:
    - 85
  induction: !ruby/object:Word
    word: induction
    stem: induct
    docFrequency: 2.0
    docPositions:
    - 85
  proof: !ruby/object:Word
    word: proof
    stem: proof
    docFrequency: 26.0
    docPositions:
    - 85
    - 91
    - 97
    - 116
    - 122
    - 147
    - 154
    - 165
    - 168
    - 175
    - 177
    - 190
    - 196
    - 215
    - 221
    - 246
    - 253
    - 264
    - 267
    - 274
    - 276
  fundamental: !ruby/object:Word
    word: fundamental
    stem: fundament
    docFrequency: 2.0
    docPositions:
    - 85
  theorem: !ruby/object:Word
    word: theorem
    stem: theorem
    docFrequency: 4.0
    docPositions:
    - 85
  arithmet: !ruby/object:Word
    word: arithmet
    stem: arithmet
    docFrequency: 2.0
    docPositions:
    - 85
  pahiomar: !ruby/object:Word
    word: pahiomar
    stem: pahiomar
    docFrequency: 2.0
    docPositions:
    - 85
  birkhoff: !ruby/object:Word
    word: birkhoff
    stem: birkhoff
    docFrequency: 2.0
    docPositions:
    - 85
  recurrence: !ruby/object:Word
    word: recurrence
    stem: recurr
    docFrequency: 3.0
    docPositions:
    - 85
  filipemar: !ruby/object:Word
    word: filipemar
    stem: filipemar
    docFrequency: 3.0
    docPositions:
    - 85
  multiple: !ruby/object:Word
    word: multiple
    stem: multipl
    docFrequency: 2.0
    docPositions:
    - 85
  convergence: !ruby/object:Word
    word: convergence
    stem: converg
    docFrequency: 2.0
    docPositions:
    - 85
  mean: !ruby/object:Word
    word: mean
    stem: mean
    docFrequency: 2.0
    docPositions:
    - 85
  pahiojan: !ruby/object:Word
    word: pahiojan
    stem: pahiojan
    docFrequency: 4.0
    docPositions:
    - 85
  definition: !ruby/object:Word
    word: definition
    stem: definit
    docFrequency: 3.0
    docPositions:
    - 85
  vector: !ruby/object:Word
    word: vector
    stem: vector
    docFrequency: 2.0
    docPositions:
    - 85
  space: !ruby/object:Word
    word: space
    stem: space
    docFrequency: 2.0
    docPositions:
    - 85
  needs: !ruby/object:Word
    word: needs
    stem: need
    docFrequency: 2.0
    docPositions:
    - 85
  'no': !ruby/object:Word
    word: 'no'
    stem: 'no'
    docFrequency: 8.0
    docPositions:
    - 85
    - 91
    - 104
    - 107
    - 190
    - 203
    - 206
  commutativity: !ruby/object:Word
    word: commutativity
    stem: commut
    docFrequency: 2.0
    docPositions:
    - 85
  redundancy: !ruby/object:Word
    word: redundancy
    stem: redund
    docFrequency: 2.0
    docPositions:
    - 85
  two: !ruby/object:Word
    word: two
    stem: two
    docFrequency: 4.0
    docPositions:
    - 85
    - 166
    - 265
  sidedness: !ruby/object:Word
    word: sidedness
    stem: sided
    docFrequency: 2.0
    docPositions:
    - 85
  group: !ruby/object:Word
    word: group
    stem: group
    docFrequency: 2.0
    docPositions:
    - 85
  nucleus: !ruby/object:Word
    word: nucleus
    stem: nucleu
    docFrequency: 2.0
    docPositions:
    - 85
  latest: !ruby/object:Word
    word: latest
    stem: latest
    docFrequency: 4.0
    docPositions:
    - 89
    - 188
    - 459
  messages: !ruby/object:Word
    word: messages
    stem: messag
    docFrequency: 4.0
    docPositions:
    - 89
    - 188
    - 429
  p: !ruby/object:Word
    word: p
    stem: p
    docFrequency: 29.0
    docPositions:
    - 91
    - 97
    - 116
    - 122
    - 147
    - 154
    - 165
    - 168
    - 175
    - 177
    - 190
    - 196
    - 215
    - 221
    - 246
    - 253
    - 264
    - 267
    - 274
    - 276
  questions: !ruby/object:Word
    word: questions
    stem: question
    docFrequency: 6.0
    docPositions:
    - 91
    - 190
    - 407
  pahio: !ruby/object:Word
    word: pahio
    stem: pahio
    docFrequency: 7.0
    docPositions:
    - 91
    - 177
    - 190
    - 276
  nov: !ruby/object:Word
    word: nov
    stem: nov
    docFrequency: 25.0
    docPositions:
    - 91
    - 97
    - 116
    - 122
    - 147
    - 154
    - 165
    - 168
    - 175
    - 177
    - 190
    - 196
    - 215
    - 221
    - 246
    - 253
    - 264
    - 267
    - 274
    - 276
  sketch: !ruby/object:Word
    word: sketch
    stem: sketch
    docFrequency: 23.0
    docPositions:
    - 91
    - 97
    - 116
    - 122
    - 147
    - 154
    - 165
    - 168
    - 175
    - 177
    - 190
    - 196
    - 215
    - 221
    - 246
    - 253
    - 264
    - 267
    - 274
    - 276
  commonly: !ruby/object:Word
    word: commonly
    stem: commonli
    docFrequency: 19.0
    docPositions:
    - 91
    - 97
    - 116
    - 122
    - 147
    - 154
    - 165
    - 168
    - 177
    - 190
    - 196
    - 215
    - 221
    - 246
    - 253
    - 264
    - 267
    - 276
  understood: !ruby/object:Word
    word: understood
    stem: understood
    docFrequency: 19.0
    docPositions:
    - 91
    - 97
    - 116
    - 122
    - 147
    - 154
    - 165
    - 168
    - 177
    - 190
    - 196
    - 215
    - 221
    - 246
    - 253
    - 264
    - 267
    - 276
  terminology: !ruby/object:Word
    word: terminology
    stem: terminolog
    docFrequency: 19.0
    docPositions:
    - 91
    - 97
    - 116
    - 122
    - 147
    - 154
    - 165
    - 168
    - 177
    - 190
    - 196
    - 215
    - 221
    - 246
    - 253
    - 264
    - 267
    - 276
  akdevaraj: !ruby/object:Word
    word: akdevaraj
    stem: akdevaraj
    docFrequency: 23.0
    docPositions:
    - 91
    - 97
    - 116
    - 122
    - 147
    - 154
    - 165
    - 168
    - 175
    - 177
    - 190
    - 196
    - 215
    - 221
    - 246
    - 253
    - 264
    - 267
    - 274
    - 276
  would: !ruby/object:Word
    word: would
    stem: would
    docFrequency: 5.0
    docPositions:
    - 91
    - 177
    - 190
    - 276
  like: !ruby/object:Word
    word: like
    stem: like
    docFrequency: 7.0
    docPositions:
    - 91
    - 172
    - 177
    - 190
    - 271
    - 276
  conclude: !ruby/object:Word
    word: conclude
    stem: conclud
    docFrequency: 3.0
    docPositions:
    - 91
    - 190
  my: !ruby/object:Word
    word: my
    stem: my
    docFrequency: 5.0
    docPositions:
    - 91
    - 106
    - 190
    - 205
  message: !ruby/object:Word
    word: message
    stem: messag
    docFrequency: 3.0
    docPositions:
    - 91
    - 190
  one: !ruby/object:Word
    word: one
    stem: 'on'
    docFrequency: 9.0
    docPositions:
    - 91
    - 94
    - 111
    - 114
    - 190
    - 193
    - 210
    - 213
  point: !ruby/object:Word
    word: point
    stem: point
    docFrequency: 5.0
    docPositions:
    - 91
    - 168
    - 190
    - 267
  fact: !ruby/object:Word
    word: fact
    stem: fact
    docFrequency: 3.0
    docPositions:
    - 92
    - 191
  any: !ruby/object:Word
    word: any
    stem: ani
    docFrequency: 29.0
    docPositions:
    - 92
    - 97
    - 101
    - 104
    - 112
    - 116
    - 117
    - 119
    - 135
    - 139
    - 141
    - 144
    - 145
    - 191
    - 196
    - 200
    - 203
    - 211
    - 215
    - 216
    - 218
    - 234
    - 238
    - 240
    - 243
    - 244
  value: !ruby/object:Word
    word: value
    stem: valu
    docFrequency: 15.0
    docPositions:
    - 92
    - 106
    - 111
    - 128
    - 140
    - 162
    - 170
    - 191
    - 205
    - 210
    - 227
    - 239
    - 261
    - 269
  n: !ruby/object:Word
    word: n
    stem: n
    docFrequency: 103.0
    docPositions:
    - 92
    - 93
    - 94
    - 95
    - 96
    - 104
    - 112
    - 113
    - 116
    - 120
    - 123
    - 124
    - 127
    - 128
    - 135
    - 139
    - 140
    - 143
    - 144
    - 148
    - 149
    - 151
    - 152
    - 156
    - 159
    - 161
    - 162
    - 163
    - 164
    - 169
    - 170
    - 171
    - 173
    - 174
    - 177
    - 191
    - 192
    - 193
    - 194
    - 195
    - 203
    - 211
    - 212
    - 215
    - 219
    - 222
    - 223
    - 226
    - 227
    - 234
    - 238
    - 239
    - 242
    - 243
    - 247
    - 248
    - 250
    - 251
    - 255
    - 258
    - 260
    - 261
    - 262
    - 263
    - 268
    - 269
    - 270
    - 272
    - 273
    - 276
  skiped: !ruby/object:Word
    word: skiped
    stem: skipe
    docFrequency: 13.0
    docPositions:
    - 92
    - 105
    - 123
    - 160
    - 161
    - 163
    - 191
    - 204
    - 222
    - 259
    - 260
    - 262
  such: !ruby/object:Word
    word: such
    stem: such
    docFrequency: 17.0
    docPositions:
    - 92
    - 93
    - 124
    - 161
    - 163
    - 164
    - 171
    - 173
    - 191
    - 192
    - 223
    - 260
    - 262
    - 263
    - 270
    - 272
  f: !ruby/object:Word
    word: f
    stem: f
    docFrequency: 41.0
    docPositions:
    - 93
    - 94
    - 104
    - 109
    - 124
    - 130
    - 131
    - 135
    - 141
    - 148
    - 149
    - 152
    - 162
    - 164
    - 169
    - 171
    - 174
    - 192
    - 193
    - 203
    - 208
    - 223
    - 229
    - 230
    - 234
    - 240
    - 247
    - 248
    - 251
    - 261
    - 263
    - 268
    - 270
    - 273
  prime: !ruby/object:Word
    word: prime
    stem: prime
    docFrequency: 25.0
    docPositions:
    - 93
    - 106
    - 124
    - 127
    - 135
    - 136
    - 141
    - 149
    - 152
    - 162
    - 174
    - 176
    - 192
    - 205
    - 223
    - 226
    - 234
    - 235
    - 240
    - 248
    - 251
    - 261
    - 273
    - 275
  can: !ruby/object:Word
    word: can
    stem: can
    docFrequency: 7.0
    docPositions:
    - 93
    - 109
    - 113
    - 192
    - 208
    - 212
  proved: !ruby/object:Word
    word: proved
    stem: prove
    docFrequency: 7.0
    docPositions:
    - 93
    - 120
    - 173
    - 192
    - 219
    - 272
  whenever: !ruby/object:Word
    word: whenever
    stem: whenev
    docFrequency: 3.0
    docPositions:
    - 94
    - 193
  composite: !ruby/object:Word
    word: composite
    stem: composit
    docFrequency: 11.0
    docPositions:
    - 94
    - 148
    - 152
    - 164
    - 171
    - 193
    - 247
    - 251
    - 263
    - 270
  factors: !ruby/object:Word
    word: factors
    stem: factor
    docFrequency: 3.0
    docPositions:
    - 94
    - 193
  smaller: !ruby/object:Word
    word: smaller
    stem: smaller
    docFrequency: 7.0
    docPositions:
    - 95
    - 100
    - 102
    - 194
    - 199
    - 201
  than: !ruby/object:Word
    word: than
    stem: than
    docFrequency: 9.0
    docPositions:
    - 95
    - 97
    - 194
    - 196
  implies: !ruby/object:Word
    word: implies
    stem: impli
    docFrequency: 3.0
    docPositions:
    - 95
    - 194
  relevant: !ruby/object:Word
    word: relevant
    stem: relev
    docFrequency: 5.0
    docPositions:
    - 95
    - 163
    - 194
    - 262
  has: !ruby/object:Word
    word: has
    stem: ha
    docFrequency: 3.0
    docPositions:
    - 96
    - 195
  satisfy: !ruby/object:Word
    word: satisfy
    stem: satisfi
    docFrequency: 3.0
    docPositions:
    - 96
    - 195
  prior: !ruby/object:Word
    word: prior
    stem: prior
    docFrequency: 3.0
    docPositions:
    - 96
    - 195
  question: !ruby/object:Word
    word: question
    stem: question
    docFrequency: 3.0
    docPositions:
    - 97
    - 196
  jussi: !ruby/object:Word
    word: jussi
    stem: jussi
    docFrequency: 9.0
    docPositions:
    - 97
    - 175
    - 177
    - 196
    - 274
    - 276
  less: !ruby/object:Word
    word: less
    stem: less
    docFrequency: 7.0
    docPositions:
    - 97
    - 196
  p_i: !ruby/object:Word
    word: p_i
    stem: p_i
    docFrequency: 3.0
    docPositions:
    - 97
    - 196
  b: !ruby/object:Word
    word: b
    stem: b
    docFrequency: 3.0
    docPositions:
    - 98
    - 197
  means: !ruby/object:Word
    word: means
    stem: mean
    docFrequency: 5.0
    docPositions:
    - 98
    - 147
    - 197
    - 246
  intervals: !ruby/object:Word
    word: intervals
    stem: interv
    docFrequency: 5.0
    docPositions:
    - 98
    - 103
    - 197
    - 202
  become: !ruby/object:Word
    word: become
    stem: becom
    docFrequency: 7.0
    docPositions:
    - 98
    - 103
    - 197
    - 202
  succeedingly: !ruby/object:Word
    word: succeedingly
    stem: succeedingli
    docFrequency: 3.0
    docPositions:
    - 98
    - 197
  bigger: !ruby/object:Word
    word: bigger
    stem: bigger
    docFrequency: 7.0
    docPositions:
    - 98
    - 103
    - 197
    - 202
  c: !ruby/object:Word
    word: c
    stem: c
    docFrequency: 3.0
    docPositions:
    - 99
    - 198
  fraction: !ruby/object:Word
    word: fraction
    stem: fraction
    docFrequency: 15.0
    docPositions:
    - 99
    - 116
    - 119
    - 132
    - 138
    - 143
    - 144
    - 198
    - 215
    - 218
    - 231
    - 237
    - 242
    - 243
  primes: !ruby/object:Word
    word: primes
    stem: prime
    docFrequency: 11.0
    docPositions:
    - 99
    - 100
    - 103
    - 119
    - 120
    - 198
    - 199
    - 202
    - 218
    - 219
  each: !ruby/object:Word
    word: each
    stem: each
    docFrequency: 12.0
    docPositions:
    - 99
    - 198
    - 300
    - 301
    - 302
    - 305
    - 342
    - 347
    - 348
    - 357
    - 359
  interval: !ruby/object:Word
    word: interval
    stem: interv
    docFrequency: 31.0
    docPositions:
    - 99
    - 114
    - 116
    - 119
    - 129
    - 130
    - 132
    - 137
    - 139
    - 140
    - 142
    - 143
    - 145
    - 156
    - 198
    - 213
    - 215
    - 218
    - 228
    - 229
    - 231
    - 236
    - 238
    - 239
    - 241
    - 242
    - 244
    - 255
  becomes: !ruby/object:Word
    word: becomes
    stem: becom
    docFrequency: 5.0
    docPositions:
    - 99
    - 102
    - 198
    - 201
  suceedingly: !ruby/object:Word
    word: suceedingly
    stem: suceedingli
    docFrequency: 3.0
    docPositions:
    - 100
    - 199
  may: !ruby/object:Word
    word: may
    stem: mai
    docFrequency: 7.0
    docPositions:
    - 100
    - 102
    - 164
    - 199
    - 201
    - 263
  appear: !ruby/object:Word
    word: appear
    stem: appear
    docFrequency: 3.0
    docPositions:
    - 100
    - 199
  i: !ruby/object:Word
    word: i
    stem: i
    docFrequency: 21.0
    docPositions:
    - 101
    - 111
    - 123
    - 128
    - 129
    - 138
    - 155
    - 166
    - 168
    - 200
    - 210
    - 222
    - 227
    - 228
    - 237
    - 254
    - 265
    - 267
  e: !ruby/object:Word
    word: e
    stem: e
    docFrequency: 11.0
    docPositions:
    - 101
    - 106
    - 123
    - 128
    - 138
    - 200
    - 205
    - 222
    - 227
    - 237
  ns: !ruby/object:Word
    word: ns
    stem: ns
    docFrequency: 3.0
    docPositions:
    - 101
    - 200
  not: !ruby/object:Word
    word: not
    stem: not
    docFrequency: 27.0
    docPositions:
    - 101
    - 112
    - 117
    - 124
    - 132
    - 135
    - 136
    - 139
    - 140
    - 143
    - 144
    - 149
    - 152
    - 200
    - 211
    - 216
    - 223
    - 231
    - 234
    - 235
    - 238
    - 239
    - 242
    - 243
    - 248
    - 251
  overed: !ruby/object:Word
    word: overed
    stem: over
    docFrequency: 3.0
    docPositions:
    - 101
    - 200
  actually: !ruby/object:Word
    word: actually
    stem: actual
    docFrequency: 3.0
    docPositions:
    - 102
    - 201
  turn: !ruby/object:Word
    word: turn
    stem: turn
    docFrequency: 3.0
    docPositions:
    - 102
    - 201
  out: !ruby/object:Word
    word: out
    stem: out
    docFrequency: 3.0
    docPositions:
    - 102
    - 201
  since: !ruby/object:Word
    word: since
    stem: sinc
    docFrequency: 5.0
    docPositions:
    - 103
    - 108
    - 202
    - 207
  d: !ruby/object:Word
    word: d
    stem: d
    docFrequency: 3.0
    docPositions:
    - 104
    - 203
  there: !ruby/object:Word
    word: there
    stem: there
    docFrequency: 7.0
    docPositions:
    - 104
    - 120
    - 176
    - 203
    - 219
    - 275
  need: !ruby/object:Word
    word: need
    stem: need
    docFrequency: 9.0
    docPositions:
    - 104
    - 111
    - 124
    - 136
    - 203
    - 210
    - 223
    - 235
  test: !ruby/object:Word
    word: test
    stem: test
    docFrequency: 3.0
    docPositions:
    - 104
    - 203
  primality: !ruby/object:Word
    word: primality
    stem: primal
    docFrequency: 11.0
    docPositions:
    - 105
    - 125
    - 136
    - 147
    - 150
    - 204
    - 224
    - 235
    - 246
    - 249
  they: !ruby/object:Word
    word: they
    stem: thei
    docFrequency: 5.0
    docPositions:
    - 105
    - 124
    - 204
    - 223
  automatically: !ruby/object:Word
    word: automatically
    stem: automat
    docFrequency: 3.0
    docPositions:
    - 106
    - 205
  conjecture: !ruby/object:Word
    word: conjecture
    stem: conjectur
    docFrequency: 3.0
    docPositions:
    - 106
    - 205
  beta: !ruby/object:Word
    word: beta
    stem: beta
    docFrequency: 9.0
    docPositions:
    - 107
    - 118
    - 146
    - 206
    - 217
    - 245
  even: !ruby/object:Word
    word: even
    stem: even
    docFrequency: 3.0
    docPositions:
    - 107
    - 206
  if: !ruby/object:Word
    word: if
    stem: if
    docFrequency: 15.0
    docPositions:
    - 107
    - 113
    - 148
    - 151
    - 152
    - 206
    - 212
    - 247
    - 250
    - 251
    - 306
    - 349
    - 358
    - 371
  makes: !ruby/object:Word
    word: makes
    stem: make
    docFrequency: 3.0
    docPositions:
    - 107
    - 206
  difference: !ruby/object:Word
    word: difference
    stem: differ
    docFrequency: 3.0
    docPositions:
    - 108
    - 207
  perpetuality: !ruby/object:Word
    word: perpetuality
    stem: perpetu
    docFrequency: 3.0
    docPositions:
    - 108
    - 207
  iteration: !ruby/object:Word
    word: iteration
    stem: iter
    docFrequency: 23.0
    docPositions:
    - 108
    - 110
    - 111
    - 112
    - 118
    - 126
    - 137
    - 138
    - 146
    - 207
    - 209
    - 210
    - 211
    - 217
    - 225
    - 236
    - 237
    - 245
  established: !ruby/object:Word
    word: established
    stem: establish
    docFrequency: 3.0
    docPositions:
    - 109
    - 208
  only: !ruby/object:Word
    word: only
    stem: onli
    docFrequency: 9.0
    docPositions:
    - 109
    - 111
    - 113
    - 150
    - 208
    - 210
    - 212
    - 249
  competent: !ruby/object:Word
    word: competent
    stem: compet
    docFrequency: 3.0
    docPositions:
    - 109
    - 208
  programmer: !ruby/object:Word
    word: programmer
    stem: programm
    docFrequency: 5.0
    docPositions:
    - 109
    - 121
    - 208
    - 220
  program: !ruby/object:Word
    word: program
    stem: program
    docFrequency: 3.0
    docPositions:
    - 109
    - 208
  g: !ruby/object:Word
    word: g
    stem: g
    docFrequency: 3.0
    docPositions:
    - 110
    - 209
  go: !ruby/object:Word
    word: go
    stem: go
    docFrequency: 3.0
    docPositions:
    - 110
    - 209
  covered: !ruby/object:Word
    word: covered
    stem: cover
    docFrequency: 19.0
    docPositions:
    - 112
    - 114
    - 117
    - 132
    - 135
    - 139
    - 141
    - 143
    - 145
    - 211
    - 213
    - 216
    - 231
    - 234
    - 238
    - 240
    - 242
    - 244
  falure: !ruby/object:Word
    word: falure
    stem: falur
    docFrequency: 3.0
    docPositions:
    - 112
    - 211
  h: !ruby/object:Word
    word: h
    stem: h
    docFrequency: 3.0
    docPositions:
    - 112
    - 211
  come: !ruby/object:Word
    word: come
    stem: come
    docFrequency: 3.0
    docPositions:
    - 113
    - 212
  end: !ruby/object:Word
    word: end
    stem: end
    docFrequency: 4.0
    docPositions:
    - 113
    - 212
    - 321
  all: !ruby/object:Word
    word: all
    stem: all
    docFrequency: 7.0
    docPositions:
    - 113
    - 161
    - 173
    - 212
    - 260
    - 272
  values: !ruby/object:Word
    word: values
    stem: valu
    docFrequency: 23.0
    docPositions:
    - 113
    - 116
    - 122
    - 134
    - 139
    - 143
    - 144
    - 159
    - 161
    - 170
    - 173
    - 212
    - 215
    - 221
    - 233
    - 238
    - 242
    - 243
    - 258
    - 260
    - 269
    - 272
  highly: !ruby/object:Word
    word: highly
    stem: highli
    docFrequency: 3.0
    docPositions:
    - 115
    - 214
  improbable: !ruby/object:Word
    word: improbable
    stem: improb
    docFrequency: 3.0
    docPositions:
    - 115
    - 214
  continued: !ruby/object:Word
    word: continued
    stem: continu
    docFrequency: 13.0
    docPositions:
    - 116
    - 122
    - 147
    - 153
    - 168
    - 175
    - 215
    - 221
    - 246
    - 252
    - 267
    - 274
  decreases: !ruby/object:Word
    word: decreases
    stem: decreas
    docFrequency: 5.0
    docPositions:
    - 117
    - 145
    - 216
    - 244
  asymptotically: !ruby/object:Word
    word: asymptotically
    stem: asymptot
    docFrequency: 5.0
    docPositions:
    - 117
    - 146
    - 216
    - 245
  perpetual: !ruby/object:Word
    word: perpetual
    stem: perpetu
    docFrequency: 3.0
    docPositions:
    - 118
    - 217
  because: !ruby/object:Word
    word: because
    stem: becaus
    docFrequency: 5.0
    docPositions:
    - 118
    - 130
    - 217
    - 229
  never: !ruby/object:Word
    word: never
    stem: never
    docFrequency: 3.0
    docPositions:
    - 119
    - 218
  reaches: !ruby/object:Word
    word: reaches
    stem: reach
    docFrequency: 3.0
    docPositions:
    - 119
    - 218
  zero: !ruby/object:Word
    word: zero
    stem: zero
    docFrequency: 3.0
    docPositions:
    - 119
    - 218
  hence: !ruby/object:Word
    word: hence
    stem: henc
    docFrequency: 3.0
    docPositions:
    - 119
    - 218
  infinitely: !ruby/object:Word
    word: infinitely
    stem: infinit
    docFrequency: 5.0
    docPositions:
    - 120
    - 176
    - 219
    - 275
  many: !ruby/object:Word
    word: many
    stem: mani
    docFrequency: 7.0
    docPositions:
    - 120
    - 176
    - 219
    - 275
    - 316
    - 369
  shape: !ruby/object:Word
    word: shape
    stem: shape
    docFrequency: 7.0
    docPositions:
    - 120
    - 127
    - 176
    - 219
    - 226
    - 275
  subject: !ruby/object:Word
    word: subject
    stem: subject
    docFrequency: 3.0
    docPositions:
    - 121
    - 220
  confirmation: !ruby/object:Word
    word: confirmation
    stem: confirm
    docFrequency: 3.0
    docPositions:
    - 121
    - 220
  proceeding: !ruby/object:Word
    word: proceeding
    stem: proceed
    docFrequency: 3.0
    docPositions:
    - 122
    - 221
  let: !ruby/object:Word
    word: let
    stem: let
    docFrequency: 17.0
    docPositions:
    - 122
    - 126
    - 127
    - 134
    - 136
    - 140
    - 169
    - 221
    - 225
    - 226
    - 233
    - 235
    - 239
    - 268
  me: !ruby/object:Word
    word: me
    stem: me
    docFrequency: 9.0
    docPositions:
    - 122
    - 154
    - 168
    - 177
    - 221
    - 253
    - 267
    - 276
  emphasise: !ruby/object:Word
    word: emphasise
    stem: emphasis
    docFrequency: 3.0
    docPositions:
    - 122
    - 221
  kf: !ruby/object:Word
    word: kf
    stem: kf
    docFrequency: 11.0
    docPositions:
    - 123
    - 130
    - 148
    - 151
    - 170
    - 222
    - 229
    - 247
    - 250
    - 269
  tested: !ruby/object:Word
    word: tested
    stem: test
    docFrequency: 5.0
    docPositions:
    - 124
    - 136
    - 223
    - 235
  now: !ruby/object:Word
    word: now
    stem: now
    docFrequency: 9.0
    docPositions:
    - 126
    - 161
    - 166
    - 225
    - 260
    - 265
    - 316
    - 369
  set: !ruby/object:Word
    word: set
    stem: set
    docFrequency: 5.0
    docPositions:
    - 126
    - 225
    - 317
    - 370
  follows: !ruby/object:Word
    word: follows
    stem: follow
    docFrequency: 3.0
    docPositions:
    - 126
    - 225
  largest: !ruby/object:Word
    word: largest
    stem: largest
    docFrequency: 7.0
    docPositions:
    - 127
    - 134
    - 140
    - 226
    - 233
    - 239
  known: !ruby/object:Word
    word: known
    stem: known
    docFrequency: 3.0
    docPositions:
    - 127
    - 226
  having: !ruby/object:Word
    word: having
    stem: have
    docFrequency: 3.0
    docPositions:
    - 127
    - 226
  corresponding: !ruby/object:Word
    word: corresponding
    stem: correspond
    docFrequency: 3.0
    docPositions:
    - 128
    - 227
  consider: !ruby/object:Word
    word: consider
    stem: consid
    docFrequency: 7.0
    docPositions:
    - 129
    - 137
    - 142
    - 228
    - 236
    - 241
  am: !ruby/object:Word
    word: am
    stem: am
    docFrequency: 3.0
    docPositions:
    - 129
    - 228
  considering: !ruby/object:Word
    word: considering
    stem: consid
    docFrequency: 3.0
    docPositions:
    - 129
    - 228
  congruent: !ruby/object:Word
    word: congruent
    stem: congruent
    docFrequency: 3.0
    docPositions:
    - 130
    - 229
  mod: !ruby/object:Word
    word: mod
    stem: mod
    docFrequency: 3.0
    docPositions:
    - 131
    - 230
  note: !ruby/object:Word
    word: note
    stem: note
    docFrequency: 7.0
    docPositions:
    - 132
    - 149
    - 172
    - 231
    - 248
    - 271
  arithmetic: !ruby/object:Word
    word: arithmetic
    stem: arithmet
    docFrequency: 5.0
    docPositions:
    - 133
    - 157
    - 232
    - 256
  progressions: !ruby/object:Word
    word: progressions
    stem: progress
    docFrequency: 5.0
    docPositions:
    - 133
    - 158
    - 232
    - 257
  these: !ruby/object:Word
    word: these
    stem: these
    docFrequency: 5.0
    docPositions:
    - 134
    - 161
    - 233
    - 260
  proceed: !ruby/object:Word
    word: proceed
    stem: proce
    docFrequency: 3.0
    docPositions:
    - 138
    - 237
  mark: !ruby/object:Word
    word: mark
    stem: mark
    docFrequency: 5.0
    docPositions:
    - 138
    - 142
    - 237
    - 241
  call: !ruby/object:Word
    word: call
    stem: call
    docFrequency: 5.0
    docPositions:
    - 141
    - 146
    - 240
    - 245
  rational: !ruby/object:Word
    word: rational
    stem: ration
    docFrequency: 3.0
    docPositions:
    - 146
    - 245
  have: !ruby/object:Word
    word: have
    stem: have
    docFrequency: 5.0
    docPositions:
    - 147
    - 162
    - 246
    - 261
  case: !ruby/object:Word
    word: case
    stem: case
    docFrequency: 3.0
    docPositions:
    - 147
    - 246
  indirect: !ruby/object:Word
    word: indirect
    stem: indirect
    docFrequency: 3.0
    docPositions:
    - 147
    - 246
  testing: !ruby/object:Word
    word: testing
    stem: test
    docFrequency: 8.0
    docPositions:
    - 147
    - 149
    - 150
    - 246
    - 248
    - 249
    - 429
  otherwise: !ruby/object:Word
    word: otherwise
    stem: otherwis
    docFrequency: 3.0
    docPositions:
    - 148
    - 247
  directly: !ruby/object:Word
    word: directly
    stem: directli
    docFrequency: 3.0
    docPositions:
    - 150
    - 249
  whether: !ruby/object:Word
    word: whether
    stem: whether
    docFrequency: 3.0
    docPositions:
    - 151
    - 250
  generated: !ruby/object:Word
    word: generated
    stem: gener
    docFrequency: 3.0
    docPositions:
    - 151
    - 250
  so: !ruby/object:Word
    word: so
    stem: so
    docFrequency: 8.0
    docPositions:
    - 151
    - 162
    - 177
    - 250
    - 261
    - 276
    - 333
  very: !ruby/object:Word
    word: very
    stem: veri
    docFrequency: 5.0
    docPositions:
    - 154
    - 164
    - 253
    - 263
  clear: !ruby/object:Word
    word: clear
    stem: clear
    docFrequency: 5.0
    docPositions:
    - 154
    - 177
    - 253
    - 276
  counter: !ruby/object:Word
    word: counter
    stem: counter
    docFrequency: 7.0
    docPositions:
    - 154
    - 164
    - 167
    - 253
    - 263
    - 266
  example: !ruby/object:Word
    word: example
    stem: exampl
    docFrequency: 7.0
    docPositions:
    - 154
    - 164
    - 167
    - 253
    - 263
    - 266
  you: !ruby/object:Word
    word: you
    stem: you
    docFrequency: 13.0
    docPositions:
    - 154
    - 162
    - 166
    - 175
    - 177
    - 253
    - 261
    - 265
    - 274
    - 276
  should: !ruby/object:Word
    word: should
    stem: should
    docFrequency: 3.0
    docPositions:
    - 155
    - 254
  try: !ruby/object:Word
    word: try
    stem: try
    docFrequency: 3.0
    docPositions:
    - 155
    - 254
  find: !ruby/object:Word
    word: find
    stem: find
    docFrequency: 12.0
    docPositions:
    - 155
    - 162
    - 165
    - 167
    - 254
    - 261
    - 264
    - 266
    - 305
    - 348
    - 359
  do: !ruby/object:Word
    word: do
    stem: do
    docFrequency: 3.0
    docPositions:
    - 155
    - 254
  taking: !ruby/object:Word
    word: taking
    stem: take
    docFrequency: 3.0
    docPositions:
    - 155
    - 254
  specific: !ruby/object:Word
    word: specific
    stem: specif
    docFrequency: 5.0
    docPositions:
    - 156
    - 170
    - 255
    - 269
  spaned: !ruby/object:Word
    word: spaned
    stem: spane
    docFrequency: 3.0
    docPositions:
    - 157
    - 256
  however: !ruby/object:Word
    word: however
    stem: howev
    docFrequency: 3.0
    docPositions:
    - 159
    - 258
  above: !ruby/object:Word
    word: above
    stem: abov
    docFrequency: 3.0
    docPositions:
    - 160
    - 259
  difficult: !ruby/object:Word
    word: difficult
    stem: difficult
    docFrequency: 3.0
    docPositions:
    - 165
    - 264
  mention: !ruby/object:Word
    word: mention
    stem: mention
    docFrequency: 3.0
    docPositions:
    - 165
    - 264
  k: !ruby/object:Word
    word: k
    stem: k
    docFrequency: 5.0
    docPositions:
    - 165
    - 172
    - 264
    - 271
  belongs: !ruby/object:Word
    word: belongs
    stem: belong
    docFrequency: 5.0
    docPositions:
    - 165
    - 169
    - 264
    - 268
  z: !ruby/object:Word
    word: z
    stem: z
    docFrequency: 3.0
    docPositions:
    - 165
    - 264
  take: !ruby/object:Word
    word: take
    stem: take
    docFrequency: 3.0
    docPositions:
    - 166
    - 265
  break: !ruby/object:Word
    word: break
    stem: break
    docFrequency: 3.0
    docPositions:
    - 166
    - 265
  enable: !ruby/object:Word
    word: enable
    stem: enabl
    docFrequency: 3.0
    docPositions:
    - 166
    - 265
  summarise: !ruby/object:Word
    word: summarise
    stem: summaris
    docFrequency: 3.0
    docPositions:
    - 168
    - 267
  had: !ruby/object:Word
    word: had
    stem: had
    docFrequency: 3.0
    docPositions:
    - 168
    - 267
  already: !ruby/object:Word
    word: already
    stem: alreadi
    docFrequency: 3.0
    docPositions:
    - 168
    - 267
  then: !ruby/object:Word
    word: then
    stem: then
    docFrequency: 5.0
    docPositions:
    - 170
    - 177
    - 269
    - 276
  generates: !ruby/object:Word
    word: generates
    stem: gener
    docFrequency: 3.0
    docPositions:
    - 170
    - 269
  ignore: !ruby/object:Word
    word: ignore
    stem: ignor
    docFrequency: 4.0
    docPositions:
    - 172
    - 271
    - 429
  trivial: !ruby/object:Word
    word: trivial
    stem: trivial
    docFrequency: 3.0
    docPositions:
    - 172
    - 271
  cases: !ruby/object:Word
    word: cases
    stem: case
    docFrequency: 3.0
    docPositions:
    - 172
    - 271
  easily: !ruby/object:Word
    word: easily
    stem: easili
    docFrequency: 3.0
    docPositions:
    - 173
    - 272
  proposition: !ruby/object:Word
    word: proposition
    stem: proposit
    docFrequency: 11.0
    docPositions:
    - 175
    - 176
    - 177
    - 274
    - 275
    - 276
  first: !ruby/object:Word
    word: first
    stem: first
    docFrequency: 3.0
    docPositions:
    - 177
    - 276
  continue: !ruby/object:Word
    word: continue
    stem: continu
    docFrequency: 3.0
    docPositions:
    - 177
    - 276
  kind: !ruby/object:Word
    word: kind
    stem: kind
    docFrequency: 3.0
    docPositions:
    - 177
    - 276
  attention: !ruby/object:Word
    word: attention
    stem: attent
    docFrequency: 3.0
    docPositions:
    - 177
    - 276
  others: !ruby/object:Word
    word: others
    stem: other
    docFrequency: 3.0
    docPositions:
    - 177
    - 276
  interested: !ruby/object:Word
    word: interested
    stem: interest
    docFrequency: 3.0
    docPositions:
    - 177
    - 276
  oct: !ruby/object:Word
    word: oct
    stem: oct
    docFrequency: 5.0
    docPositions:
    - 177
    - 276
  doubt: !ruby/object:Word
    word: doubt
    stem: doubt
    docFrequency: 3.0
    docPositions:
    - 177
    - 276
  far: !ruby/object:Word
    word: far
    stem: far
    docFrequency: 3.0
    docPositions:
    - 177
    - 276
  pl: !ruby/object:Word
    word: pl
    stem: pl
    docFrequency: 3.0
    docPositions:
    - 177
    - 276
  want: !ruby/object:Word
    word: want
    stem: want
    docFrequency: 3.0
    docPositions:
    - 177
    - 276
  prove: !ruby/object:Word
    word: prove
    stem: prove
    docFrequency: 3.0
    docPositions:
    - 177
    - 276
  give: !ruby/object:Word
    word: give
    stem: give
    docFrequency: 3.0
    docPositions:
    - 177
    - 276
  concise: !ruby/object:Word
    word: concise
    stem: concis
    docFrequency: 3.0
    docPositions:
    - 177
    - 276
  form: !ruby/object:Word
    word: form
    stem: form
    docFrequency: 4.0
    docPositions:
    - 177
    - 276
    - 394
  regards: !ruby/object:Word
    word: regards
    stem: regard
    docFrequency: 3.0
    docPositions:
    - 179
    - 278
  jussimore: !ruby/object:Word
    word: jussimore
    stem: jussimor
    docFrequency: 3.0
    docPositions:
    - 181
    - 280
  front: !ruby/object:Word
    word: front
    stem: front
    docFrequency: 8.0
    docPositions:
    - 290
    - 291
    - 292
    - 293
    - 294
    - 301
    - 342
  left: !ruby/object:Word
    word: left
    stem: left
    docFrequency: 6.0
    docPositions:
    - 290
    - 292
    - 294
    - 301
    - 342
  block: !ruby/object:Word
    word: block
    stem: block
    docFrequency: 16.0
    docPositions:
    - 290
    - 291
    - 292
    - 293
    - 294
    - 296
    - 300
    - 301
    - 316
    - 317
    - 321
    - 333
    - 342
    - 369
    - 370
  tabs: !ruby/object:Word
    word: tabs
    stem: tab
    docFrequency: 13.0
    docPositions:
    - 290
    - 291
    - 292
    - 293
    - 294
    - 301
    - 342
  right: !ruby/object:Word
    word: right
    stem: right
    docFrequency: 3.0
    docPositions:
    - 291
    - 293
  mid: !ruby/object:Word
    word: mid
    stem: mid
    docFrequency: 4.0
    docPositions:
    - 292
    - 293
    - 342
  bot: !ruby/object:Word
    word: bot
    stem: bot
    docFrequency: 2.0
    docPositions:
    - 294
  resize: !ruby/object:Word
    word: resize
    stem: resiz
    docFrequency: 4.0
    docPositions:
    - 296
    - 333
    - 336
  top: !ruby/object:Word
    word: top
    stem: top
    docFrequency: 4.0
    docPositions:
    - 296
    - 321
    - 451
  max_lines: !ruby/object:Word
    word: max_lines
    stem: max_lin
    docFrequency: 11.0
    docPositions:
    - 297
    - 309
    - 319
    - 339
    - 352
    - 362
    - 377
  min_line_height: !ruby/object:Word
    word: min_line_height
    stem: min_line_height
    docFrequency: 9.0
    docPositions:
    - 298
    - 314
    - 319
    - 340
    - 367
    - 377
  console: !ruby/object:Word
    word: console
    stem: consol
    docFrequency: 4.0
    docPositions:
    - 299
    - 336
    - 380
  log: !ruby/object:Word
    word: log
    stem: log
    docFrequency: 4.0
    docPositions:
    - 299
    - 336
    - 380
  look: !ruby/object:Word
    word: look
    stem: look
    docFrequency: 6.0
    docPositions:
    - 299
    - 300
    - 302
    - 347
    - 357
  inside: !ruby/object:Word
    word: inside
    stem: insid
    docFrequency: 6.0
    docPositions:
    - 299
    - 300
    - 302
    - 347
    - 357
  span: !ruby/object:Word
    word: span
    stem: span
    docFrequency: 7.0
    docPositions:
    - 302
    - 305
    - 307
    - 347
    - 348
    - 350
  num_lines: !ruby/object:Word
    word: num_lines
    stem: num_lin
    docFrequency: 11.0
    docPositions:
    - 303
    - 308
    - 309
    - 313
    - 344
    - 351
    - 352
    - 361
    - 362
    - 366
  this_line_height: !ruby/object:Word
    word: this_line_height
    stem: this_line_height
    docFrequency: 9.0
    docPositions:
    - 304
    - 313
    - 314
    - 318
    - 345
    - 366
    - 367
    - 378
  css: !ruby/object:Word
    word: css
    stem: css
    docFrequency: 8.0
    docPositions:
    - 306
    - 318
    - 319
    - 349
    - 356
    - 378
    - 379
  display: !ruby/object:Word
    word: display
    stem: displai
    docFrequency: 4.0
    docPositions:
    - 306
    - 349
    - 356
  none: !ruby/object:Word
    word: none
    stem: none
    docFrequency: 4.0
    docPositions:
    - 306
    - 349
    - 356
  count: !ruby/object:Word
    word: count
    stem: count
    docFrequency: 4.0
    docPositions:
    - 307
    - 350
    - 360
  lines: !ruby/object:Word
    word: lines
    stem: line
    docFrequency: 6.0
    docPositions:
    - 307
    - 316
    - 350
    - 360
    - 369
  ceil: !ruby/object:Word
    word: ceil
    stem: ceil
    docFrequency: 6.0
    docPositions:
    - 308
    - 319
    - 351
    - 361
    - 377
  text: !ruby/object:Word
    word: text
    stem: text
    docFrequency: 7.0
    docPositions:
    - 308
    - 328
    - 329
    - 351
    - 359
    - 361
  length: !ruby/object:Word
    word: length
    stem: length
    docFrequency: 4.0
    docPositions:
    - 308
    - 351
    - 361
  max: !ruby/object:Word
    word: max
    stem: max
    docFrequency: 4.0
    docPositions:
    - 309
    - 352
    - 362
  min: !ruby/object:Word
    word: min
    stem: min
    docFrequency: 3.0
    docPositions:
    - 314
    - 367
  know: !ruby/object:Word
    word: know
    stem: know
    docFrequency: 3.0
    docPositions:
    - 316
    - 369
  line: !ruby/object:Word
    word: line
    stem: line
    docFrequency: 6.0
    docPositions:
    - 317
    - 318
    - 325
    - 370
    - 378
  height: !ruby/object:Word
    word: height
    stem: height
    docFrequency: 7.0
    docPositions:
    - 317
    - 318
    - 319
    - 370
    - 378
    - 379
  accordingly: !ruby/object:Word
    word: accordingly
    stem: accordingli
    docFrequency: 3.0
    docPositions:
    - 317
    - 370
  px: !ruby/object:Word
    word: px
    stem: px
    docFrequency: 5.0
    docPositions:
    - 318
    - 319
    - 378
    - 379
  resizing: !ruby/object:Word
    word: resizing
    stem: resiz
    docFrequency: 2.0
    docPositions:
    - 321
  define: !ruby/object:Word
    word: define
    stem: defin
    docFrequency: 3.0
    docPositions:
    - 323
    - 333
  toggle: !ruby/object:Word
    word: toggle
    stem: toggl
    docFrequency: 6.0
    docPositions:
    - 323
    - 328
    - 329
    - 359
  action: !ruby/object:Word
    word: action
    stem: action
    docFrequency: 2.0
    docPositions:
    - 323
  green: !ruby/object:Word
    word: green
    stem: green
    docFrequency: 2.0
    docPositions:
    - 323
  plus: !ruby/object:Word
    word: plus
    stem: plu
    docFrequency: 2.0
    docPositions:
    - 323
  works: !ruby/object:Word
    word: works
    stem: work
    docFrequency: 2.0
    docPositions:
    - 325
  but: !ruby/object:Word
    word: but
    stem: but
    docFrequency: 2.0
    docPositions:
    - 325
  inter: !ruby/object:Word
    word: inter
    stem: inter
    docFrequency: 2.0
    docPositions:
    - 325
  spacing: !ruby/object:Word
    word: spacing
    stem: space
    docFrequency: 2.0
    docPositions:
    - 325
  seems: !ruby/object:Word
    word: seems
    stem: seem
    docFrequency: 2.0
    docPositions:
    - 325
  little: !ruby/object:Word
    word: little
    stem: littl
    docFrequency: 2.0
    docPositions:
    - 325
  'off': !ruby/object:Word
    word: 'off'
    stem: 'off'
    docFrequency: 2.0
    docPositions:
    - 325
  texthidden: !ruby/object:Word
    word: texthidden
    stem: texthidden
    docFrequency: 6.0
    docPositions:
    - 326
    - 337
    - 358
    - 371
  'true': !ruby/object:Word
    word: 'true'
    stem: 'true'
    docFrequency: 2.0
    docPositions:
    - 326
  hidden: !ruby/object:Word
    word: hidden
    stem: hidden
    docFrequency: 4.0
    docPositions:
    - 328
    - 329
    - 359
  controller: !ruby/object:Word
    word: controller
    stem: control
    docFrequency: 2.0
    docPositions:
    - 328
  click: !ruby/object:Word
    word: click
    stem: click
    docFrequency: 2.0
    docPositions:
    - 328
  slow: !ruby/object:Word
    word: slow
    stem: slow
    docFrequency: 2.0
    docPositions:
    - 329
  resizefunc: !ruby/object:Word
    word: resizefunc
    stem: resizefunc
    docFrequency: 4.0
    docPositions:
    - 330
    - 334
    - 384
  must: !ruby/object:Word
    word: must
    stem: must
    docFrequency: 2.0
    docPositions:
    - 333
  lower: !ruby/object:Word
    word: lower
    stem: lower
    docFrequency: 2.0
    docPositions:
    - 333
  repeatedly: !ruby/object:Word
    word: repeatedly
    stem: repeatedli
    docFrequency: 2.0
    docPositions:
    - 333
  envoked: !ruby/object:Word
    word: envoked
    stem: envok
    docFrequency: 2.0
    docPositions:
    - 336
  div: !ruby/object:Word
    word: div
    stem: div
    docFrequency: 3.0
    docPositions:
    - 357
    - 360
  multiplier: !ruby/object:Word
    word: multiplier
    stem: multipli
    docFrequency: 4.0
    docPositions:
    - 372
    - 374
    - 378
  else: !ruby/object:Word
    word: else
    stem: els
    docFrequency: 2.0
    docPositions:
    - 373
  finalheight: !ruby/object:Word
    word: finalheight
    stem: finalheight
    docFrequency: 4.0
    docPositions:
    - 377
    - 379
    - 380
  search: !ruby/object:Word
    word: search
    stem: search
    docFrequency: 3.0
    docPositions:
    - 394
    - 396
  home: !ruby/object:Word
    word: home
    stem: home
    docFrequency: 2.0
    docPositions:
    - 405
  forumsplanetary: !ruby/object:Word
    word: forumsplanetary
    stem: forumsplanetari
    docFrequency: 2.0
    docPositions:
    - 413
  hs: !ruby/object:Word
    word: hs
    stem: hs
    docFrequency: 2.0
    docPositions:
    - 414
  secondary: !ruby/object:Word
    word: secondary
    stem: secondari
    docFrequency: 2.0
    docPositions:
    - 414
  university: !ruby/object:Word
    word: university
    stem: univers
    docFrequency: 2.0
    docPositions:
    - 415
  tertiary: !ruby/object:Word
    word: tertiary
    stem: tertiari
    docFrequency: 2.0
    docPositions:
    - 415
  graduate: !ruby/object:Word
    word: graduate
    stem: graduat
    docFrequency: 2.0
    docPositions:
    - 416
  advanced: !ruby/object:Word
    word: advanced
    stem: advanc
    docFrequency: 2.0
    docPositions:
    - 416
  industry: !ruby/object:Word
    word: industry
    stem: industri
    docFrequency: 2.0
    docPositions:
    - 417
  practice: !ruby/object:Word
    word: practice
    stem: practic
    docFrequency: 2.0
    docPositions:
    - 417
  research: !ruby/object:Word
    word: research
    stem: research
    docFrequency: 2.0
    docPositions:
    - 418
  topics: !ruby/object:Word
    word: topics
    stem: topic
    docFrequency: 2.0
    docPositions:
    - 418
  comptetitions: !ruby/object:Word
    word: comptetitions
    stem: comptetit
    docFrequency: 2.0
    docPositions:
    - 420
  history: !ruby/object:Word
    word: history
    stem: histori
    docFrequency: 2.0
    docPositions:
    - 421
  humor: !ruby/object:Word
    word: humor
    stem: humor
    docFrequency: 2.0
    docPositions:
    - 422
  comments: !ruby/object:Word
    word: comments
    stem: comment
    docFrequency: 2.0
    docPositions:
    - 423
  system: !ruby/object:Word
    word: system
    stem: system
    docFrequency: 2.0
    docPositions:
    - 424
  updates: !ruby/object:Word
    word: updates
    stem: updat
    docFrequency: 2.0
    docPositions:
    - 424
  news: !ruby/object:Word
    word: news
    stem: new
    docFrequency: 3.0
    docPositions:
    - 424
    - 443
  strategic: !ruby/object:Word
    word: strategic
    stem: strateg
    docFrequency: 2.0
    docPositions:
    - 427
  communications: !ruby/object:Word
    word: communications
    stem: commun
    docFrequency: 2.0
    docPositions:
    - 427
  development: !ruby/object:Word
    word: development
    stem: develop
    docFrequency: 2.0
    docPositions:
    - 427
  pub: !ruby/object:Word
    word: pub
    stem: pub
    docFrequency: 2.0
    docPositions:
    - 428
  useful: !ruby/object:Word
    word: useful
    stem: us
    docFrequency: 2.0
    docPositions:
    - 431
  stuffgallery: !ruby/object:Word
    word: stuffgallery
    stem: stuffgalleri
    docFrequency: 2.0
    docPositions:
    - 431
  site: !ruby/object:Word
    word: site
    stem: site
    docFrequency: 2.0
    docPositions:
    - 432
  docs: !ruby/object:Word
    word: docs
    stem: doc
    docFrequency: 2.0
    docPositions:
    - 432
  corrections: !ruby/object:Word
    word: corrections
    stem: correct
    docFrequency: 2.0
    docPositions:
    - 434
  discussion: !ruby/object:Word
    word: discussion
    stem: discuss
    docFrequency: 6.0
    docPositions:
    - 446
  january: !ruby/object:Word
    word: january
    stem: januari
    docFrequency: 3.0
    docPositions:
    - 446
  quarter: !ruby/object:Word
    word: quarter
    stem: quarter
    docFrequency: 2.0
    docPositions:
    - 446
  board: !ruby/object:Word
    word: board
    stem: board
    docFrequency: 2.0
    docPositions:
    - 446
  meeting: !ruby/object:Word
    word: meeting
    stem: meet
    docFrequency: 2.0
    docPositions:
    - 446
  november: !ruby/object:Word
    word: november
    stem: novemb
    docFrequency: 4.0
    docPositions:
    - 446
  october: !ruby/object:Word
    word: october
    stem: octob
    docFrequency: 2.0
    docPositions:
    - 446
  improved: !ruby/object:Word
    word: improved
    stem: improv
    docFrequency: 2.0
    docPositions:
    - 446
  editor: !ruby/object:Word
    word: editor
    stem: editor
    docFrequency: 2.0
    docPositions:
    - 446
  faster: !ruby/object:Word
    word: faster
    stem: faster
    docFrequency: 2.0
    docPositions:
    - 446
  page: !ruby/object:Word
    word: page
    stem: page
    docFrequency: 2.0
    docPositions:
    - 446
  loads: !ruby/object:Word
    word: loads
    stem: load
    docFrequency: 2.0
    docPositions:
    - 446
  unlordmore: !ruby/object:Word
    word: unlordmore
    stem: unlordmor
    docFrequency: 2.0
    docPositions:
    - 446
  users: !ruby/object:Word
    word: users
    stem: user
    docFrequency: 2.0
    docPositions:
    - 451
  revisions: !ruby/object:Word
    word: revisions
    stem: revis
    docFrequency: 2.0
    docPositions:
    - 459
  newtonian: !ruby/object:Word
    word: newtonian
    stem: newtonian
    docFrequency: 2.0
    docPositions:
    - 462
  calculus: !ruby/object:Word
    word: calculus
    stem: calculu
    docFrequency: 2.0
    docPositions:
    - 462
  algebraic: !ruby/object:Word
    word: algebraic
    stem: algebra
    docFrequency: 2.0
    docPositions:
    - 462
  pahioexample: !ruby/object:Word
    word: pahioexample
    stem: pahioexampl
    docFrequency: 2.0
    docPositions:
    - 462
  solving: !ruby/object:Word
    word: solving
    stem: solv
    docFrequency: 2.0
    docPositions:
    - 462
  cubic: !ruby/object:Word
    word: cubic
    stem: cubic
    docFrequency: 2.0
    docPositions:
    - 462
  equation: !ruby/object:Word
    word: equation
    stem: equat
    docFrequency: 2.0
    docPositions:
    - 462
  kohan: !ruby/object:Word
    word: kohan
    stem: kohan
    docFrequency: 2.0
    docPositions:
    - 462
  seasonal: !ruby/object:Word
    word: seasonal
    stem: season
    docFrequency: 2.0
    docPositions:
    - 462
  almanac: !ruby/object:Word
    word: almanac
    stem: almanac
    docFrequency: 2.0
    docPositions:
    - 462
  pahiomore: !ruby/object:Word
    word: pahiomore
    stem: pahiomor
    docFrequency: 2.0
    docPositions:
    - 462
  powered: !ruby/object:Word
    word: powered
    stem: power
    docFrequency: 2.0
    docPositions:
    - 476
lineCount: 486
wordCount: 3124
rank: 0.2607142857142857
title: planetmath.org | Math for the people, by the people.
links:
- https://github.com/KWARC/planetary
- http://creativecommons.org/licenses/by-sa/2.0/
- http://en.wikibooks.org/wiki/LaTeX
- https://github.com/KWARC/planetary/issues
- https://github.com/KWARC/planetary
- http://drupal.org
- http://dlmf.nist.gov/LaTeXML/
rawText: "\n  \n    Jump to Navigation\n  \n    \n\n  \tvar $jq = jQuery.noConflict();
  \ \n\n$jq(document).ready(function () {\n\t\n\t$jq('.topmenu ul li').hover(\n\t\tfunction
  () {\n\t\t\t//show its submenu\n\t\t\t$jq('ul', this).fadeIn(250);\n\n\t\t}, \n\t\tfunction
  () {\n\t\t\t//hide its submenu\n\t\t\t$jq('ul', this).delay(200).fadeOut(250);\n\t\t}\n\t);\n\n});\n\n\n\n\n
  \ \n\n          \n    \n          \n                              \n              planetmath.org\n
  \           \n                  \n                  Math for the people, by the
  people.\n              \n        \n      User menuFAQ\n\n    \n\n       Welcome!\n
  \   \n  \n    PlanetMath is a virtual community which aims to help make mathematical
  knowledge more accessible. PlanetMath's content is created collaboratively: the
  main feature is the mathematics encyclopedia with entries written and reviewed by
  members. The entries are contributed under the terms of the Creative Commons By/Share-Alike
  License in order to preserve the rights of authors, readers and other content creators
  in a sensible way.  We use LaTeX, the\nlingua franca of the worldwide mathematical
  community.\n  Beginning February 23th 2015 we experienced 15 days of downtime when
  our server stopped working.  We moved a backup to DigitalOcean, and we're back online.
  \ Some features aren't working yet; we're restoring them ASAP.  Please report bugs
  in the Planetary Bugs Forum or on Github.  \n\n\n\n\n       User login\n    \n  \n
  \   \n  Username *\n \n\n  Password *\n \nSign up for an account\nForgot password\n
  \ \n\n\n  \n \n\n   \n \n\n  \n\n  \n          \n\n    \n          \n\n        \n
  \     \n        New Articles\n        \n          [Ref] field arising from special
  relativity  by pahioOct 31[Ref] Carmichael  numbers -  561 (contd)  by akdevarajJul
  13[Ref] Carmichal  number   561  by akdevarajJul 12[Ref] Carmichal  number   561
  \ by akdevarajJul 12[Ref] Carmichal  number   561  by akdevarajJul 12[Ref] Carmichal
  \ number   561  by akdevarajJul 12[Ref] Failure  functions  by akdevarajMay 27[Ref]
  induction proof of fundamental theorem of arithmet...  by pahioMar 29[Ref] Birkhoff
  Recurrence Theorem  by FilipeMar 20[Ref] Multiple Recurrence Theorem  by FilipeMar
  20[Ref] convergence in the mean  by pahioJan 30[Ref] definition of vector space
  needs no commutativity  by pahioJan 20[Ref] redundancy of two-sidedness in definition
  of group  by pahioJan 19[Ref] Nucleus  by porton14-12-18more              \n      \n\n
  \     \n        Latest Messages\n        \n           [P] No questions. by pahio Nov
  10No questions. [P] sketch  proof  -  in  commonly  understood terminology by akdevaraj Nov
  10I  would like to conclude  my  message  with one  point:\r\nThe fact  that  any
  \ value  of n  skiped is  such  that\r\nf(n)  is prime  can be  proved:  f(n)=n^2+n+1
  \ is  such that\r\nwhenever  f(n)  is  composite  one  of  its  factors\r\nis  smaller
  \ than  n.  This implies  that  it  that  the  relevant\r\nn  has to  satisfy  a
  \ prior  failure function.\r\nAny  question,  Jussi? [P] sketch  proof  -  in  commonly
  \ understood terminology by akdevaraj Nov 9Note  a)  p_0  less than  p_1  less  than
  \ p_2 less  than   p_i\r\nb)  This  means  the  intervals  become  succeedingly
  \ bigger\r\nc)As  the fraction  of  primes  in  each  interval  becomes\r\nsuceedingly
  \ smaller  it  may  appear  that  the  number  of  primes \r\ni.e.  the  number
  \ of  ns  not  overed  by  any  failure function\r\nbecomes smaller-  actually it
  may  turn out that  the  number\r\nof  primes  become  bigger since  the intervals
  become  bigger\r\nd)  there  is no  need  to  test  any  f(n)  where n  is  \r\nskiped
  \ by the failure  functions  for  primality -  they  are\r\nautomatically  prime
  \ e)  my  conjecture  is  that the value\r\nof beta is 0.03  -  even  if  beta  is
  \ 0.01  it  makes  no \r\ndifference  since  the perpetuality of  the iteration
  \ is \r\nestablished  f)  only  a  competent  programmer  can  program\r\nthe  failure
  functions  and the iteration  g)to  go  from\r\niteration  i  to  iteration i+1
  \ we  need only  one  value of\r\nn  not covered  by  any  falure  function  h)
  \ the  iteration\r\ncan  come to  an end  only  if all  the  values of  n\r\nin
  \ an  interval  are covered  by  one  or more  of  the failure\r\nfunctions  (  this
  is highly  improbable )\r\n                                      (to  be continued)
  [P] sketch  proof  -  in  commonly  understood terminology by akdevaraj Nov 9Since
  \ the  fraction of  values  of n  in  any  interval  which  are\r\nnot  covered
  \ by  any  failure function  decreases  asymptotically\r\nto  beta  the  iteration
  is  perpetual. This  is because  the\r\nfraction  of  primes  in  any interval never
  reaches  zero  -  hence\r\nthere  are  infinitely  many  primes  of  shape  n^2+n+1
  \ (proved-\r\nsubject  to  confirmation  by  a  programmer.)\r\n               (to
  be continued). [P] sketch  proof  -  in  commonly  understood terminology by akdevaraj Nov
  8Before  proceeding  let me  emphasise  that  the  values  of  \r\nn  skiped by
  \ the  failure functions  i.e. n_0+kf(n_0)  are\r\nsuch  that f(n)  are prime  and
  they need not be  tested for\r\nprimality.\r\nWe  now  set  up  an  iteration  as
  \ follows: Let  p_0  be\r\nthe largest  known  prime having  shape  n^2+n+1.  Let
  \ n_0\r\nbe  the corresponding  value  of  n i.e.  n_0^2+n_0+1  =\r\np_0. Consider
  \ the  interval  n_0,  n_0+p_0.  I   am  considering\r\nthis  interval because  f(n_0+kf(n_0))
  \ is  congruent  to 0\r\n(mod f(n_0)).\r\nNote  the  fraction  of  this  interval
  \ not  covered  by the\r\nfailure  functions(  arithmetic  progressions)  1+3k,
  2+7k, 3+13k\r\n4+7k............ .  Let  n_1  be  the largest  of  these  values\r\nof
  \ n  not  covered  by  any  failure  function. f(n_1)  is  prime\r\nwhich  need
  not be  tested  for  primality.  Let this  prime \r\nbe p_1.  2nd  iteration:  consider
  \ the  interval n_1, n_1 +p_1.\r\nproceed  as in  the  1st  iteration  i.e.  mark
  \ the  fraction of\r\nvalues  of n  in this interval not covered  by  any  failure
  function.\r\nLet  n_2  be  the largest  value  of  n  in this  interval not\r\ncovered
  \ by  any failure function.  f(n_2)  is  prime; call  this\r\np_2.  Consider  the
  \ interval  n_2,  n_2 + p_2.  Mark  the\r\nfraction  of values of  n in this  interval
  \ not  covered  by\r\nany  failure function.  The  fraction  of values  of n  not\r\ncovered
  \ by  any  failure  function  in  any  interval  decreases\r\nasymptotically  from
  iteration to iteration  to  a   rational  number-  call  this  beta\r\n                       (to
  \ be continued ). [P] sketch  proof  -  in  commonly  understood terminology by
  akdevaraj Nov 8This  means  we  have  a case of indirect  primality testing:\r\nf(n)
  \ is  composite  if  n = n_0 +kf(n_0).  Otherwise\r\nf(n)  is  prime.  Note  we
  \ are  not testing  f(n)\r\ndirectly  for primality; we are  only  testing\r\nwhether
  \ is n  is  generated by  n_0+kf(n_0); if  so\r\nf(n)  is composite-if not  f(n)
  \ is  prime.\r\n                                          (to  be  continued)\r\n
  [P] sketch  proof  -  in  commonly  understood terminology by akdevaraj Nov 6Let
  me be very  clear as to  what  counter  example  you\r\nshould try to  find;  I
  \ will  do  this  by  taking\r\na  specific  interval -  n = 5  to  36.This  interval\r\nis
  spaned by  the failure  functions(  arithmetic \r\nprogressions )  1+3k, 2+7k,  3
  +13k,  4 +7k  and\r\n5+31k, 7+19k  and  9+13k.  However  the  values of n\r\nskiped
  by  the  above  are  5,6, 8, 12, 14, 15, 17, 20, 21,\r\n24,27 and  33.  Now  all
  \ these  skiped  values  of  n  are  such\r\nthat  f(n)  is  prime.  So  you  have
  to  find  a value  of  \r\nn  skiped  by  the  relevant  failure  functions  such
  \ that\r\nf(n)  is  composite.  Such  a  counter example  may  be  very\r\ndifficult
  to  find. [P] sketch  proof  -  in  commonly  understood terminology by akdevaraj Nov
  6I  forgot  to  mention that  k  belongs  to  Z.\r\nNow  I  will  take a  break
  \ for two  days  to  enable you  to\r\nfind  a counter-example.\r\n                               (to
  \ be continued) [P] sketch  proof  -  in  commonly  understood terminology by akdevaraj Nov
  6Let  me  summarise up  to the  point  I  had  already  contributed:\r\nlet  f(n)
  \ =  n^2 + n  +  1 ( n belongs to  N). Let  n_0 be  a  \r\nspecific value  of  n.
  \  Then  n  =  n_0 + kf(n_0)  generates  values\r\nof n  such  that  f(n)  is  composite.\r\nNote:
  \ please  ignore  trivial  cases  like k = 0.\r\nThis is  easily  proved.  All  other
  \ values  of  n  are such\r\nthat  f(n)  is prime.\r\n                                             (to
  be  continued). [P] Sketch  proof -the  proposition by akdevaraj Nov 2Thank  you,
  Jussi.\r\nProposition:  There  are infinitely  many  prime  numbers  with  shape\r\nn^2+n+1.
  [P] sketch proof by pahio Nov 1Yes.  First the proposition! [P] sketch  proof  -
  \ in  commonly  understood terminology by akdevaraj Nov 1Dear  Jussi,  would you
  \ like  me to  continue? [P] Kind  attention  Jussi  and  others  who  are interested
  \  by akdevaraj Oct 19Any  doubt  so  far  pl? [P] Please show the proposition by
  pahio Oct 19Please show the proposition you want to prove.  Then give its proof
  in a concise and clear form.\r\n\r\nRegards,\r\n\r\nJussimore              \n      \n
  \   \n\n\n        \n      \n  Latest Messages   \n        \n           [P] No questions.
  by pahio Nov 10No questions. [P] sketch  proof  -  in  commonly  understood terminology
  by akdevaraj Nov 10I  would like to conclude  my  message  with one  point:\r\nThe
  fact  that  any  value  of n  skiped is  such  that\r\nf(n)  is prime  can be  proved:
  \ f(n)=n^2+n+1  is  such that\r\nwhenever  f(n)  is  composite  one  of  its  factors\r\nis
  \ smaller  than  n.  This implies  that  it  that  the  relevant\r\nn  has to  satisfy
  \ a  prior  failure function.\r\nAny  question,  Jussi? [P] sketch  proof  -  in
  \ commonly  understood terminology by akdevaraj Nov 9Note  a)  p_0  less than  p_1
  \ less  than  p_2 less  than   p_i\r\nb)  This  means  the  intervals  become  succeedingly
  \ bigger\r\nc)As  the fraction  of  primes  in  each  interval  becomes\r\nsuceedingly
  \ smaller  it  may  appear  that  the  number  of  primes \r\ni.e.  the  number
  \ of  ns  not  overed  by  any  failure function\r\nbecomes smaller-  actually it
  may  turn out that  the  number\r\nof  primes  become  bigger since  the intervals
  become  bigger\r\nd)  there  is no  need  to  test  any  f(n)  where n  is  \r\nskiped
  \ by the failure  functions  for  primality -  they  are\r\nautomatically  prime
  \ e)  my  conjecture  is  that the value\r\nof beta is 0.03  -  even  if  beta  is
  \ 0.01  it  makes  no \r\ndifference  since  the perpetuality of  the iteration
  \ is \r\nestablished  f)  only  a  competent  programmer  can  program\r\nthe  failure
  functions  and the iteration  g)to  go  from\r\niteration  i  to  iteration i+1
  \ we  need only  one  value of\r\nn  not covered  by  any  falure  function  h)
  \ the  iteration\r\ncan  come to  an end  only  if all  the  values of  n\r\nin
  \ an  interval  are covered  by  one  or more  of  the failure\r\nfunctions  (  this
  is highly  improbable )\r\n                                      (to  be continued)
  [P] sketch  proof  -  in  commonly  understood terminology by akdevaraj Nov 9Since
  \ the  fraction of  values  of n  in  any  interval  which  are\r\nnot  covered
  \ by  any  failure function  decreases  asymptotically\r\nto  beta  the  iteration
  is  perpetual. This  is because  the\r\nfraction  of  primes  in  any interval never
  reaches  zero  -  hence\r\nthere  are  infinitely  many  primes  of  shape  n^2+n+1
  \ (proved-\r\nsubject  to  confirmation  by  a  programmer.)\r\n               (to
  be continued). [P] sketch  proof  -  in  commonly  understood terminology by akdevaraj Nov
  8Before  proceeding  let me  emphasise  that  the  values  of  \r\nn  skiped by
  \ the  failure functions  i.e. n_0+kf(n_0)  are\r\nsuch  that f(n)  are prime  and
  they need not be  tested for\r\nprimality.\r\nWe  now  set  up  an  iteration  as
  \ follows: Let  p_0  be\r\nthe largest  known  prime having  shape  n^2+n+1.  Let
  \ n_0\r\nbe  the corresponding  value  of  n i.e.  n_0^2+n_0+1  =\r\np_0. Consider
  \ the  interval  n_0,  n_0+p_0.  I   am  considering\r\nthis  interval because  f(n_0+kf(n_0))
  \ is  congruent  to 0\r\n(mod f(n_0)).\r\nNote  the  fraction  of  this  interval
  \ not  covered  by the\r\nfailure  functions(  arithmetic  progressions)  1+3k,
  2+7k, 3+13k\r\n4+7k............ .  Let  n_1  be  the largest  of  these  values\r\nof
  \ n  not  covered  by  any  failure  function. f(n_1)  is  prime\r\nwhich  need
  not be  tested  for  primality.  Let this  prime \r\nbe p_1.  2nd  iteration:  consider
  \ the  interval n_1, n_1 +p_1.\r\nproceed  as in  the  1st  iteration  i.e.  mark
  \ the  fraction of\r\nvalues  of n  in this interval not covered  by  any  failure
  function.\r\nLet  n_2  be  the largest  value  of  n  in this  interval not\r\ncovered
  \ by  any failure function.  f(n_2)  is  prime; call  this\r\np_2.  Consider  the
  \ interval  n_2,  n_2 + p_2.  Mark  the\r\nfraction  of values of  n in this  interval
  \ not  covered  by\r\nany  failure function.  The  fraction  of values  of n  not\r\ncovered
  \ by  any  failure  function  in  any  interval  decreases\r\nasymptotically  from
  iteration to iteration  to  a   rational  number-  call  this  beta\r\n                       (to
  \ be continued ). [P] sketch  proof  -  in  commonly  understood terminology by
  akdevaraj Nov 8This  means  we  have  a case of indirect  primality testing:\r\nf(n)
  \ is  composite  if  n = n_0 +kf(n_0).  Otherwise\r\nf(n)  is  prime.  Note  we
  \ are  not testing  f(n)\r\ndirectly  for primality; we are  only  testing\r\nwhether
  \ is n  is  generated by  n_0+kf(n_0); if  so\r\nf(n)  is composite-if not  f(n)
  \ is  prime.\r\n                                          (to  be  continued)\r\n
  [P] sketch  proof  -  in  commonly  understood terminology by akdevaraj Nov 6Let
  me be very  clear as to  what  counter  example  you\r\nshould try to  find;  I
  \ will  do  this  by  taking\r\na  specific  interval -  n = 5  to  36.This  interval\r\nis
  spaned by  the failure  functions(  arithmetic \r\nprogressions )  1+3k, 2+7k,  3
  +13k,  4 +7k  and\r\n5+31k, 7+19k  and  9+13k.  However  the  values of n\r\nskiped
  by  the  above  are  5,6, 8, 12, 14, 15, 17, 20, 21,\r\n24,27 and  33.  Now  all
  \ these  skiped  values  of  n  are  such\r\nthat  f(n)  is  prime.  So  you  have
  to  find  a value  of  \r\nn  skiped  by  the  relevant  failure  functions  such
  \ that\r\nf(n)  is  composite.  Such  a  counter example  may  be  very\r\ndifficult
  to  find. [P] sketch  proof  -  in  commonly  understood terminology by akdevaraj Nov
  6I  forgot  to  mention that  k  belongs  to  Z.\r\nNow  I  will  take a  break
  \ for two  days  to  enable you  to\r\nfind  a counter-example.\r\n                               (to
  \ be continued) [P] sketch  proof  -  in  commonly  understood terminology by akdevaraj Nov
  6Let  me  summarise up  to the  point  I  had  already  contributed:\r\nlet  f(n)
  \ =  n^2 + n  +  1 ( n belongs to  N). Let  n_0 be  a  \r\nspecific value  of  n.
  \  Then  n  =  n_0 + kf(n_0)  generates  values\r\nof n  such  that  f(n)  is  composite.\r\nNote:
  \ please  ignore  trivial  cases  like k = 0.\r\nThis is  easily  proved.  All  other
  \ values  of  n  are such\r\nthat  f(n)  is prime.\r\n                                             (to
  be  continued). [P] Sketch  proof -the  proposition by akdevaraj Nov 2Thank  you,
  Jussi.\r\nProposition:  There  are infinitely  many  prime  numbers  with  shape\r\nn^2+n+1.
  [P] sketch proof by pahio Nov 1Yes.  First the proposition! [P] sketch  proof  -
  \ in  commonly  understood terminology by akdevaraj Nov 1Dear  Jussi,  would you
  \ like  me to  continue? [P] Kind  attention  Jussi  and  others  who  are interested
  \  by akdevaraj Oct 19Any  doubt  so  far  pl? [P] Please show the proposition by
  pahio Oct 19Please show the proposition you want to prove.  Then give its proof
  in a concise and clear form.\r\n\r\nRegards,\r\n\r\nJussimore              \n      \n
  \   \n\n\n\n\n\n  (function($){\n    $(document).ready(function(){\n       $(\"#front-left-block-tabs\").tabs();\n
  \      // $(\"#front-right-block-tabs\").tabs();\n       $(\"#front-left-mid-block-tabs\").tabs();\n
  \      //       $(\"#front-right-mid-block-tabs\").tabs();\n       // $(\"#front-left-bot-block-tabs\").tabs();\n\n
  \  ////////////// resize the top block\n   var max_lines =0;\n   var min_line_height
  = 10;\n   // console.log(\"look inside\");\n   // look inside each block\n   jQuery('#front-left-block-tabs').each(
  function(){\n       // look inside each span\n       var num_lines =1;\n       var
  this_line_height =10;\n       jQuery(this).find('span').each( function(){\n           if
  ($(this).css('display') != 'none'){\n\t   // count the number of lines in this span\n\t
  \  num_lines += Math.ceil(jQuery(this).text().length/84);\n\t   max_lines = Math.max(max_lines,num_lines);\n
  \          }\n         });\n\n       this_line_height = (790/num_lines);\n       min_line_height
  = Math.min(this_line_height,min_line_height);\n\n       // now that we know how
  many lines in THIS block\n       // we set the line height in this block accordingly\n
  \      jQuery(this).css('line-height',this_line_height+'px')\n       jQuery(this).css('height',Math.ceil((max_lines*min_line_height*1.67))+'px');\n
  \     });\n        ////////////// end of resizing the top block\n\n    //// Define
  the toggle action for the green plus\n\n    // This works, but the inter-line spacing
  seems a little off.\n   var TextHidden = true;\n\n    jQuery(\"#toggle-hidden-text-controller\").click(function(){\n
  \     jQuery('.toggle-hidden-text').toggle('slow', function(){});\n      ResizeFunc();\n
  \    });\n\n       // We must resize the lower block repeatedly, so we define this
  as a function\n       var ResizeFunc = function() {\n\n         console.log(\"Resize
  envoked\");\n         TextHidden = !TextHidden;\n\n         var max_lines =0;\n
  \        var min_line_height = 10;\n\n       jQuery('#front-left-mid-block-tabs').each(
  function(){\n\n             var num_lines =1;\n             var this_line_height
  =10;\n\n             // look inside each span\n             jQuery(this).find('span').each(
  function(){\n                 if ($(this).css('display') != 'none'){\n                 //
  count the number of lines in this span\n                   num_lines += Math.ceil(jQuery(this).text().length/84);\n
  \                  max_lines = Math.max(max_lines,num_lines);\n                 }\n
  \            });\n\n             // - ($(this).css('display') != 'none')\n             //
  look inside each div\n             if (!TextHidden){\n             jQuery(this).find('.toggle-hidden-text').each(
  function(){\n  \t     // count the number of lines in this div\n                num_lines
  += Math.ceil(jQuery(this).text().length/84);\n                max_lines = Math.max(max_lines,num_lines);\n
  \            });\n             }\n\n             this_line_height = (780/num_lines);\n
  \            min_line_height = Math.min(this_line_height,min_line_height);\n\n             //
  now that we know how many lines in THIS block\n             // we set the line height
  in this block accordingly\n             if(!TextHidden){\n               multiplier=1.7;\n
  \            } else {\n               multiplier=1;\n             }\n\n             var
  FinalHeight = Math.ceil((max_lines*min_line_height*1.65));\n             jQuery(this).css('line-height',multiplier*this_line_height+'px')\n
  \            jQuery(this).css('height', FinalHeight+'px');\n             console.log(FinalHeight);\n
  \     });\n     }\n\n     // ResizeFunc();\n\n    })\n  })(jQuery);\n\n      \n\n
  \    \n  \n    \n      Search form\n    \n  Search \n \n\n  \n\n\n\n\n  \n    Home\nArticles\nQuestions\n\n\n\n\n
  \ \n    ForumsPlanetary Bugs\nHS/Secondary\nUniversity/Tertiary\nGraduate/Advanced\nIndustry/Practice\nResearch
  Topics\nLaTeX help\nMath Comptetitions\nMath History\nMath Humor\nPlanetMath Comments\nPlanetMath
  System Updates and News\nPlanetMath help\nPlanetMath.ORG\nStrategic Communications
  Development\nThe Math Pub\nTesting messages (ignore)\n\nOther useful stuffGallery\nSite
  Docs\n\nCorrections\n\n\n    \n \n\n      \n      \n\n       News\n    \n  \n    2014-01-09Development
  Discussion on  11 January  by rspuzio2013-12-25Community Discussion on 4 January
  \ by rspuzio2013-11-114th quarter board meeting - 16 November 2013  by rspuzio2013-11-03Development
  Discussion on 9 November  by rspuzio2013-10-30Community Discussion on 2 November
  \ by rspuzio2013-10-02Community Discussion on 5 October  by rspuzio2013-09-02New
  improved editor and faster page loads  by unlordmore  \n\n\n\n\n       Top Users\n
  \   \n  \n    pahio139249 CWoo138343 bci199403 rspuzio65038 PrimeFan52255 Wkbj7949531
  Mathprof46699 more  \n\n\n\n\n       Latest Revisions\n    \n  \n    2015-12-14Non-Newtonian
  Calculus  by smithpith2015-11-18field of algebraic numbers  by pahioexample of solving
  a cubic equation  by pahio2015-11-17number  by pahio2015-11-14Sharam Kohan  by MaryamVahedi2015-11-11Mayan
  Seasonal Almanac  by milogardner2015-11-07field arising from special relativity
  \ by pahiomore  \n\n\n      \n    \n \n\n  \n\n    \n    \n\n     \n  \n    Powered
  By:  =  +  + ♡    \n\n\n  \n\n\n\n  PlanetMath is a virtual community which aims
  to help make mathematical knowledge more accessible. PlanetMath's content is created
  collaboratively: the main feature is the mathematics encyclopedia with entries written
  and reviewed by members. The entries are contributed under the terms of the Creative
  Commons By/Share-Alike License in order to preserve the rights of authors, readers
  and other content creators in a sensible way.  We use LaTeX, the\nlingua franca
  of the worldwide mathematical community.\n  Beginning February 23th 2015 we experienced
  15 days of downtime when our server stopped working.  We moved a backup to DigitalOcean,
  and we're back online.  Some features aren't working yet; we're restoring them ASAP.
  \ Please report bugs in the Planetary Bugs Forum or on Github."
